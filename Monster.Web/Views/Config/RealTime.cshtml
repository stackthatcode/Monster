@using Monster.Web.Plumbing


<div class="center std-padding">
    <img style="width: 125px;" src="@GlobalConfig.Url("Content/ShopifySyncWithAcumatica.png")" />
</div>

<hr/>


<div>
    <h1 class="mt-5 center">Odysseus Real-Time Mode</h1>
    <p class="lead center">
        Active Synchronization between Shopify and Acumatica
    </p>
</div>

<div class="std-padding">
    <div class="card">

        <!-- If Real Time Synchronization is Enabled -->
        <div class="card-body std-padding">
            <h5 class="card-title center">Real-Time Synchronization Enabled</h5>

            <p>Odysseus is busy working behind the scenes keeping your
                Shopify storefront and your Acumatica ERP system synchronized.
            </p>

            <p>No more person-hours wasted copying and loading data between systems.
                Now you can focus on growing your business!
            </p>
            
            <!-- Real-Time Feedback -->
        </div>
    </div>

    <div class="center std-padding">
        <a href="@GlobalConfig.Url("Config/Preferences")"
           class="btn btn-secondary btn-lg">
            <i class="fas fa-undo"></i> Go Back to Config
        </a>

        <a href="#"
           data-bind="click: StartRealTimeClick"
           class="btn btn-primary btn-lg">Start Real-Time Monitoring
            <i class="fas fa-bolt"></i>
        </a>
    </div>
</div>

<script>
    var Monster = Monster || {};

    Monster.InventoryConfigModel = function() {
        var self = this;

        self.Step1Visible = ko.observable();
        self.Step2Visible = ko.observable();

        self.ClearVisibility = function() {
            self.Step1Visible(false);
            self.Step2Visible(false);
        };

        self.StartRealTimeClick = function() {
            flow.exec(function() {
                    var ajax = new Monster.Ajax();
                    ajax.HttpPost("Config/StartRealTime", {}, this);
                },
                function() {
                    self.PollStatus();
                });
        }

        // Add Polling Function
        self.PollStatus = function() {

        };

        return self;
    }


    var model = new Monster.InventoryConfigModel();
    model.Initialize();
    ko.applyBindings(model);
    model.PollStatus();
</script>