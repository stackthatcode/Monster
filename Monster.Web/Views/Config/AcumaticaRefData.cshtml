@using Monster.Web.Plumbing
@model Monster.Web.Models.Config.SettingsSelectionsModel


<style>
    .form-group label { font-weight: 700; }
</style>

<main role="main" class="medium-size">

    @Html.Partial("_TopBrand")

    <hr />
    <h1 class="mt-4 center">Configuration - Acumatica</h1>
    <p class="lead center">
        Configuration of Acumatica reference data for @GlobalConfig.AppName
    </p>

    <div data-bind="ifnot: JobRunningModel.AreAnyJobsRunning">
        <div data-bind="if: ReferenceDataState() == StateCode.None">
            <p>
                This next step will require you to configure Acumatica so that
                @GlobalConfig.AppName can properly synchronize you Shopify data.
                This will involve creating Item Classes, Payment Methods, Cash Accounts, Tax Categories
                and other data in Acumatica.
            </p>

            <div data-bind="template: { name: 'Pdf-Download' }"></div>
        </div>

        <div data-bind="if: ReferenceDataState() == StateCode.Ok">
            <div class="alert alert-primary">
                <strong>Acumatica Reference Data Pull - Successful</strong>
                <br/>
                Your Acumatica reference data was properly configured and has been loaded.
            </div>

            <div data-bind="template: { name: 'Pdf-Download' }"></div>
        </div>

        <div data-bind="if: ReferenceDataState() == StateCode.SystemFault">
            <div class="alert alert-danger">
                <strong>Acumatica Reference Data Pull - System Fault</strong><br/>
                Something is wrong with your Acumatica Connection.
            </div>

            <p>
                @GlobalConfig.AppName encounter an error while attempting
                to pull reference data from your Acumatica instance.
                You can try reconnecting, but if the problem persists,
                you may consider re-entering your Acumatica credentials.
            </p>
        </div>

        <div data-bind="if: ReferenceDataState() == StateCode.Invalid">
            <div class="alert alert-danger">
                <strong>Acumatica Reference Data Pull - Invalid Data</strong><br/>
                Your Acumatica instance data is not properly configured.
            </div>
            <div data-bind="template: { name: 'Pdf-Download' }"></div>
        </div>

        <div>
            <div class="center std-pad">
                <span data-bind="if: IsPrevButtonVisible">
                    <a href="@GlobalConfig.Url("/Config/AcumaticaConnection")"
                       class="btn btn-secondary btn-lg">
                        Previous Step <i class="fas fa-undo"></i>
                    </a>
                </span>

                <span data-bind="if: IsReturnButtonVisible">
                    <a href="@GlobalConfig.DiagnosticsHome"
                       class="btn btn-secondary btn-lg">
                        Back to Diagnostics <i class="fas fa-undo"></i>
                    </a>
                </span>

                <span data-bind="ifnot: HasReferenceDataBeenPulled">
                    <a href="#" class="btn btn-primary btn-lg"
                       data-bind="click: ConnectToAcumatica">
                        Pull Reference Data <i class="fas fa-bolt"></i>
                    </a>
                </span>

                <span data-bind="if: HasReferenceDataBeenPulled">
                    <a href="#" class="btn btn-primary btn-lg"
                       data-bind="click: ConnectToAcumatica">
                        Refresh Reference Data <i class="fas fa-bolt"></i>
                    </a>
                </span>

                <span data-bind="if: IsNextButtonVisible">
                    <a href="@GlobalConfig.Url("/Config/Settings")"
                       class="btn btn-success btn-lg">
                        Next Step <i class="fas fa-sign-in-alt"></i>
                    </a>
                </span>
            </div>
        </div>
    </div>

    <div data-bind="if: JobRunningModel.AreAnyJobsRunning">
        <div class="card">
            <div class="card-body center">
                <div class="std-pad-b">
                    <div data-bind="template: { name: 'Job-Running-Panel', data: JobRunningModel }"></div>
                </div>
            </div>
        </div>
    </div>
</main>

<script type="text/html" id="Pdf-Download">
    <div style="height:30px;"></div>
    <div class="card">
        <div class="card-body center">
            <div data-bind="if: ReferenceDataState() != StateCode.Ok">
                <p>
                    Download the following PDF document and execute all of the steps
                    to prepare your Acumatica instance for synchronization with Shopify.
                </p>
            </div>

            <div data-bind="if: ReferenceDataState() == StateCode.Ok">
                <p>
                    You can download the following PDF document as a reference
                    in case you want to change the way your Acumatica instance
                    is configured.
                </p>
            </div>

            <a target="_blank"
               href="@GlobalConfig.Url("/Content/Docs/Configuring Acumatica for Synchronization.pdf")">
                <img style="width: 100px;" src="@GlobalConfig.Url("/Content/pdf-icon.png")" />

                <p class="center" style="font-weight: 700; margin-top: 20px;">
                    Download - Configuring Acumatica for Bridge Synchronization
                </p>
            </a>
        </div>
    </div>
</script>

<script>
    var Monster = Monster || {};

    Monster.AcumaticaRefDataModel = function () {
        var self = this;

        self.JobRunningModel = new Monster.JobStatusModel();

        // System State
        //
        self.ReferenceDataState = ko.observable();
        self.IsRandomAccessMode = ko.observable();
        self.Validations = ko.observable();


        self.HasReferenceDataBeenPulled = ko.computed(function () {
            return self.ReferenceDataState() != StateCode.None;
        });

        self.IsReferenceDataOk = ko.computed(function () {
            return self.ReferenceDataState() == StateCode.Ok;
        });

        self.IsReferenceDataBroken = ko.computed(function () {
            return self.ReferenceDataState() == StateCode.SystemFault
                || self.ReferenceDataState() == StateCode.Invalid;
        });


        // Control-visibility
        //
        self.IsNextButtonVisible = ko.computed(function () {
            return !self.IsRandomAccessMode() && self.IsReferenceDataOk();
        });

        self.IsPrevButtonVisible = ko.computed(function () {
            return !self.IsRandomAccessMode();
        });

        self.IsReturnButtonVisible = ko.computed(function () {
            return self.IsRandomAccessMode();
        });


        // Actions
        //
        self.ConnectToAcumatica = function () {
            var ajax = new Monster.Ajax();
            ajax.HttpPost("/Config/AcumaticaRefDataPull", {});
        };

        self.ProcessStatus = function () {
            flow.exec(
                function() {
                    var ajax = new Monster.Ajax();
                    ajax.HttpGet("/Config/AcumaticaRefDataStatus", this);
                },
                function (response) {
                    //console.log(response);
                    self.ReferenceDataState(response.ReferenceDataState);
                    self.IsRandomAccessMode(response.IsRandomAccessMode);
                    self.Validations(response.Validations);
                });
        };

        Monster.Events.subscribe(Monster.JobStatusRunningComplete, self.ProcessStatus);

        self.Initialize = function () {
            self.JobRunningModel.StartPolling(true); 
        };

        return self;
    };

    $(document).ready(function() {
        var model = new Monster.AcumaticaRefDataModel();
        model.Initialize();
        ko.applyBindings(model);    
    });
</script>
