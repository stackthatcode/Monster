@using Monster.Web.Plumbing

<style>
    .form-group label { font-weight: 700; }
    #preferences .form-group { height: 120px; }
</style>

<main role="main" class="medium-size">
    @Html.Partial("_TopBrand")

    <hr />
    <h1 class="mt-4 center">Configuration - Settings</h1>
    <p class="lead center">
        Choose settings to control how @GlobalConfig.AppName synchronizes your data with Acumatica.
    </p>

    <div data-bind="ifnot: IsRandomAccessMode">
        <p>
            Make selections below to dictate how your data is transferred between systems.
        </p>
    </div>

    <div data-bind="template: { name: 'Preferences-Editor' }"></div>
</main>


<script type="text/html" id="Preferences-Editor">
    <div data-bind="if: ShowRefDataErrorMessage">
        <div class="std-pad">
            <div class="alert alert-danger">
                <strong>Acumatica Reference Data Pull - Broken</strong>
                <br />
                There's something wrong with your Acumatica reference data.
            </div>

            <p>
                Before setting preferences, your Acumatica reference data
                needs to be properly configured. You can address this now by
                <a href="@GlobalConfig.Url("Config/AcumaticaRefData")"><strong>clicking here</strong></a>.
            </p>
        </div>
    </div>

    <div data-bind="if: ShowDataEntry">
        <div class="card text-center">
            <div id="preferences" class="card-body left">
                <!-- Time Zone -->
                <div class="form-group">
                    <label for="timeZone">Acumatica Instance Time Zone</label>

                    <select id="timeZone" class="form-control"
                            data-bind="value: SelectedTimeZone,
                                    options: TimeZones,
                                    optionsText: 'Name',
                                    value: SelectedTimeZone,
                                    optionsCaption: 'Choose...'"></select>

                    <small id="timeZoneHelp" class="form-text text-muted">
                        In order to synchronize properly, @GlobalConfig.AppName
                        needs to translate between time zones properly
                    </small>

                    <div class="error-message"
                         data-bind="if: ShowValidation() && !TimeZoneValid()">
                        Please select the right Time Zone for your Acumatica Instance
                    </div>
                </div>

                <!-- Item Class -->
                <div class="form-group">
                    <label for="itemClass">Acumatica Default Item Class</label>

                    <select class="form-control"
                            id="itemClass"
                            data-bind="optionsCaption: 'Choose...',
                                    value: SelectedItemClass,
                                    options: ItemClasses,
                                    optionsText: 'ItemClass'"></select>

                    <small id="itemClassHelp" class="form-text text-muted">
                        @GlobalConfig.AppName will use this selection
                        when it creates Stock Items from Shopify Products
                    </small>

                    <div class="error-message"
                         data-bind="if: ShowValidation() && !ItemClassValid()">
                        Please select an Item Class with a valid Posting Class and Default Warehouse
                    </div>
                </div>

                <!-- Posting Class -->
                <div class="form-group">
                    <label for="postingClass">Acumatica Default Posting Class</label>

                    <div data-bind="ifnot: SelectedPostingClass">
                        <input type="text"
                               id="postingClass"
                               class="form-control"
                               disabled="disabled"
                               value="(Select an Item Class that has a Posting Class)" />
                    </div>

                    <div data-bind="if: SelectedPostingClass">
                        <input type="text"
                               id="postingClass"
                               class="form-control"
                               disabled="disabled"
                               data-bind="value: SelectedPostingClass" />
                    </div>

                    <small id="postingClassHelp" class="form-text text-muted">
                        @GlobalConfig.AppName will use this selection
                        when it creates Stock Items from Shopify Products
                    </small>
                </div>

                <!-- TODO - Selected Payment Gateways -->
                <!-- Posting Class -->
                <div class="form-group">
                    <label for="paymentGateways">Payment Gateways</label>

                    <small id="paymentGatewaysHelp" class="form-text text-muted">
                        Assign Acumatica Payment methods for all of the Payment Gateways you
                        currently have enabled in your Shopify store.
                    </small>
                </div>
            </div>

            <div class="card-footer text-muted">
                @GlobalConfig.AppName Settings Editor
            </div>
        </div>

        <div style="height:45px;" data-bind="if: ShowErrorSummary" class="center error-message">
            One or more items are not valid. Please review and correct.
        </div>
    </div>

    <div class="std-pad-b center">
        <div data-bind="ifnot: IsRandomAccessMode">
            <a href="@GlobalConfig.Url("Config/AcumaticaRefData")" class="btn btn-secondary btn-lg">
                <i class="fas fa-undo"></i> Previous Step
            </a>

            <a href="#" data-bind="click: GotoNextStepClick" class="btn btn-success btn-lg">
                Next Step <i class="fas fa-sign-in-alt"></i>
            </a>
        </div>

        <div data-bind="if: IsRandomAccessMode">
            <a href="@GlobalConfig.DiagnosticsHome" class="btn btn-secondary btn-lg">
                Back to Diagnostics <i class="fas fa-undo"></i>
            </a>

            <a href="#" class="btn btn-primary btn-lg" data-bind="click: SaveChangesClick">
                Save Changes <i class="fas fa-bolt"></i>
            </a>
        </div>
    </div>

    <!-- Payment Methods Pop-up TODO
    <div id="payment-methods" style="display:none;" class="card-body left">
        <div class="form-group">
            <label for="paymentMethod">Shopify Payment Gateway</label>

            <select class="form-control"
                    id="shopifyPaymentGateway"
                    data-bind="optionsCaption: 'Choose...',
                                        options: ShopifyGateways,
                                        optionsText: 'PaymentMethod',
                                        value: SelectedShopifyGateway"></select>

            <small id="shopifyPaymentGatewayHelp" class="form-text text-muted">
               Select a Shopify Payment Gateway
            </small>
        </div>

        <div class="form-group">
            <label for="paymentMethod">Acumatica Payment Method</label>

            <select class="form-control" id="paymentMethod"
                    data-bind="optionsCaption: 'Choose...',
                                        options: PaymentMethods,
                                        optionsText: 'PaymentMethod',
                                        value: SelectedPaymentMethod"></select>

            <small id="paymentMethodHelp" class="form-text text-muted">
                Select an Acumatica Payment Method to assign to the selected Gateway
            </small>

            <div class="error-message"
                 data-bind="if: ShowValidation() && !PaymentMethodValid()">
                Please select a Payment Method with a valid Cash Account
            </div>
        </div>

        <div class="form-group">
            <label for="cashAccountMethod">Acumatica Payment Cash Account</label>

            <div data-bind="if: CashAccounts().length == 0">
                <input type="text"
                       class="form-control"
                       disabled="disabled"
                       value="(Select a Payment Method that has a Cash Account)" />
            </div>

            <div data-bind="if: CashAccounts().length">
                <select class="form-control"
                        id="cashAccountMethod"
                        data-bind="options: CashAccounts, value: SelectedCashAccount"></select>
            </div>

            <small id="cashAccountMethodHelp" class="form-text text-muted">
                @GlobalConfig.AppName will use this selection when it creates Payments in Acumatica.
            </small>
        </div>
    </div>
    -->

</script>

<script>
    var Monster = Monster || {};

    Monster.PreferencesModel = function () {
        var self = this;

        self.ShowRefDataErrorMessage = ko.observable(false);
        self.ShowDataEntry = ko.observable(false);
        self.IsRandomAccessMode = ko.observable();

        // Reference data
        //
        self.TimeZones = ko.observableArray();
        self.ItemClasses = ko.observableArray();
        self.PaymentMethods = ko.observableArray();
        self.PaymentGateways = ko.observable();

        // Selected options
        //
        self.SelectedTimeZone = ko.observable();
        self.SelectedItemClass = ko.observable();
        self.SelectedPostingClass = ko.computed(
            function () {
                return self.SelectedItemClass() ? self.SelectedItemClass().PostingClass : null;
            });
        self.SelectedGateways = ko.observableArray();

        // Add Payment Gateway pop-up
        //
        self.SelectedGateway = ko.observable();
        self.SelectedPaymentMethod = ko.observable();

        // Validation
        //
        self.TimeZoneValid = ko.computed(function () { return self.SelectedTimeZone(); });

        self.ItemClassValid = ko.computed(function () {
            return self.SelectedItemClass() && self.SelectedPostingClass();
        });

        self.IsValid = ko.computed(function() {
            return self.TimeZoneValid() && self.ItemClassValid();
        });

        self.ShowValidation = ko.observable(false);

        self.ShowErrorSummary = ko.computed(function () {
            return self.ShowValidation() && !self.IsValid();
        });


        // Initialization stuff
        self.Initialize = function () {
            flow.exec(
                function() {
                    var ajax = new Monster.Ajax();
                    ajax.HttpGet("Config/AcumaticaRefDataStatus", this);
                },
                function (response) {
                    self.IsRandomAccessMode(response.IsRandomAccessMode);

                    if (response.IsBroken) {
                        self.ShowRefDataErrorMessage(true);
                        return;
                    }

                    var ajax = new Monster.Ajax();
                    ajax.HttpGet("Config/AcumaticaReferenceData", this);
                },
                function (response) {
                    // console.log(response);

                    self.TimeZones(response.TimeZones);
                    self.ItemClasses(response.ItemClasses);
                    self.PaymentMethods(response.PaymentMethods);
                    self.PaymentGateways(response.PaymentGateways);

                    // Pull selections
                    var ajax = new Monster.Ajax();
                    ajax.HttpGet("Config/SettingsSelections", this);
                },
                function (response) {

                    self.SelectedTimeZone(response.AcumaticaTimeZone);
                    self.SelectedItemClass(response.AcumaticaDefaultItemClass);
                    self.SelectedGateways(response.PaymentGateways);

                    var itemClass =
                        Monster.FindByField(self.ItemClasses(), 'ItemClass', response.AcumaticaDefaultItemClass);

                    self.SelectedItemClass(itemClass);

                    var timeZone = Monster.FindByField(self.TimeZones(), 'TimeZoneId', response.AcumaticaTimeZone);

                    self.SelectedTimeZone(timeZone);

                    self.ShowDataEntry(true);
                });
        };

        self.SaveChangesClick = function () {
            self.SaveChanges();
        }

        self.SaveChanges = function (callback) {
            flow.exec(function() {
                self.ShowValidation(true);
                if (!self.IsValid()) {
                    return;
                }

                var model = {};

                model.AcumaticaTimeZone = self.SelectedTimeZone().TimeZoneId;
                model.AcumaticaDefaultItemClass = self.SelectedItemClass().ItemClass;
                model.AcumaticaDefaultPostingClass = self.SelectedPostingClass();

                model.AcumaticaTaxZone = self.SelectedTaxZone();
                model.AcumaticaTaxId = self.SelectedTaxId();
                model.AcumaticaTaxCategory = self.SelectedTaxCategory();

                var ajax = new Monster.Ajax();
                ajax.HttpPost("Config/SettingsSelections", model, this);
            },
            function() {
                if (callback) {
                    callback();
                }
            });
        }

        self.GotoNextStepClick = function() {
            self.SaveChanges(
                function () {
                    if (!self.IsValid()) {
                        return;
                    }

                    window.location.href = '@GlobalConfig.Url("Config/PaymentMethods")';
                });
            };

        return self;
    };

    var model = new Monster.PreferencesModel();
    model.Initialize();
    ko.applyBindings(model);
</script>

