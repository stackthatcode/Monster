@using Monster.Web.Plumbing

<style>
    .form-group label { font-weight: 700; }
    #payment-methods .form-group { height: 120px; }
</style>

<main role="main" class="medium-size">
    @Html.Partial("_TopBrand")

    <hr />
    <h1 class="mt-4 center">Configuration - Tax Settings</h1>
    <p class="lead center">
        Choose settings to control how @GlobalConfig.AppName synchronizes your data with Acumatica.
    </p>

    <div data-bind="template: { name: 'Payment-Methods-Editor' }"></div>
</main>


<script type="text/html" id="Payment-Methods-Editor">
    <div data-bind="if: ShowErrorMessage">
        <div class="std-pad">
            <div class="alert alert-danger">
                <strong>Acumatica Reference Data - Broken</strong><br />
                There's something wrong with your Acumatica reference data.
            </div>
            <p>
                Your Acumatica reference data needs to be properly configured. You can address this now by
                <a href="@GlobalConfig.Url("Config/AcumaticaRefData")"><strong>clicking here</strong></a>.
            </p>
        </div>
    </div>

    <div data-bind="if: ShowDataEntry">
        <div class="card text-center">
            <div class="card-body left">
                <!-- Tax Zone -->
                <div class="form-group">
                    <label for="taxZone">Acumatica Tax Zone</label>

                    <select class="form-control" id="taxZone"
                            data-bind="optionsCaption: 'Choose...',
                                            value: SelectedTaxZone,
                                            options: TaxZones"></select>

                    <small id="taxZoneHelp"
                           class="form-text text-muted">
                        @GlobalConfig.AppName uses this selection for sales tax
                        in for Sales Orders, Debit and Credit Memos.
                    </small>

                    <div class="error-message" data-bind="if: ShowValidation() && !SelectedTaxZone()">
                        Please select a Tax Zone
                    </div>
                </div>

                <!-- Taxable Category -->
                <div class="form-group">
                    <label for="taxableCategory">Acumatica Taxable Category</label>

                    <select class="form-control" id="taxableCategory"
                            data-bind="optionsCaption: 'Choose...',
                                            value: SelectedTaxableCategory,
                                            options: TaxCategories">
                    </select>

                    <small id="taxableCategoryHelp" class="form-text text-muted">
                        Identity the Acumatica Tax Category for taxable order line items.
                    </small>

                    <div class="error-message" data-bind="if: ShowValidation() && !SelectedTaxableCategory()">
                        Please select a Tax Category
                    </div>
                </div>

                <!-- Tax-Exempt Category -->
                <div class="form-group">
                    <label for="taxExemptCategory">Acumatica Tax Exempt Category</label>

                    <select class="form-control" id="taxExemptCategory"
                            data-bind="optionsCaption: 'Choose...',
                                            value: SelectedTaxExemptCategory,
                                            options: TaxCategories"></select>

                    <small id="taxExemptCategoryHelp" class="form-text text-muted">
                        Identify the Acumatica Tax Category for tax-exempt order line items.
                    </small>

                    <div class="error-message" data-bind="if: ShowValidation() && !SelectedTaxExemptCategory()">
                        Please select a Tax Category
                    </div>
                </div>

                <!-- Line Item Tax ID -->
                <div class="form-group">
                    <label for="lineItemTaxId">Acumatica Line Item Tax ID</label>

                    <select class="form-control" id="lineItemTaxId"
                            data-bind="optionsCaption: 'Choose...',
                                            value: SelectedLineItemTaxId,
                                            options: TaxIds"></select>

                    <small id="lineItemTaxIdHelp" class="form-text text-muted">
                        Identify the Acumatica Tax ID to for line item taxes.
                    </small>

                    <div class="error-message" data-bind="if: ShowValidation() && !SelectedTaxId()">
                        Please select a Tax ID
                    </div>
                </div>
                
                <!-- Freight Tax ID -->
                <div class="form-group">
                    <label for="freightTaxId">Acumatica Freight Tax ID</label>
                    <select class="form-control" id="freightTaxId"
                            data-bind="optionsCaption: 'Choose...',
                                            value: SelectedFreightTaxId,
                                            options: TaxIds"></select>

                    <small id="freightTaxIdHelp" class="form-text text-muted">
                        Identify the Acumatica Tax ID to for freight/shipping charge taxes.
                    </small>
                    <div class="error-message" data-bind="if: ShowValidation() && !SelectedTaxId()">
                        Please select a Tax ID
                    </div>
                </div>
            </div>
            <div class="card-footer text-muted">
                @GlobalConfig.AppName Tax Settings Editor
            </div>
        </div>
        <div style="height:45px;" class="center error-message">
            <!--One or more items are not valid. Please review and correct.-->
        </div>
    </div>

    <div class="std-pad-b center">
        <div data-bind="ifnot: IsRandomAccessMode">
            <a href="@GlobalConfig.Url("Config/Settings")" class="btn btn-secondary btn-lg">
                <i class="fas fa-undo"></i> Previous Step
            </a>

            <a href="#" data-bind="click: GotoNextStepClick" class="btn btn-success btn-lg">
                Next Step <i class="fas fa-sign-in-alt"></i>
            </a>
        </div>

        <div data-bind="if: IsRandomAccessMode">
            <a href="@GlobalConfig.DiagnosticsHome" class="btn btn-secondary btn-lg">
                Back to Diagnostics <i class="fas fa-undo"></i>
            </a>

            <a href="#" class="btn btn-primary btn-lg" data-bind="click: SaveChangesClick">
                Save Changes <i class="fas fa-bolt"></i>
            </a>
        </div>
    </div>
</script>

<script>
    var Monster = Monster || {};

    Monster.SettingsTaxesModel = function () {
        var self = this;

        // Display state
        //
        self.ShowValidation = ko.observable(false);
        self.ShowErrorMessage = ko.observable(false);
        self.ShowDataEntry = ko.observable(false);
        self.IsRandomAccessMode = ko.observable();

        // Reference data - Taxes
        //
        self.TaxZones = ko.observableArray();
        self.TaxCategories = ko.observableArray();
        self.TaxIds = ko.observableArray();

        // User data entry
        //
        self.SelectedTaxZone = ko.observable();
        self.SelectedTaxableCategory = ko.observable();
        self.SelectedTaxExemptCategory = ko.observable();
        self.SelectedLineItemTaxId = ko.observable();
        self.SelectedFreightTaxId = ko.observable();

        // Validation
        //
        self.ShowValidation = ko.observable(false);

        // Initialization stuff
        //
        self.Initialize = function () {
            flow.exec(
                function() {
                    var ajax = new Monster.Ajax();
                    ajax.HttpGet("Config/AcumaticaRefDataStatus", this);
                },
                function (response) {
                    self.IsRandomAccessMode(response.IsRandomAccessMode);

                    if (response.IsBroken) {
                        self.ShowErrorMessage(true);
                        return;
                    }
                    
                    var ajax = new Monster.Ajax();
                    ajax.HttpGet("Config/AcumaticaReferenceData", this);
                },
                function (response) {
                    self.TaxZones(response.TaxZones);
                    self.TaxCategories(response.TaxCategories);
                    self.TaxIds(response.TaxIds);
                    
                    self.ShowDataEntry(true);

                    var ajax = new Monster.Ajax();
                    ajax.HttpGet("Config/SettingsTaxesSelections", this);
                },
                function (response) {
                    console.log(response);

                    self.SelectedTaxZone(response.AcumaticaTaxZone);
                    self.SelectedTaxableCategory(response.AcumaticaTaxableCategory);
                    self.SelectedTaxExemptCategory(response.AcumaticaTaxExemptCategory);
                    self.SelectedLineItemTaxId(response.AcumaticaLineItemTaxId);
                    self.SelectedFreightTaxId(response.AcumaticaFreightTaxId);
                });
        };

        self.SaveChangesClick = function () {
            self.SaveChanges();
        }

        self.SaveChanges = function (callback) {
            flow.exec(
                function () {
                    var model = {
                        AcumaticaTaxZone: self.SelectedTaxZone(),
                        AcumaticaTaxableCategory: self.SelectedTaxableCategory(),
                        AcumaticaTaxExemptCategory: self.SelectedTaxExemptCategory(),
                        AcumaticaLineItemTaxId: self.SelectedLineItemTaxId(),
                        AcumaticaFreightTaxId: self.SelectedFreightTaxId(),
                    };

                    var ajax = new Monster.Ajax();
                    ajax.HttpPost("Config/SettingsTaxesSelections", model, this);
                },
                function() {
                    if (callback) {
                        callback();
                    }
                });
        }

        self.GotoNextStepClick = function() {
            self.SaveChanges(
                function() {
                    window.location.href = '@GlobalConfig.Url("Config/Warehouses")';
                });
            };

        return self;
    };

    var model = new Monster.SettingsTaxesModel();
    model.Initialize();
    ko.applyBindings(model);
</script>

