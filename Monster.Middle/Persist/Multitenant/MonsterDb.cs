

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "Monster.Middle\App.config"
//     Connection String Name: "MonsterSystemConnection"
//     Connection String:      "Server=localhost;Database=Monster0001;Trusted_Connection=True;"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Developer Edition (64-bit)
// Database Engine Edition : Enterprise
// Database Version        : 14.0.1000.169

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Monster.Middle.Persist.Multitenant
{
    using System.Linq;

    #region Unit of work

    public interface IMonsterDataContext : System.IDisposable
    {
        System.Data.Entity.DbSet<UsrAcumaticaCreditMemo> UsrAcumaticaCreditMemoes { get; set; } // usrAcumaticaCreditMemo
        System.Data.Entity.DbSet<UsrAcumaticaCustomer> UsrAcumaticaCustomers { get; set; } // usrAcumaticaCustomer
        System.Data.Entity.DbSet<UsrAcumaticaInventoryReceipt> UsrAcumaticaInventoryReceipts { get; set; } // usrAcumaticaInventoryReceipt
        System.Data.Entity.DbSet<UsrAcumaticaInvoice> UsrAcumaticaInvoices { get; set; } // usrAcumaticaInvoice
        System.Data.Entity.DbSet<UsrAcumaticaSalesOrder> UsrAcumaticaSalesOrders { get; set; } // usrAcumaticaSalesOrder
        System.Data.Entity.DbSet<UsrAcumaticaShipment> UsrAcumaticaShipments { get; set; } // usrAcumaticaShipment
        System.Data.Entity.DbSet<UsrAcumaticaSoShipment> UsrAcumaticaSoShipments { get; set; } // usrAcumaticaSOShipment
        System.Data.Entity.DbSet<UsrAcumaticaStockItem> UsrAcumaticaStockItems { get; set; } // usrAcumaticaStockItem
        System.Data.Entity.DbSet<UsrAcumaticaWarehouse> UsrAcumaticaWarehouses { get; set; } // usrAcumaticaWarehouse
        System.Data.Entity.DbSet<UsrAcumaticaWarehouseDetail> UsrAcumaticaWarehouseDetails { get; set; } // usrAcumaticaWarehouseDetails
        System.Data.Entity.DbSet<UsrBatchState> UsrBatchStates { get; set; } // usrBatchState
        System.Data.Entity.DbSet<UsrPayoutPreference> UsrPayoutPreferences { get; set; } // usrPayoutPreferences
        System.Data.Entity.DbSet<UsrPreference> UsrPreferences { get; set; } // usrPreferences
        System.Data.Entity.DbSet<UsrShopifyCustomer> UsrShopifyCustomers { get; set; } // usrShopifyCustomer
        System.Data.Entity.DbSet<UsrShopifyFulfillment> UsrShopifyFulfillments { get; set; } // usrShopifyFulfillment
        System.Data.Entity.DbSet<UsrShopifyInventoryLevel> UsrShopifyInventoryLevels { get; set; } // usrShopifyInventoryLevels
        System.Data.Entity.DbSet<UsrShopifyLocation> UsrShopifyLocations { get; set; } // usrShopifyLocation
        System.Data.Entity.DbSet<UsrShopifyOrder> UsrShopifyOrders { get; set; } // usrShopifyOrder
        System.Data.Entity.DbSet<UsrShopifyOrderLineItem> UsrShopifyOrderLineItems { get; set; } // usrShopifyOrderLineItem
        System.Data.Entity.DbSet<UsrShopifyPayout> UsrShopifyPayouts { get; set; } // usrShopifyPayout
        System.Data.Entity.DbSet<UsrShopifyPayoutTransaction> UsrShopifyPayoutTransactions { get; set; } // usrShopifyPayoutTransaction
        System.Data.Entity.DbSet<UsrShopifyProduct> UsrShopifyProducts { get; set; } // usrShopifyProduct
        System.Data.Entity.DbSet<UsrShopifyRefund> UsrShopifyRefunds { get; set; } // usrShopifyRefund
        System.Data.Entity.DbSet<UsrShopifyVariant> UsrShopifyVariants { get; set; } // usrShopifyVariant
        System.Data.Entity.DbSet<UsrTenant> UsrTenants { get; set; } // usrTenant

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MonsterDataContext : System.Data.Entity.DbContext, IMonsterDataContext
    {
        public System.Data.Entity.DbSet<UsrAcumaticaCreditMemo> UsrAcumaticaCreditMemoes { get; set; } // usrAcumaticaCreditMemo
        public System.Data.Entity.DbSet<UsrAcumaticaCustomer> UsrAcumaticaCustomers { get; set; } // usrAcumaticaCustomer
        public System.Data.Entity.DbSet<UsrAcumaticaInventoryReceipt> UsrAcumaticaInventoryReceipts { get; set; } // usrAcumaticaInventoryReceipt
        public System.Data.Entity.DbSet<UsrAcumaticaInvoice> UsrAcumaticaInvoices { get; set; } // usrAcumaticaInvoice
        public System.Data.Entity.DbSet<UsrAcumaticaSalesOrder> UsrAcumaticaSalesOrders { get; set; } // usrAcumaticaSalesOrder
        public System.Data.Entity.DbSet<UsrAcumaticaShipment> UsrAcumaticaShipments { get; set; } // usrAcumaticaShipment
        public System.Data.Entity.DbSet<UsrAcumaticaSoShipment> UsrAcumaticaSoShipments { get; set; } // usrAcumaticaSOShipment
        public System.Data.Entity.DbSet<UsrAcumaticaStockItem> UsrAcumaticaStockItems { get; set; } // usrAcumaticaStockItem
        public System.Data.Entity.DbSet<UsrAcumaticaWarehouse> UsrAcumaticaWarehouses { get; set; } // usrAcumaticaWarehouse
        public System.Data.Entity.DbSet<UsrAcumaticaWarehouseDetail> UsrAcumaticaWarehouseDetails { get; set; } // usrAcumaticaWarehouseDetails
        public System.Data.Entity.DbSet<UsrBatchState> UsrBatchStates { get; set; } // usrBatchState
        public System.Data.Entity.DbSet<UsrPayoutPreference> UsrPayoutPreferences { get; set; } // usrPayoutPreferences
        public System.Data.Entity.DbSet<UsrPreference> UsrPreferences { get; set; } // usrPreferences
        public System.Data.Entity.DbSet<UsrShopifyCustomer> UsrShopifyCustomers { get; set; } // usrShopifyCustomer
        public System.Data.Entity.DbSet<UsrShopifyFulfillment> UsrShopifyFulfillments { get; set; } // usrShopifyFulfillment
        public System.Data.Entity.DbSet<UsrShopifyInventoryLevel> UsrShopifyInventoryLevels { get; set; } // usrShopifyInventoryLevels
        public System.Data.Entity.DbSet<UsrShopifyLocation> UsrShopifyLocations { get; set; } // usrShopifyLocation
        public System.Data.Entity.DbSet<UsrShopifyOrder> UsrShopifyOrders { get; set; } // usrShopifyOrder
        public System.Data.Entity.DbSet<UsrShopifyOrderLineItem> UsrShopifyOrderLineItems { get; set; } // usrShopifyOrderLineItem
        public System.Data.Entity.DbSet<UsrShopifyPayout> UsrShopifyPayouts { get; set; } // usrShopifyPayout
        public System.Data.Entity.DbSet<UsrShopifyPayoutTransaction> UsrShopifyPayoutTransactions { get; set; } // usrShopifyPayoutTransaction
        public System.Data.Entity.DbSet<UsrShopifyProduct> UsrShopifyProducts { get; set; } // usrShopifyProduct
        public System.Data.Entity.DbSet<UsrShopifyRefund> UsrShopifyRefunds { get; set; } // usrShopifyRefund
        public System.Data.Entity.DbSet<UsrShopifyVariant> UsrShopifyVariants { get; set; } // usrShopifyVariant
        public System.Data.Entity.DbSet<UsrTenant> UsrTenants { get; set; } // usrTenant

        static MonsterDataContext()
        {
            System.Data.Entity.Database.SetInitializer<MonsterDataContext>(null);
        }

        public MonsterDataContext()
            : base("Name=MonsterSystemConnection")
        {
        }

        public MonsterDataContext(string connectionString)
            : base(connectionString)
        {
        }

        public MonsterDataContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public MonsterDataContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public MonsterDataContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new UsrAcumaticaCreditMemoConfiguration());
            modelBuilder.Configurations.Add(new UsrAcumaticaCustomerConfiguration());
            modelBuilder.Configurations.Add(new UsrAcumaticaInventoryReceiptConfiguration());
            modelBuilder.Configurations.Add(new UsrAcumaticaInvoiceConfiguration());
            modelBuilder.Configurations.Add(new UsrAcumaticaSalesOrderConfiguration());
            modelBuilder.Configurations.Add(new UsrAcumaticaShipmentConfiguration());
            modelBuilder.Configurations.Add(new UsrAcumaticaSoShipmentConfiguration());
            modelBuilder.Configurations.Add(new UsrAcumaticaStockItemConfiguration());
            modelBuilder.Configurations.Add(new UsrAcumaticaWarehouseConfiguration());
            modelBuilder.Configurations.Add(new UsrAcumaticaWarehouseDetailConfiguration());
            modelBuilder.Configurations.Add(new UsrBatchStateConfiguration());
            modelBuilder.Configurations.Add(new UsrPayoutPreferenceConfiguration());
            modelBuilder.Configurations.Add(new UsrPreferenceConfiguration());
            modelBuilder.Configurations.Add(new UsrShopifyCustomerConfiguration());
            modelBuilder.Configurations.Add(new UsrShopifyFulfillmentConfiguration());
            modelBuilder.Configurations.Add(new UsrShopifyInventoryLevelConfiguration());
            modelBuilder.Configurations.Add(new UsrShopifyLocationConfiguration());
            modelBuilder.Configurations.Add(new UsrShopifyOrderConfiguration());
            modelBuilder.Configurations.Add(new UsrShopifyOrderLineItemConfiguration());
            modelBuilder.Configurations.Add(new UsrShopifyPayoutConfiguration());
            modelBuilder.Configurations.Add(new UsrShopifyPayoutTransactionConfiguration());
            modelBuilder.Configurations.Add(new UsrShopifyProductConfiguration());
            modelBuilder.Configurations.Add(new UsrShopifyRefundConfiguration());
            modelBuilder.Configurations.Add(new UsrShopifyVariantConfiguration());
            modelBuilder.Configurations.Add(new UsrTenantConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new UsrAcumaticaCreditMemoConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrAcumaticaCustomerConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrAcumaticaInventoryReceiptConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrAcumaticaInvoiceConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrAcumaticaSalesOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrAcumaticaShipmentConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrAcumaticaSoShipmentConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrAcumaticaStockItemConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrAcumaticaWarehouseConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrAcumaticaWarehouseDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrBatchStateConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrPayoutPreferenceConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrPreferenceConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrShopifyCustomerConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrShopifyFulfillmentConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrShopifyInventoryLevelConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrShopifyLocationConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrShopifyOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrShopifyOrderLineItemConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrShopifyPayoutConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrShopifyPayoutTransactionConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrShopifyProductConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrShopifyRefundConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrShopifyVariantConfiguration(schema));
            modelBuilder.Configurations.Add(new UsrTenantConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Database context factory

    public class MonsterDataContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<MonsterDataContext>
    {
        public MonsterDataContext Create()
        {
            return new MonsterDataContext();
        }
    }

    #endregion

    #region Fake Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeMonsterDataContext : IMonsterDataContext
    {
        public System.Data.Entity.DbSet<UsrAcumaticaCreditMemo> UsrAcumaticaCreditMemoes { get; set; }
        public System.Data.Entity.DbSet<UsrAcumaticaCustomer> UsrAcumaticaCustomers { get; set; }
        public System.Data.Entity.DbSet<UsrAcumaticaInventoryReceipt> UsrAcumaticaInventoryReceipts { get; set; }
        public System.Data.Entity.DbSet<UsrAcumaticaInvoice> UsrAcumaticaInvoices { get; set; }
        public System.Data.Entity.DbSet<UsrAcumaticaSalesOrder> UsrAcumaticaSalesOrders { get; set; }
        public System.Data.Entity.DbSet<UsrAcumaticaShipment> UsrAcumaticaShipments { get; set; }
        public System.Data.Entity.DbSet<UsrAcumaticaSoShipment> UsrAcumaticaSoShipments { get; set; }
        public System.Data.Entity.DbSet<UsrAcumaticaStockItem> UsrAcumaticaStockItems { get; set; }
        public System.Data.Entity.DbSet<UsrAcumaticaWarehouse> UsrAcumaticaWarehouses { get; set; }
        public System.Data.Entity.DbSet<UsrAcumaticaWarehouseDetail> UsrAcumaticaWarehouseDetails { get; set; }
        public System.Data.Entity.DbSet<UsrBatchState> UsrBatchStates { get; set; }
        public System.Data.Entity.DbSet<UsrPayoutPreference> UsrPayoutPreferences { get; set; }
        public System.Data.Entity.DbSet<UsrPreference> UsrPreferences { get; set; }
        public System.Data.Entity.DbSet<UsrShopifyCustomer> UsrShopifyCustomers { get; set; }
        public System.Data.Entity.DbSet<UsrShopifyFulfillment> UsrShopifyFulfillments { get; set; }
        public System.Data.Entity.DbSet<UsrShopifyInventoryLevel> UsrShopifyInventoryLevels { get; set; }
        public System.Data.Entity.DbSet<UsrShopifyLocation> UsrShopifyLocations { get; set; }
        public System.Data.Entity.DbSet<UsrShopifyOrder> UsrShopifyOrders { get; set; }
        public System.Data.Entity.DbSet<UsrShopifyOrderLineItem> UsrShopifyOrderLineItems { get; set; }
        public System.Data.Entity.DbSet<UsrShopifyPayout> UsrShopifyPayouts { get; set; }
        public System.Data.Entity.DbSet<UsrShopifyPayoutTransaction> UsrShopifyPayoutTransactions { get; set; }
        public System.Data.Entity.DbSet<UsrShopifyProduct> UsrShopifyProducts { get; set; }
        public System.Data.Entity.DbSet<UsrShopifyRefund> UsrShopifyRefunds { get; set; }
        public System.Data.Entity.DbSet<UsrShopifyVariant> UsrShopifyVariants { get; set; }
        public System.Data.Entity.DbSet<UsrTenant> UsrTenants { get; set; }

        public FakeMonsterDataContext()
        {
            _changeTracker = null;
            _configuration = null;
            _database = null;

            UsrAcumaticaCreditMemoes = new FakeDbSet<UsrAcumaticaCreditMemo>("Id");
            UsrAcumaticaCustomers = new FakeDbSet<UsrAcumaticaCustomer>("Id");
            UsrAcumaticaInventoryReceipts = new FakeDbSet<UsrAcumaticaInventoryReceipt>("MonsterId");
            UsrAcumaticaInvoices = new FakeDbSet<UsrAcumaticaInvoice>("Id");
            UsrAcumaticaSalesOrders = new FakeDbSet<UsrAcumaticaSalesOrder>("Id");
            UsrAcumaticaShipments = new FakeDbSet<UsrAcumaticaShipment>("Id");
            UsrAcumaticaSoShipments = new FakeDbSet<UsrAcumaticaSoShipment>("Id");
            UsrAcumaticaStockItems = new FakeDbSet<UsrAcumaticaStockItem>("MonsterId");
            UsrAcumaticaWarehouses = new FakeDbSet<UsrAcumaticaWarehouse>("Id");
            UsrAcumaticaWarehouseDetails = new FakeDbSet<UsrAcumaticaWarehouseDetail>("MonsterId");
            UsrBatchStates = new FakeDbSet<UsrBatchState>("Id");
            UsrPayoutPreferences = new FakeDbSet<UsrPayoutPreference>("Id");
            UsrPreferences = new FakeDbSet<UsrPreference>("Id");
            UsrShopifyCustomers = new FakeDbSet<UsrShopifyCustomer>("Id");
            UsrShopifyFulfillments = new FakeDbSet<UsrShopifyFulfillment>("Id");
            UsrShopifyInventoryLevels = new FakeDbSet<UsrShopifyInventoryLevel>("MonsterId");
            UsrShopifyLocations = new FakeDbSet<UsrShopifyLocation>("MonsterId");
            UsrShopifyOrders = new FakeDbSet<UsrShopifyOrder>("Id");
            UsrShopifyOrderLineItems = new FakeDbSet<UsrShopifyOrderLineItem>("Id");
            UsrShopifyPayouts = new FakeDbSet<UsrShopifyPayout>("ShopifyPayoutId");
            UsrShopifyPayoutTransactions = new FakeDbSet<UsrShopifyPayoutTransaction>("ShopifyPayoutId", "ShopifyPayoutTransId");
            UsrShopifyProducts = new FakeDbSet<UsrShopifyProduct>("MonsterId");
            UsrShopifyRefunds = new FakeDbSet<UsrShopifyRefund>("Id");
            UsrShopifyVariants = new FakeDbSet<UsrShopifyVariant>("MonsterId");
            UsrTenants = new FakeDbSet<UsrTenant>("CompanyId");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }

    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity> where TEntity : class
    {
        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;

        public FakeDbSet()
        {
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public FakeDbSet(params string[] primaryKeys)
        {
            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public override TEntity Find(params object[] keyValues)
        {
            if (_primaryKeys == null)
                throw new System.ArgumentException("No primary keys defined");
            if (keyValues.Length != _primaryKeys.Length)
                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

            var keyQuery = this.AsQueryable();
            keyQuery = keyValues
                .Select((t, i) => i)
                .Aggregate(keyQuery,
                    (current, x) =>
                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

            return keyQuery.SingleOrDefault();
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(System.Threading.CancellationToken cancellationToken, params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues), cancellationToken);
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues));
        }

        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }

        public override TEntity Add(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override System.Collections.Generic.IEnumerable<TEntity> RemoveRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Remove(entity);
            }
            return items;
        }

        public override TEntity Remove(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Remove(item);
            return item;
        }

        public override TEntity Attach(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Create()
        {
            return System.Activator.CreateInstance<TEntity>();
        }

        public override TDerivedEntity Create<TDerivedEntity>()
        {
            return System.Activator.CreateInstance<TDerivedEntity>();
        }

        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local
        {
            get { return _data; }
        }

        System.Type IQueryable.ElementType
        {
            get { return _query.ElementType; }
        }

        System.Linq.Expressions.Expression IQueryable.Expression
        {
            get { return _query.Expression; }
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); }
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator<TEntity> System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbAsyncQueryProvider<TEntity> : System.Data.Entity.Infrastructure.IDbAsyncQueryProvider
    {
        private readonly IQueryProvider _inner;

        public FakeDbAsyncQueryProvider(IQueryProvider inner)
        {
            _inner = inner;
        }

        public IQueryable CreateQuery(System.Linq.Expressions.Expression expression)
        {
            var m = expression as System.Linq.Expressions.MethodCallExpression;
            if (m != null)
            {
                var resultType = m.Method.ReturnType; // it shoud be IQueryable<T>
                var tElement = resultType.GetGenericArguments()[0];
                var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(tElement);
                return (IQueryable) System.Activator.CreateInstance(queryType, expression);
            }
            return new FakeDbAsyncEnumerable<TEntity>(expression);
        }

        public IQueryable<TElement> CreateQuery<TElement>(System.Linq.Expressions.Expression expression)
        {
            var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(typeof(TElement));
            return (IQueryable<TElement>)System.Activator.CreateInstance(queryType, expression);
        }

        public object Execute(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute(expression);
        }

        public TResult Execute<TResult>(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute<TResult>(expression);
        }

        public System.Threading.Tasks.Task<object> ExecuteAsync(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute(expression));
        }

        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<T>, IQueryable<T>
    {
        public FakeDbAsyncEnumerable(System.Collections.Generic.IEnumerable<T> enumerable)
            : base(enumerable)
        { }

        public FakeDbAsyncEnumerable(System.Linq.Expressions.Expression expression)
            : base(expression)
        { }

        public System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator());
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator()
        {
            return GetAsyncEnumerator();
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<T>(this); }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbAsyncEnumerator<T> : System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T>
    {
        private readonly System.Collections.Generic.IEnumerator<T> _inner;

        public FakeDbAsyncEnumerator(System.Collections.Generic.IEnumerator<T> inner)
        {
            _inner = inner;
        }

        public void Dispose()
        {
            _inner.Dispose();
        }

        public System.Threading.Tasks.Task<bool> MoveNextAsync(System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext());
        }

        public T Current
        {
            get { return _inner.Current; }
        }

        object System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current
        {
            get { return Current; }
        }
    }

    #endregion

    #region POCO classes

    // usrAcumaticaCreditMemo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaCreditMemo
    {
        public long Id { get; set; } // Id (Primary key)
        public long SalesOrderMonsterId { get; set; } // SalesOrderMonsterId
        public string AcumaticaCreditMemoId { get; set; } // AcumaticaCreditMemoId (length: 50)
        public string AcumaticaJson { get; set; } // AcumaticaJson (length: 10)
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated
    }

    // usrAcumaticaCustomer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaCustomer
    {
        public long Id { get; set; } // Id (Primary key)
        public string AcumaticaCustomerId { get; set; } // AcumaticaCustomerId (length: 50)
        public string AcumaticaMainContactEmail { get; set; } // AcumaticaMainContactEmail (length: 100)
        public string AcumaticaJson { get; set; } // AcumaticaJson
        public long? ShopifyCustomerMonsterId { get; set; } // ShopifyCustomerMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child UsrAcumaticaSalesOrders where [usrAcumaticaSalesOrder].[CustomerMonsterId] point to this entity (FK_usrAcumaticaSalesOrder_usrAcumaticaCustomer)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrAcumaticaSalesOrder> UsrAcumaticaSalesOrders { get; set; } // usrAcumaticaSalesOrder.FK_usrAcumaticaSalesOrder_usrAcumaticaCustomer

        // Foreign keys

        /// <summary>
        /// Parent UsrShopifyCustomer pointed by [usrAcumaticaCustomer].([ShopifyCustomerMonsterId]) (FK_usrAcumaticaCustomer_usrShopifyCustomer)
        /// </summary>
        public virtual UsrShopifyCustomer UsrShopifyCustomer { get; set; } // FK_usrAcumaticaCustomer_usrShopifyCustomer

        public UsrAcumaticaCustomer()
        {
            UsrAcumaticaSalesOrders = new System.Collections.Generic.List<UsrAcumaticaSalesOrder>();
        }
    }

    // usrAcumaticaInventoryReceipt
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaInventoryReceipt
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public string AcumaticaRefNumber { get; set; } // AcumaticaRefNumber (length: 50)
        public string AcumaticaJson { get; set; } // AcumaticaJson
        public bool IsReleased { get; set; } // IsReleased
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdate { get; set; } // LastUpdate

        // Reverse navigation

        /// <summary>
        /// Child UsrShopifyInventoryLevels where [usrShopifyInventoryLevels].[InventoryReceiptMonsterId] point to this entity (FK_usrShopifyInventoryLevels_usrAcumaticaInventoryReceipt)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrShopifyInventoryLevel> UsrShopifyInventoryLevels { get; set; } // usrShopifyInventoryLevels.FK_usrShopifyInventoryLevels_usrAcumaticaInventoryReceipt

        public UsrAcumaticaInventoryReceipt()
        {
            UsrShopifyInventoryLevels = new System.Collections.Generic.List<UsrShopifyInventoryLevel>();
        }
    }

    // usrAcumaticaInvoice
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaInvoice
    {
        public long Id { get; set; } // Id (Primary key)
        public string AcumaticaInvoiceId { get; set; } // AcumaticaInvoiceId (length: 50)
        public long CustomerMonsterId { get; set; } // CustomerMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated
    }

    // usrAcumaticaSalesOrder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaSalesOrder
    {
        public long Id { get; set; } // Id (Primary key)
        public string AcumaticaJson { get; set; } // AcumaticaJson
        public string AcumaticaSalesOrderId { get; set; } // AcumaticaSalesOrderId (length: 50)
        public string AcumaticaStatus { get; set; } // AcumaticaStatus (length: 25)
        public long? ShopifyOrderMonsterId { get; set; } // ShopifyOrderMonsterId
        public long CustomerMonsterId { get; set; } // CustomerMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child UsrAcumaticaSoShipments where [usrAcumaticaSOShipment].[SalesOrderMonsterId] point to this entity (FK_usrAcumaticaSOShipment_usrAcumaticaSalesOrder)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrAcumaticaSoShipment> UsrAcumaticaSoShipments { get; set; } // usrAcumaticaSOShipment.FK_usrAcumaticaSOShipment_usrAcumaticaSalesOrder

        // Foreign keys

        /// <summary>
        /// Parent UsrAcumaticaCustomer pointed by [usrAcumaticaSalesOrder].([CustomerMonsterId]) (FK_usrAcumaticaSalesOrder_usrAcumaticaCustomer)
        /// </summary>
        public virtual UsrAcumaticaCustomer UsrAcumaticaCustomer { get; set; } // FK_usrAcumaticaSalesOrder_usrAcumaticaCustomer

        /// <summary>
        /// Parent UsrShopifyOrder pointed by [usrAcumaticaSalesOrder].([ShopifyOrderMonsterId]) (FK_usrAcumaticaSalesOrder_usrShopifyOrder)
        /// </summary>
        public virtual UsrShopifyOrder UsrShopifyOrder { get; set; } // FK_usrAcumaticaSalesOrder_usrShopifyOrder

        public UsrAcumaticaSalesOrder()
        {
            UsrAcumaticaSoShipments = new System.Collections.Generic.List<UsrAcumaticaSoShipment>();
        }
    }

    // usrAcumaticaShipment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaShipment
    {
        public long Id { get; set; } // Id (Primary key)
        public string AcumaticaJson { get; set; } // AcumaticaJson
        public string AcumaticaShipmentId { get; set; } // AcumaticaShipmentId (length: 50)
        public long? ShopifyFulfillmentMonsterId { get; set; } // ShopifyFulfillmentMonsterId
        public long CustomerMonsterId { get; set; } // CustomerMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child UsrAcumaticaSoShipments where [usrAcumaticaSOShipment].[ShipmentMonsterId] point to this entity (FK_usrAcumaticaSOShipment_usrAcumaticaShipment1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrAcumaticaSoShipment> UsrAcumaticaSoShipments { get; set; } // usrAcumaticaSOShipment.FK_usrAcumaticaSOShipment_usrAcumaticaShipment1

        // Foreign keys

        /// <summary>
        /// Parent UsrShopifyFulfillment pointed by [usrAcumaticaShipment].([ShopifyFulfillmentMonsterId]) (FK_usrAcumaticaShipment_usrShopifyFulfillment)
        /// </summary>
        public virtual UsrShopifyFulfillment UsrShopifyFulfillment { get; set; } // FK_usrAcumaticaShipment_usrShopifyFulfillment

        public UsrAcumaticaShipment()
        {
            UsrAcumaticaSoShipments = new System.Collections.Generic.List<UsrAcumaticaSoShipment>();
        }
    }

    // usrAcumaticaSOShipment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaSoShipment
    {
        public long Id { get; set; } // Id (Primary key)
        public long? SalesOrderMonsterId { get; set; } // SalesOrderMonsterId
        public long ShipmentMonsterId { get; set; } // ShipmentMonsterId
        public string AcumaticaSalesOrderId { get; set; } // AcumaticaSalesOrderId (length: 50)
        public string AcumaticaShipmentId { get; set; } // AcumaticaShipmentId (length: 50)
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Foreign keys

        /// <summary>
        /// Parent UsrAcumaticaSalesOrder pointed by [usrAcumaticaSOShipment].([SalesOrderMonsterId]) (FK_usrAcumaticaSOShipment_usrAcumaticaSalesOrder)
        /// </summary>
        public virtual UsrAcumaticaSalesOrder UsrAcumaticaSalesOrder { get; set; } // FK_usrAcumaticaSOShipment_usrAcumaticaSalesOrder

        /// <summary>
        /// Parent UsrAcumaticaShipment pointed by [usrAcumaticaSOShipment].([ShipmentMonsterId]) (FK_usrAcumaticaSOShipment_usrAcumaticaShipment1)
        /// </summary>
        public virtual UsrAcumaticaShipment UsrAcumaticaShipment { get; set; } // FK_usrAcumaticaSOShipment_usrAcumaticaShipment1
    }

    // usrAcumaticaStockItem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaStockItem
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public string ItemId { get; set; } // ItemId (length: 100)
        public string AcumaticaJson { get; set; } // AcumaticaJson
        public long? ShopifyVariantMonsterId { get; set; } // ShopifyVariantMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child UsrAcumaticaWarehouseDetails where [usrAcumaticaWarehouseDetails].[ParentMonsterId] point to this entity (FK_usrAcumaticaWarehouseDetails_usrAcumaticaStockItem)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrAcumaticaWarehouseDetail> UsrAcumaticaWarehouseDetails { get; set; } // usrAcumaticaWarehouseDetails.FK_usrAcumaticaWarehouseDetails_usrAcumaticaStockItem

        // Foreign keys

        /// <summary>
        /// Parent UsrShopifyVariant pointed by [usrAcumaticaStockItem].([ShopifyVariantMonsterId]) (FK_usrAcumaticaStockItem_usrShopifyVariant)
        /// </summary>
        public virtual UsrShopifyVariant UsrShopifyVariant { get; set; } // FK_usrAcumaticaStockItem_usrShopifyVariant

        public UsrAcumaticaStockItem()
        {
            UsrAcumaticaWarehouseDetails = new System.Collections.Generic.List<UsrAcumaticaWarehouseDetail>();
        }
    }

    // usrAcumaticaWarehouse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaWarehouse
    {
        public long Id { get; set; } // Id (Primary key)
        public string AcumaticaWarehouseId { get; set; } // AcumaticaWarehouseId (length: 50)
        public string AcumaticaJson { get; set; } // AcumaticaJson
        public long? ShopifyLocationMonsterId { get; set; } // ShopifyLocationMonsterId
        public bool IsNameMismatched { get; set; } // IsNameMismatched
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child UsrAcumaticaWarehouseDetails where [usrAcumaticaWarehouseDetails].[WarehouseMonsterId] point to this entity (FK_usrAcumaticaWarehouseDetails_usrAcumaticaWarehouse)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrAcumaticaWarehouseDetail> UsrAcumaticaWarehouseDetails { get; set; } // usrAcumaticaWarehouseDetails.FK_usrAcumaticaWarehouseDetails_usrAcumaticaWarehouse

        // Foreign keys

        /// <summary>
        /// Parent UsrShopifyLocation pointed by [usrAcumaticaWarehouse].([ShopifyLocationMonsterId]) (FK_usrAcumaticaWarehouse_usrShopifyLocation)
        /// </summary>
        public virtual UsrShopifyLocation UsrShopifyLocation { get; set; } // FK_usrAcumaticaWarehouse_usrShopifyLocation

        public UsrAcumaticaWarehouse()
        {
            UsrAcumaticaWarehouseDetails = new System.Collections.Generic.List<UsrAcumaticaWarehouseDetail>();
        }
    }

    // usrAcumaticaWarehouseDetails
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaWarehouseDetail
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public long? ParentMonsterId { get; set; } // ParentMonsterId
        public string AcumaticaJson { get; set; } // AcumaticaJson
        public string AcumaticaWarehouseId { get; set; } // AcumaticaWarehouseId (length: 50)
        public double AcumaticaQtyOnHand { get; set; } // AcumaticaQtyOnHand
        public long WarehouseMonsterId { get; set; } // WarehouseMonsterId
        public bool ShopifyIsSynced { get; set; } // ShopifyIsSynced
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Foreign keys

        /// <summary>
        /// Parent UsrAcumaticaStockItem pointed by [usrAcumaticaWarehouseDetails].([ParentMonsterId]) (FK_usrAcumaticaWarehouseDetails_usrAcumaticaStockItem)
        /// </summary>
        public virtual UsrAcumaticaStockItem UsrAcumaticaStockItem { get; set; } // FK_usrAcumaticaWarehouseDetails_usrAcumaticaStockItem

        /// <summary>
        /// Parent UsrAcumaticaWarehouse pointed by [usrAcumaticaWarehouseDetails].([WarehouseMonsterId]) (FK_usrAcumaticaWarehouseDetails_usrAcumaticaWarehouse)
        /// </summary>
        public virtual UsrAcumaticaWarehouse UsrAcumaticaWarehouse { get; set; } // FK_usrAcumaticaWarehouseDetails_usrAcumaticaWarehouse
    }

    // usrBatchState
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrBatchState
    {
        public long Id { get; set; } // Id (Primary key)
        public System.DateTime? ShopifyProductsPullEnd { get; set; } // ShopifyProductsPullEnd
        public System.DateTime? ShopifyProductsDeletedEnd { get; set; } // ShopifyProductsDeletedEnd
        public System.DateTime? ShopifyOrdersPullEnd { get; set; } // ShopifyOrdersPullEnd
        public System.DateTime? ShopifyCustomersPullEnd { get; set; } // ShopifyCustomersPullEnd
        public System.DateTime? AcumaticaProductsPullEnd { get; set; } // AcumaticaProductsPullEnd
        public System.DateTime? AcumaticaCustomersPullEnd { get; set; } // AcumaticaCustomersPullEnd
        public System.DateTime? AcumaticaOrdersPullEnd { get; set; } // AcumaticaOrdersPullEnd
        public System.DateTime? AcumaticaShipmentsPullEnd { get; set; } // AcumaticaShipmentsPullEnd
    }

    // usrPayoutPreferences
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrPayoutPreference
    {
        public int Id { get; set; } // Id (Primary key)
        public string AcumaticaCashAccount { get; set; } // AcumaticaCashAccount (length: 50)
    }

    // usrPreferences
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrPreference
    {
        public long Id { get; set; } // Id (Primary key)
        public System.DateTime? DataPullStart { get; set; } // DataPullStart
        public double? DefaultCoGsMargin { get; set; } // DefaultCoGSMargin
        public string AcumaticaDefaultItemClass { get; set; } // AcumaticaDefaultItemClass (length: 50)
        public string AcumaticaDefaultPostingClass { get; set; } // AcumaticaDefaultPostingClass (length: 50)
        public System.DateTime? AcumaticaPostingDate { get; set; } // AcumaticaPostingDate
    }

    // usrShopifyCustomer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyCustomer
    {
        public long Id { get; set; } // Id (Primary key)
        public string ShopifyJson { get; set; } // ShopifyJson
        public long ShopifyCustomerId { get; set; } // ShopifyCustomerId
        public string ShopifyPrimaryEmail { get; set; } // ShopifyPrimaryEmail (length: 100)
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child UsrAcumaticaCustomers where [usrAcumaticaCustomer].[ShopifyCustomerMonsterId] point to this entity (FK_usrAcumaticaCustomer_usrShopifyCustomer)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrAcumaticaCustomer> UsrAcumaticaCustomers { get; set; } // usrAcumaticaCustomer.FK_usrAcumaticaCustomer_usrShopifyCustomer
        /// <summary>
        /// Child UsrShopifyOrders where [usrShopifyOrder].[CustomerMonsterId] point to this entity (FK_usrShopifyOrder_usrShopifyCustomer)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrShopifyOrder> UsrShopifyOrders { get; set; } // usrShopifyOrder.FK_usrShopifyOrder_usrShopifyCustomer

        public UsrShopifyCustomer()
        {
            UsrAcumaticaCustomers = new System.Collections.Generic.List<UsrAcumaticaCustomer>();
            UsrShopifyOrders = new System.Collections.Generic.List<UsrShopifyOrder>();
        }
    }

    // usrShopifyFulfillment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyFulfillment
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyFulfillmentId { get; set; } // ShopifyFulfillmentId
        public long ShopifyOrderId { get; set; } // ShopifyOrderId
        public string ShopifyStatus { get; set; } // ShopifyStatus (length: 50)
        public long OrderMonsterId { get; set; } // OrderMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child UsrAcumaticaShipments where [usrAcumaticaShipment].[ShopifyFulfillmentMonsterId] point to this entity (FK_usrAcumaticaShipment_usrShopifyFulfillment)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrAcumaticaShipment> UsrAcumaticaShipments { get; set; } // usrAcumaticaShipment.FK_usrAcumaticaShipment_usrShopifyFulfillment

        // Foreign keys

        /// <summary>
        /// Parent UsrShopifyOrder pointed by [usrShopifyFulfillment].([OrderMonsterId]) (FK_usrShopifyFulfillment_usrShopifyOrder)
        /// </summary>
        public virtual UsrShopifyOrder UsrShopifyOrder { get; set; } // FK_usrShopifyFulfillment_usrShopifyOrder

        public UsrShopifyFulfillment()
        {
            UsrAcumaticaShipments = new System.Collections.Generic.List<UsrAcumaticaShipment>();
        }
    }

    // usrShopifyInventoryLevels
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyInventoryLevel
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public long ParentMonsterId { get; set; } // ParentMonsterId
        public long ShopifyInventoryItemId { get; set; } // ShopifyInventoryItemId
        public long ShopifyLocationId { get; set; } // ShopifyLocationId
        public int ShopifyAvailableQuantity { get; set; } // ShopifyAvailableQuantity
        public long? LocationMonsterId { get; set; } // LocationMonsterId
        public long? InventoryReceiptMonsterId { get; set; } // InventoryReceiptMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Foreign keys

        /// <summary>
        /// Parent UsrAcumaticaInventoryReceipt pointed by [usrShopifyInventoryLevels].([InventoryReceiptMonsterId]) (FK_usrShopifyInventoryLevels_usrAcumaticaInventoryReceipt)
        /// </summary>
        public virtual UsrAcumaticaInventoryReceipt UsrAcumaticaInventoryReceipt { get; set; } // FK_usrShopifyInventoryLevels_usrAcumaticaInventoryReceipt

        /// <summary>
        /// Parent UsrShopifyLocation pointed by [usrShopifyInventoryLevels].([LocationMonsterId]) (FK_usrShopifyInventoryLevels_usrShopifyLocation)
        /// </summary>
        public virtual UsrShopifyLocation UsrShopifyLocation { get; set; } // FK_usrShopifyInventoryLevels_usrShopifyLocation

        /// <summary>
        /// Parent UsrShopifyVariant pointed by [usrShopifyInventoryLevels].([ParentMonsterId]) (FK_usrShopifyInventoryLevels_usrShopifyVariant)
        /// </summary>
        public virtual UsrShopifyVariant UsrShopifyVariant { get; set; } // FK_usrShopifyInventoryLevels_usrShopifyVariant
    }

    // usrShopifyLocation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyLocation
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public long ShopifyLocationId { get; set; } // ShopifyLocationId
        public string ShopifyJson { get; set; } // ShopifyJson
        public string ShopifyLocationName { get; set; } // ShopifyLocationName (length: 50)
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child UsrAcumaticaWarehouses where [usrAcumaticaWarehouse].[ShopifyLocationMonsterId] point to this entity (FK_usrAcumaticaWarehouse_usrShopifyLocation)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrAcumaticaWarehouse> UsrAcumaticaWarehouses { get; set; } // usrAcumaticaWarehouse.FK_usrAcumaticaWarehouse_usrShopifyLocation
        /// <summary>
        /// Child UsrShopifyInventoryLevels where [usrShopifyInventoryLevels].[LocationMonsterId] point to this entity (FK_usrShopifyInventoryLevels_usrShopifyLocation)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrShopifyInventoryLevel> UsrShopifyInventoryLevels { get; set; } // usrShopifyInventoryLevels.FK_usrShopifyInventoryLevels_usrShopifyLocation

        public UsrShopifyLocation()
        {
            UsrAcumaticaWarehouses = new System.Collections.Generic.List<UsrAcumaticaWarehouse>();
            UsrShopifyInventoryLevels = new System.Collections.Generic.List<UsrShopifyInventoryLevel>();
        }
    }

    // usrShopifyOrder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyOrder
    {
        public long Id { get; set; } // Id (Primary key)
        public string ShopifyJson { get; set; } // ShopifyJson
        public long ShopifyOrderId { get; set; } // ShopifyOrderId
        public string ShopifyOrderNumber { get; set; } // ShopifyOrderNumber (length: 50)
        public bool ShopifyIsCancelled { get; set; } // ShopifyIsCancelled
        public string ShopifyFinancialStatus { get; set; } // ShopifyFinancialStatus (length: 25)
        public bool AreLineItemsSynced { get; set; } // AreLineItemsSynced
        public long? CustomerMonsterId { get; set; } // CustomerMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child UsrAcumaticaSalesOrders where [usrAcumaticaSalesOrder].[ShopifyOrderMonsterId] point to this entity (FK_usrAcumaticaSalesOrder_usrShopifyOrder)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrAcumaticaSalesOrder> UsrAcumaticaSalesOrders { get; set; } // usrAcumaticaSalesOrder.FK_usrAcumaticaSalesOrder_usrShopifyOrder
        /// <summary>
        /// Child UsrShopifyFulfillments where [usrShopifyFulfillment].[OrderMonsterId] point to this entity (FK_usrShopifyFulfillment_usrShopifyOrder)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrShopifyFulfillment> UsrShopifyFulfillments { get; set; } // usrShopifyFulfillment.FK_usrShopifyFulfillment_usrShopifyOrder
        /// <summary>
        /// Child UsrShopifyOrderLineItems where [usrShopifyOrderLineItem].[MonsterOrderId] point to this entity (FK_usrShopifyOrderLineItem_usrShopifyOrder1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrShopifyOrderLineItem> UsrShopifyOrderLineItems { get; set; } // usrShopifyOrderLineItem.FK_usrShopifyOrderLineItem_usrShopifyOrder1
        /// <summary>
        /// Child UsrShopifyRefunds where [usrShopifyRefund].[OrderMonsterId] point to this entity (FK_usrShopifyRefund_usrShopifyOrder)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrShopifyRefund> UsrShopifyRefunds { get; set; } // usrShopifyRefund.FK_usrShopifyRefund_usrShopifyOrder

        // Foreign keys

        /// <summary>
        /// Parent UsrShopifyCustomer pointed by [usrShopifyOrder].([CustomerMonsterId]) (FK_usrShopifyOrder_usrShopifyCustomer)
        /// </summary>
        public virtual UsrShopifyCustomer UsrShopifyCustomer { get; set; } // FK_usrShopifyOrder_usrShopifyCustomer

        public UsrShopifyOrder()
        {
            UsrAcumaticaSalesOrders = new System.Collections.Generic.List<UsrAcumaticaSalesOrder>();
            UsrShopifyFulfillments = new System.Collections.Generic.List<UsrShopifyFulfillment>();
            UsrShopifyOrderLineItems = new System.Collections.Generic.List<UsrShopifyOrderLineItem>();
            UsrShopifyRefunds = new System.Collections.Generic.List<UsrShopifyRefund>();
        }
    }

    // usrShopifyOrderLineItem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyOrderLineItem
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyLineItemId { get; set; } // ShopifyLineItemId
        public long? ShopifyProductId { get; set; } // ShopifyProductId
        public long ShopifyVariantId { get; set; } // ShopifyVariantId
        public string ShopifySku { get; set; } // ShopifySku (length: 100)
        public long MonsterOrderId { get; set; } // MonsterOrderId
        public long? MonsterVariantId { get; set; } // MonsterVariantId

        // Foreign keys

        /// <summary>
        /// Parent UsrShopifyOrder pointed by [usrShopifyOrderLineItem].([MonsterOrderId]) (FK_usrShopifyOrderLineItem_usrShopifyOrder1)
        /// </summary>
        public virtual UsrShopifyOrder UsrShopifyOrder { get; set; } // FK_usrShopifyOrderLineItem_usrShopifyOrder1

        /// <summary>
        /// Parent UsrShopifyVariant pointed by [usrShopifyOrderLineItem].([MonsterVariantId]) (FK_usrShopifyOrderLineItem_usrShopifyVariant)
        /// </summary>
        public virtual UsrShopifyVariant UsrShopifyVariant { get; set; } // FK_usrShopifyOrderLineItem_usrShopifyVariant
    }

    // usrShopifyPayout
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyPayout
    {
        public long ShopifyPayoutId { get; set; } // ShopifyPayoutId (Primary key)
        public string ShopifyLastStatus { get; set; } // ShopifyLastStatus (length: 50)
        public string Json { get; set; } // Json (length: 2147483647)
        public bool AllShopifyTransDownloaded { get; set; } // AllShopifyTransDownloaded
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string AcumaticaCashAccount { get; set; } // AcumaticaCashAccount (length: 50)
        public string AcumaticaRefNumber { get; set; } // AcumaticaRefNumber (length: 50)
        public System.DateTime? AcumaticaImportDate { get; set; } // AcumaticaImportDate

        // Reverse navigation

        /// <summary>
        /// Child UsrShopifyPayoutTransactions where [usrShopifyPayoutTransaction].[ShopifyPayoutId] point to this entity (FK_usrShopifyPayoutTransaction_usrShopifyPayout)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrShopifyPayoutTransaction> UsrShopifyPayoutTransactions { get; set; } // usrShopifyPayoutTransaction.FK_usrShopifyPayoutTransaction_usrShopifyPayout

        public UsrShopifyPayout()
        {
            UsrShopifyPayoutTransactions = new System.Collections.Generic.List<UsrShopifyPayoutTransaction>();
        }
    }

    // usrShopifyPayoutTransaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyPayoutTransaction
    {
        public long ShopifyPayoutId { get; set; } // ShopifyPayoutId (Primary key)
        public long ShopifyPayoutTransId { get; set; } // ShopifyPayoutTransId (Primary key)
        public string Type { get; set; } // Type (length: 50)
        public string Json { get; set; } // Json (length: 2147483647)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public System.DateTime? AcumaticaImportDate { get; set; } // AcumaticaImportDate
        public string AcumaticaExtRefNbr { get; set; } // AcumaticaExtRefNbr (length: 50)

        // Foreign keys

        /// <summary>
        /// Parent UsrShopifyPayout pointed by [usrShopifyPayoutTransaction].([ShopifyPayoutId]) (FK_usrShopifyPayoutTransaction_usrShopifyPayout)
        /// </summary>
        public virtual UsrShopifyPayout UsrShopifyPayout { get; set; } // FK_usrShopifyPayoutTransaction_usrShopifyPayout
    }

    // usrShopifyProduct
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyProduct
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public long ShopifyProductId { get; set; } // ShopifyProductId
        public string ShopifyJson { get; set; } // ShopifyJson
        public bool IsDeleted { get; set; } // IsDeleted
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child UsrShopifyVariants where [usrShopifyVariant].[ParentMonsterId] point to this entity (FK_usrShopifyVariant_usrShopifyProduct)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrShopifyVariant> UsrShopifyVariants { get; set; } // usrShopifyVariant.FK_usrShopifyVariant_usrShopifyProduct

        public UsrShopifyProduct()
        {
            UsrShopifyVariants = new System.Collections.Generic.List<UsrShopifyVariant>();
        }
    }

    // usrShopifyRefund
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyRefund
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyRefundId { get; set; } // ShopifyRefundId
        public long ShopifyOrderId { get; set; } // ShopifyOrderId
        public long OrderMonsterId { get; set; } // OrderMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Foreign keys

        /// <summary>
        /// Parent UsrShopifyOrder pointed by [usrShopifyRefund].([OrderMonsterId]) (FK_usrShopifyRefund_usrShopifyOrder)
        /// </summary>
        public virtual UsrShopifyOrder UsrShopifyOrder { get; set; } // FK_usrShopifyRefund_usrShopifyOrder
    }

    // usrShopifyVariant
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyVariant
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public long ParentMonsterId { get; set; } // ParentMonsterId
        public long ShopifyVariantId { get; set; } // ShopifyVariantId
        public long ShopifyInventoryItemId { get; set; } // ShopifyInventoryItemId
        public string ShopifyVariantJson { get; set; } // ShopifyVariantJson
        public string ShopifySku { get; set; } // ShopifySku (length: 100)
        public bool ShopifyIsTracked { get; set; } // ShopifyIsTracked
        public bool IsMissing { get; set; } // IsMissing
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child UsrAcumaticaStockItems where [usrAcumaticaStockItem].[ShopifyVariantMonsterId] point to this entity (FK_usrAcumaticaStockItem_usrShopifyVariant)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrAcumaticaStockItem> UsrAcumaticaStockItems { get; set; } // usrAcumaticaStockItem.FK_usrAcumaticaStockItem_usrShopifyVariant
        /// <summary>
        /// Child UsrShopifyInventoryLevels where [usrShopifyInventoryLevels].[ParentMonsterId] point to this entity (FK_usrShopifyInventoryLevels_usrShopifyVariant)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrShopifyInventoryLevel> UsrShopifyInventoryLevels { get; set; } // usrShopifyInventoryLevels.FK_usrShopifyInventoryLevels_usrShopifyVariant
        /// <summary>
        /// Child UsrShopifyOrderLineItems where [usrShopifyOrderLineItem].[MonsterVariantId] point to this entity (FK_usrShopifyOrderLineItem_usrShopifyVariant)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UsrShopifyOrderLineItem> UsrShopifyOrderLineItems { get; set; } // usrShopifyOrderLineItem.FK_usrShopifyOrderLineItem_usrShopifyVariant

        // Foreign keys

        /// <summary>
        /// Parent UsrShopifyProduct pointed by [usrShopifyVariant].([ParentMonsterId]) (FK_usrShopifyVariant_usrShopifyProduct)
        /// </summary>
        public virtual UsrShopifyProduct UsrShopifyProduct { get; set; } // FK_usrShopifyVariant_usrShopifyProduct

        public UsrShopifyVariant()
        {
            UsrAcumaticaStockItems = new System.Collections.Generic.List<UsrAcumaticaStockItem>();
            UsrShopifyInventoryLevels = new System.Collections.Generic.List<UsrShopifyInventoryLevel>();
            UsrShopifyOrderLineItems = new System.Collections.Generic.List<UsrShopifyOrderLineItem>();
        }
    }

    // usrTenant
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrTenant
    {
        public long CompanyId { get; set; } // CompanyID (Primary key)
        public string ShopifyDomain { get; set; } // ShopifyDomain (length: 500)
        public string ShopifyApiKey { get; set; } // ShopifyApiKey (length: 500)
        public string ShopifyApiPassword { get; set; } // ShopifyApiPassword (length: 500)
        public string ShopifyApiSecret { get; set; } // ShopifyApiSecret (length: 500)
        public string AcumaticaInstanceUrl { get; set; } // AcumaticaInstanceUrl (length: 500)
        public string AcumaticaBranch { get; set; } // AcumaticaBranch (length: 500)
        public string AcumaticaCompanyName { get; set; } // AcumaticaCompanyName (length: 500)
        public string AcumaticaUsername { get; set; } // AcumaticaUsername (length: 500)
        public string AcumaticaPassword { get; set; } // AcumaticaPassword (length: 500)
    }

    #endregion

    #region POCO Configuration

    // usrAcumaticaCreditMemo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaCreditMemoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrAcumaticaCreditMemo>
    {
        public UsrAcumaticaCreditMemoConfiguration()
            : this("dbo")
        {
        }

        public UsrAcumaticaCreditMemoConfiguration(string schema)
        {
            ToTable("usrAcumaticaCreditMemo", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SalesOrderMonsterId).HasColumnName(@"SalesOrderMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.AcumaticaCreditMemoId).HasColumnName(@"AcumaticaCreditMemoId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaJson).HasColumnName(@"AcumaticaJson").HasColumnType("nchar").IsRequired().IsFixedLength().HasMaxLength(10);
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();
        }
    }

    // usrAcumaticaCustomer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaCustomerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrAcumaticaCustomer>
    {
        public UsrAcumaticaCustomerConfiguration()
            : this("dbo")
        {
        }

        public UsrAcumaticaCustomerConfiguration(string schema)
        {
            ToTable("usrAcumaticaCustomer", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcumaticaCustomerId).HasColumnName(@"AcumaticaCustomerId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaMainContactEmail).HasColumnName(@"AcumaticaMainContactEmail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AcumaticaJson).HasColumnName(@"AcumaticaJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.ShopifyCustomerMonsterId).HasColumnName(@"ShopifyCustomerMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.UsrShopifyCustomer).WithMany(b => b.UsrAcumaticaCustomers).HasForeignKey(c => c.ShopifyCustomerMonsterId).WillCascadeOnDelete(false); // FK_usrAcumaticaCustomer_usrShopifyCustomer
        }
    }

    // usrAcumaticaInventoryReceipt
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaInventoryReceiptConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrAcumaticaInventoryReceipt>
    {
        public UsrAcumaticaInventoryReceiptConfiguration()
            : this("dbo")
        {
        }

        public UsrAcumaticaInventoryReceiptConfiguration(string schema)
        {
            ToTable("usrAcumaticaInventoryReceipt", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcumaticaRefNumber).HasColumnName(@"AcumaticaRefNumber").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.AcumaticaJson).HasColumnName(@"AcumaticaJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.IsReleased).HasColumnName(@"IsReleased").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdate).HasColumnName(@"LastUpdate").HasColumnType("datetime").IsRequired();
        }
    }

    // usrAcumaticaInvoice
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaInvoiceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrAcumaticaInvoice>
    {
        public UsrAcumaticaInvoiceConfiguration()
            : this("dbo")
        {
        }

        public UsrAcumaticaInvoiceConfiguration(string schema)
        {
            ToTable("usrAcumaticaInvoice", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcumaticaInvoiceId).HasColumnName(@"AcumaticaInvoiceId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CustomerMonsterId).HasColumnName(@"CustomerMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();
        }
    }

    // usrAcumaticaSalesOrder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaSalesOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrAcumaticaSalesOrder>
    {
        public UsrAcumaticaSalesOrderConfiguration()
            : this("dbo")
        {
        }

        public UsrAcumaticaSalesOrderConfiguration(string schema)
        {
            ToTable("usrAcumaticaSalesOrder", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcumaticaJson).HasColumnName(@"AcumaticaJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.AcumaticaSalesOrderId).HasColumnName(@"AcumaticaSalesOrderId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaStatus).HasColumnName(@"AcumaticaStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.ShopifyOrderMonsterId).HasColumnName(@"ShopifyOrderMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.CustomerMonsterId).HasColumnName(@"CustomerMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.UsrShopifyOrder).WithMany(b => b.UsrAcumaticaSalesOrders).HasForeignKey(c => c.ShopifyOrderMonsterId).WillCascadeOnDelete(false); // FK_usrAcumaticaSalesOrder_usrShopifyOrder
            HasRequired(a => a.UsrAcumaticaCustomer).WithMany(b => b.UsrAcumaticaSalesOrders).HasForeignKey(c => c.CustomerMonsterId).WillCascadeOnDelete(false); // FK_usrAcumaticaSalesOrder_usrAcumaticaCustomer
        }
    }

    // usrAcumaticaShipment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaShipmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrAcumaticaShipment>
    {
        public UsrAcumaticaShipmentConfiguration()
            : this("dbo")
        {
        }

        public UsrAcumaticaShipmentConfiguration(string schema)
        {
            ToTable("usrAcumaticaShipment", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcumaticaJson).HasColumnName(@"AcumaticaJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.AcumaticaShipmentId).HasColumnName(@"AcumaticaShipmentId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ShopifyFulfillmentMonsterId).HasColumnName(@"ShopifyFulfillmentMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.CustomerMonsterId).HasColumnName(@"CustomerMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.UsrShopifyFulfillment).WithMany(b => b.UsrAcumaticaShipments).HasForeignKey(c => c.ShopifyFulfillmentMonsterId).WillCascadeOnDelete(false); // FK_usrAcumaticaShipment_usrShopifyFulfillment
        }
    }

    // usrAcumaticaSOShipment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaSoShipmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrAcumaticaSoShipment>
    {
        public UsrAcumaticaSoShipmentConfiguration()
            : this("dbo")
        {
        }

        public UsrAcumaticaSoShipmentConfiguration(string schema)
        {
            ToTable("usrAcumaticaSOShipment", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SalesOrderMonsterId).HasColumnName(@"SalesOrderMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.ShipmentMonsterId).HasColumnName(@"ShipmentMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.AcumaticaSalesOrderId).HasColumnName(@"AcumaticaSalesOrderId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaShipmentId).HasColumnName(@"AcumaticaShipmentId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.UsrAcumaticaSalesOrder).WithMany(b => b.UsrAcumaticaSoShipments).HasForeignKey(c => c.SalesOrderMonsterId).WillCascadeOnDelete(false); // FK_usrAcumaticaSOShipment_usrAcumaticaSalesOrder
            HasRequired(a => a.UsrAcumaticaShipment).WithMany(b => b.UsrAcumaticaSoShipments).HasForeignKey(c => c.ShipmentMonsterId).WillCascadeOnDelete(false); // FK_usrAcumaticaSOShipment_usrAcumaticaShipment1
        }
    }

    // usrAcumaticaStockItem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaStockItemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrAcumaticaStockItem>
    {
        public UsrAcumaticaStockItemConfiguration()
            : this("dbo")
        {
        }

        public UsrAcumaticaStockItemConfiguration(string schema)
        {
            ToTable("usrAcumaticaStockItem", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ItemId).HasColumnName(@"ItemId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AcumaticaJson).HasColumnName(@"AcumaticaJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.ShopifyVariantMonsterId).HasColumnName(@"ShopifyVariantMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.UsrShopifyVariant).WithMany(b => b.UsrAcumaticaStockItems).HasForeignKey(c => c.ShopifyVariantMonsterId).WillCascadeOnDelete(false); // FK_usrAcumaticaStockItem_usrShopifyVariant
        }
    }

    // usrAcumaticaWarehouse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaWarehouseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrAcumaticaWarehouse>
    {
        public UsrAcumaticaWarehouseConfiguration()
            : this("dbo")
        {
        }

        public UsrAcumaticaWarehouseConfiguration(string schema)
        {
            ToTable("usrAcumaticaWarehouse", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcumaticaWarehouseId).HasColumnName(@"AcumaticaWarehouseId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaJson).HasColumnName(@"AcumaticaJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.ShopifyLocationMonsterId).HasColumnName(@"ShopifyLocationMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.IsNameMismatched).HasColumnName(@"IsNameMismatched").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.UsrShopifyLocation).WithMany(b => b.UsrAcumaticaWarehouses).HasForeignKey(c => c.ShopifyLocationMonsterId).WillCascadeOnDelete(false); // FK_usrAcumaticaWarehouse_usrShopifyLocation
        }
    }

    // usrAcumaticaWarehouseDetails
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrAcumaticaWarehouseDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrAcumaticaWarehouseDetail>
    {
        public UsrAcumaticaWarehouseDetailConfiguration()
            : this("dbo")
        {
        }

        public UsrAcumaticaWarehouseDetailConfiguration(string schema)
        {
            ToTable("usrAcumaticaWarehouseDetails", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ParentMonsterId).HasColumnName(@"ParentMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.AcumaticaJson).HasColumnName(@"AcumaticaJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.AcumaticaWarehouseId).HasColumnName(@"AcumaticaWarehouseId").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.AcumaticaQtyOnHand).HasColumnName(@"AcumaticaQtyOnHand").HasColumnType("float").IsRequired();
            Property(x => x.WarehouseMonsterId).HasColumnName(@"WarehouseMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyIsSynced).HasColumnName(@"ShopifyIsSynced").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.UsrAcumaticaStockItem).WithMany(b => b.UsrAcumaticaWarehouseDetails).HasForeignKey(c => c.ParentMonsterId).WillCascadeOnDelete(false); // FK_usrAcumaticaWarehouseDetails_usrAcumaticaStockItem
            HasRequired(a => a.UsrAcumaticaWarehouse).WithMany(b => b.UsrAcumaticaWarehouseDetails).HasForeignKey(c => c.WarehouseMonsterId).WillCascadeOnDelete(false); // FK_usrAcumaticaWarehouseDetails_usrAcumaticaWarehouse
        }
    }

    // usrBatchState
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrBatchStateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrBatchState>
    {
        public UsrBatchStateConfiguration()
            : this("dbo")
        {
        }

        public UsrBatchStateConfiguration(string schema)
        {
            ToTable("usrBatchState", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyProductsPullEnd).HasColumnName(@"ShopifyProductsPullEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.ShopifyProductsDeletedEnd).HasColumnName(@"ShopifyProductsDeletedEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.ShopifyOrdersPullEnd).HasColumnName(@"ShopifyOrdersPullEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.ShopifyCustomersPullEnd).HasColumnName(@"ShopifyCustomersPullEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.AcumaticaProductsPullEnd).HasColumnName(@"AcumaticaProductsPullEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.AcumaticaCustomersPullEnd).HasColumnName(@"AcumaticaCustomersPullEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.AcumaticaOrdersPullEnd).HasColumnName(@"AcumaticaOrdersPullEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.AcumaticaShipmentsPullEnd).HasColumnName(@"AcumaticaShipmentsPullEnd").HasColumnType("datetime").IsOptional();
        }
    }

    // usrPayoutPreferences
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrPayoutPreferenceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrPayoutPreference>
    {
        public UsrPayoutPreferenceConfiguration()
            : this("dbo")
        {
        }

        public UsrPayoutPreferenceConfiguration(string schema)
        {
            ToTable("usrPayoutPreferences", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcumaticaCashAccount).HasColumnName(@"AcumaticaCashAccount").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
        }
    }

    // usrPreferences
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrPreferenceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrPreference>
    {
        public UsrPreferenceConfiguration()
            : this("dbo")
        {
        }

        public UsrPreferenceConfiguration(string schema)
        {
            ToTable("usrPreferences", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DataPullStart).HasColumnName(@"DataPullStart").HasColumnType("date").IsOptional();
            Property(x => x.DefaultCoGsMargin).HasColumnName(@"DefaultCoGSMargin").HasColumnType("float").IsOptional();
            Property(x => x.AcumaticaDefaultItemClass).HasColumnName(@"AcumaticaDefaultItemClass").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaDefaultPostingClass).HasColumnName(@"AcumaticaDefaultPostingClass").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaPostingDate).HasColumnName(@"AcumaticaPostingDate").HasColumnType("date").IsOptional();
        }
    }

    // usrShopifyCustomer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyCustomerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrShopifyCustomer>
    {
        public UsrShopifyCustomerConfiguration()
            : this("dbo")
        {
        }

        public UsrShopifyCustomerConfiguration(string schema)
        {
            ToTable("usrShopifyCustomer", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyJson).HasColumnName(@"ShopifyJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.ShopifyCustomerId).HasColumnName(@"ShopifyCustomerId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyPrimaryEmail).HasColumnName(@"ShopifyPrimaryEmail").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();
        }
    }

    // usrShopifyFulfillment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyFulfillmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrShopifyFulfillment>
    {
        public UsrShopifyFulfillmentConfiguration()
            : this("dbo")
        {
        }

        public UsrShopifyFulfillmentConfiguration(string schema)
        {
            ToTable("usrShopifyFulfillment", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyFulfillmentId).HasColumnName(@"ShopifyFulfillmentId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyStatus).HasColumnName(@"ShopifyStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.OrderMonsterId).HasColumnName(@"OrderMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.UsrShopifyOrder).WithMany(b => b.UsrShopifyFulfillments).HasForeignKey(c => c.OrderMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyFulfillment_usrShopifyOrder
        }
    }

    // usrShopifyInventoryLevels
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyInventoryLevelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrShopifyInventoryLevel>
    {
        public UsrShopifyInventoryLevelConfiguration()
            : this("dbo")
        {
        }

        public UsrShopifyInventoryLevelConfiguration(string schema)
        {
            ToTable("usrShopifyInventoryLevels", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ParentMonsterId).HasColumnName(@"ParentMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyInventoryItemId).HasColumnName(@"ShopifyInventoryItemId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyLocationId).HasColumnName(@"ShopifyLocationId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyAvailableQuantity).HasColumnName(@"ShopifyAvailableQuantity").HasColumnType("int").IsRequired();
            Property(x => x.LocationMonsterId).HasColumnName(@"LocationMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.InventoryReceiptMonsterId).HasColumnName(@"InventoryReceiptMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.UsrAcumaticaInventoryReceipt).WithMany(b => b.UsrShopifyInventoryLevels).HasForeignKey(c => c.InventoryReceiptMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyInventoryLevels_usrAcumaticaInventoryReceipt
            HasOptional(a => a.UsrShopifyLocation).WithMany(b => b.UsrShopifyInventoryLevels).HasForeignKey(c => c.LocationMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyInventoryLevels_usrShopifyLocation
            HasRequired(a => a.UsrShopifyVariant).WithMany(b => b.UsrShopifyInventoryLevels).HasForeignKey(c => c.ParentMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyInventoryLevels_usrShopifyVariant
        }
    }

    // usrShopifyLocation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyLocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrShopifyLocation>
    {
        public UsrShopifyLocationConfiguration()
            : this("dbo")
        {
        }

        public UsrShopifyLocationConfiguration(string schema)
        {
            ToTable("usrShopifyLocation", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyLocationId).HasColumnName(@"ShopifyLocationId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyJson).HasColumnName(@"ShopifyJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.ShopifyLocationName).HasColumnName(@"ShopifyLocationName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();
        }
    }

    // usrShopifyOrder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrShopifyOrder>
    {
        public UsrShopifyOrderConfiguration()
            : this("dbo")
        {
        }

        public UsrShopifyOrderConfiguration(string schema)
        {
            ToTable("usrShopifyOrder", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyJson).HasColumnName(@"ShopifyJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyOrderNumber).HasColumnName(@"ShopifyOrderNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ShopifyIsCancelled).HasColumnName(@"ShopifyIsCancelled").HasColumnType("bit").IsRequired();
            Property(x => x.ShopifyFinancialStatus).HasColumnName(@"ShopifyFinancialStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.AreLineItemsSynced).HasColumnName(@"AreLineItemsSynced").HasColumnType("bit").IsRequired();
            Property(x => x.CustomerMonsterId).HasColumnName(@"CustomerMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.UsrShopifyCustomer).WithMany(b => b.UsrShopifyOrders).HasForeignKey(c => c.CustomerMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyOrder_usrShopifyCustomer
        }
    }

    // usrShopifyOrderLineItem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyOrderLineItemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrShopifyOrderLineItem>
    {
        public UsrShopifyOrderLineItemConfiguration()
            : this("dbo")
        {
        }

        public UsrShopifyOrderLineItemConfiguration(string schema)
        {
            ToTable("usrShopifyOrderLineItem", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyLineItemId).HasColumnName(@"ShopifyLineItemId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyProductId).HasColumnName(@"ShopifyProductId").HasColumnType("bigint").IsOptional();
            Property(x => x.ShopifyVariantId).HasColumnName(@"ShopifyVariantId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifySku).HasColumnName(@"ShopifySku").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.MonsterOrderId).HasColumnName(@"MonsterOrderId").HasColumnType("bigint").IsRequired();
            Property(x => x.MonsterVariantId).HasColumnName(@"MonsterVariantId").HasColumnType("bigint").IsOptional();

            // Foreign keys
            HasOptional(a => a.UsrShopifyVariant).WithMany(b => b.UsrShopifyOrderLineItems).HasForeignKey(c => c.MonsterVariantId).WillCascadeOnDelete(false); // FK_usrShopifyOrderLineItem_usrShopifyVariant
            HasRequired(a => a.UsrShopifyOrder).WithMany(b => b.UsrShopifyOrderLineItems).HasForeignKey(c => c.MonsterOrderId).WillCascadeOnDelete(false); // FK_usrShopifyOrderLineItem_usrShopifyOrder1
        }
    }

    // usrShopifyPayout
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyPayoutConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrShopifyPayout>
    {
        public UsrShopifyPayoutConfiguration()
            : this("dbo")
        {
        }

        public UsrShopifyPayoutConfiguration(string schema)
        {
            ToTable("usrShopifyPayout", schema);
            HasKey(x => x.ShopifyPayoutId);

            Property(x => x.ShopifyPayoutId).HasColumnName(@"ShopifyPayoutId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyLastStatus).HasColumnName(@"ShopifyLastStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Json).HasColumnName(@"Json").HasColumnType("text").IsRequired().IsUnicode(false).HasMaxLength(2147483647);
            Property(x => x.AllShopifyTransDownloaded).HasColumnName(@"AllShopifyTransDownloaded").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.AcumaticaCashAccount).HasColumnName(@"AcumaticaCashAccount").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaRefNumber).HasColumnName(@"AcumaticaRefNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaImportDate).HasColumnName(@"AcumaticaImportDate").HasColumnType("datetime").IsOptional();
        }
    }

    // usrShopifyPayoutTransaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyPayoutTransactionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrShopifyPayoutTransaction>
    {
        public UsrShopifyPayoutTransactionConfiguration()
            : this("dbo")
        {
        }

        public UsrShopifyPayoutTransactionConfiguration(string schema)
        {
            ToTable("usrShopifyPayoutTransaction", schema);
            HasKey(x => new { x.ShopifyPayoutId, x.ShopifyPayoutTransId });

            Property(x => x.ShopifyPayoutId).HasColumnName(@"ShopifyPayoutId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyPayoutTransId).HasColumnName(@"ShopifyPayoutTransId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Json).HasColumnName(@"Json").HasColumnType("text").IsOptional().IsUnicode(false).HasMaxLength(2147483647);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.AcumaticaImportDate).HasColumnName(@"AcumaticaImportDate").HasColumnType("datetime").IsOptional();
            Property(x => x.AcumaticaExtRefNbr).HasColumnName(@"AcumaticaExtRefNbr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);

            // Foreign keys
            HasRequired(a => a.UsrShopifyPayout).WithMany(b => b.UsrShopifyPayoutTransactions).HasForeignKey(c => c.ShopifyPayoutId).WillCascadeOnDelete(false); // FK_usrShopifyPayoutTransaction_usrShopifyPayout
        }
    }

    // usrShopifyProduct
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyProductConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrShopifyProduct>
    {
        public UsrShopifyProductConfiguration()
            : this("dbo")
        {
        }

        public UsrShopifyProductConfiguration(string schema)
        {
            ToTable("usrShopifyProduct", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyProductId).HasColumnName(@"ShopifyProductId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyJson).HasColumnName(@"ShopifyJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();
        }
    }

    // usrShopifyRefund
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyRefundConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrShopifyRefund>
    {
        public UsrShopifyRefundConfiguration()
            : this("dbo")
        {
        }

        public UsrShopifyRefundConfiguration(string schema)
        {
            ToTable("usrShopifyRefund", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyRefundId).HasColumnName(@"ShopifyRefundId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsRequired();
            Property(x => x.OrderMonsterId).HasColumnName(@"OrderMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.UsrShopifyOrder).WithMany(b => b.UsrShopifyRefunds).HasForeignKey(c => c.OrderMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyRefund_usrShopifyOrder
        }
    }

    // usrShopifyVariant
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrShopifyVariantConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrShopifyVariant>
    {
        public UsrShopifyVariantConfiguration()
            : this("dbo")
        {
        }

        public UsrShopifyVariantConfiguration(string schema)
        {
            ToTable("usrShopifyVariant", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ParentMonsterId).HasColumnName(@"ParentMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyVariantId).HasColumnName(@"ShopifyVariantId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyInventoryItemId).HasColumnName(@"ShopifyInventoryItemId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyVariantJson).HasColumnName(@"ShopifyVariantJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.ShopifySku).HasColumnName(@"ShopifySku").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ShopifyIsTracked).HasColumnName(@"ShopifyIsTracked").HasColumnType("bit").IsRequired();
            Property(x => x.IsMissing).HasColumnName(@"IsMissing").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.UsrShopifyProduct).WithMany(b => b.UsrShopifyVariants).HasForeignKey(c => c.ParentMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyVariant_usrShopifyProduct
        }
    }

    // usrTenant
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class UsrTenantConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UsrTenant>
    {
        public UsrTenantConfiguration()
            : this("dbo")
        {
        }

        public UsrTenantConfiguration(string schema)
        {
            ToTable("usrTenant", schema);
            HasKey(x => x.CompanyId);

            Property(x => x.CompanyId).HasColumnName(@"CompanyID").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyDomain).HasColumnName(@"ShopifyDomain").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.ShopifyApiKey).HasColumnName(@"ShopifyApiKey").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.ShopifyApiPassword).HasColumnName(@"ShopifyApiPassword").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.ShopifyApiSecret).HasColumnName(@"ShopifyApiSecret").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.AcumaticaInstanceUrl).HasColumnName(@"AcumaticaInstanceUrl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.AcumaticaBranch).HasColumnName(@"AcumaticaBranch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.AcumaticaCompanyName).HasColumnName(@"AcumaticaCompanyName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.AcumaticaUsername).HasColumnName(@"AcumaticaUsername").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.AcumaticaPassword).HasColumnName(@"AcumaticaPassword").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
        }
    }

    #endregion

}
// </auto-generated>

