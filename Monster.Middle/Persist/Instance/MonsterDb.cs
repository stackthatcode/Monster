

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "Monster.Middle\App.config"
//     Connection String Name: "MonsterSystemConnection"
//     Connection String:      "Server=localhost;Database=Monster0001;Trusted_Connection=True;"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Developer Edition (64-bit)
// Database Engine Edition : Enterprise
// Database Version        : 14.0.1000.169

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Monster.Middle.Persist.Instance
{
    using System.Linq;

    #region Unit of work

    public interface IMonsterDataContext : System.IDisposable
    {
        System.Data.Entity.DbSet<AcumaticaBatchState> AcumaticaBatchStates { get; set; } // AcumaticaBatchState
        System.Data.Entity.DbSet<AcumaticaCustomer> AcumaticaCustomers { get; set; } // AcumaticaCustomer
        System.Data.Entity.DbSet<AcumaticaInventory> AcumaticaInventories { get; set; } // AcumaticaInventory
        System.Data.Entity.DbSet<AcumaticaInventoryReceipt> AcumaticaInventoryReceipts { get; set; } // AcumaticaInventoryReceipt
        System.Data.Entity.DbSet<AcumaticaPayment> AcumaticaPayments { get; set; } // AcumaticaPayment
        System.Data.Entity.DbSet<AcumaticaRefData> AcumaticaRefDatas { get; set; } // AcumaticaRefData
        System.Data.Entity.DbSet<AcumaticaSalesOrder> AcumaticaSalesOrders { get; set; } // AcumaticaSalesOrder
        System.Data.Entity.DbSet<AcumaticaSoShipment> AcumaticaSoShipments { get; set; } // AcumaticaSoShipment
        System.Data.Entity.DbSet<AcumaticaStockItem> AcumaticaStockItems { get; set; } // AcumaticaStockItem
        System.Data.Entity.DbSet<AcumaticaWarehouse> AcumaticaWarehouses { get; set; } // AcumaticaWarehouse
        System.Data.Entity.DbSet<Connection> Connections { get; set; } // Connections
        System.Data.Entity.DbSet<ExclusiveJobMonitor> ExclusiveJobMonitors { get; set; } // ExclusiveJobMonitor
        System.Data.Entity.DbSet<ExecutionLog> ExecutionLogs { get; set; } // ExecutionLog
        System.Data.Entity.DbSet<InventoryReceiptSync> InventoryReceiptSyncs { get; set; } // InventoryReceiptSync
        System.Data.Entity.DbSet<MonsterSetting> MonsterSettings { get; set; } // MonsterSettings
        System.Data.Entity.DbSet<PaymentGateway> PaymentGateways { get; set; } // PaymentGateways
        System.Data.Entity.DbSet<PayoutPreference> PayoutPreferences { get; set; } // PayoutPreferences
        System.Data.Entity.DbSet<ShopAcuWarehouseSync> ShopAcuWarehouseSyncs { get; set; } // ShopAcuWarehouseSync
        System.Data.Entity.DbSet<ShopifyBatchState> ShopifyBatchStates { get; set; } // ShopifyBatchState
        System.Data.Entity.DbSet<ShopifyCustomer> ShopifyCustomers { get; set; } // ShopifyCustomer
        System.Data.Entity.DbSet<ShopifyFulfillment> ShopifyFulfillments { get; set; } // ShopifyFulfillment
        System.Data.Entity.DbSet<ShopifyInventoryLevel> ShopifyInventoryLevels { get; set; } // ShopifyInventoryLevel
        System.Data.Entity.DbSet<ShopifyLocation> ShopifyLocations { get; set; } // ShopifyLocation
        System.Data.Entity.DbSet<ShopifyOrder> ShopifyOrders { get; set; } // ShopifyOrder
        System.Data.Entity.DbSet<ShopifyPayout> ShopifyPayouts { get; set; } // ShopifyPayout
        System.Data.Entity.DbSet<ShopifyPayoutTransaction> ShopifyPayoutTransactions { get; set; } // ShopifyPayoutTransaction
        System.Data.Entity.DbSet<ShopifyProduct> ShopifyProducts { get; set; } // ShopifyProduct
        System.Data.Entity.DbSet<ShopifyRefund> ShopifyRefunds { get; set; } // ShopifyRefund
        System.Data.Entity.DbSet<ShopifyTransaction> ShopifyTransactions { get; set; } // ShopifyTransaction
        System.Data.Entity.DbSet<ShopifyVariant> ShopifyVariants { get; set; } // ShopifyVariant
        System.Data.Entity.DbSet<SystemState> SystemStates { get; set; } // SystemState
        System.Data.Entity.DbSet<VwAcumaticaInventory> VwAcumaticaInventories { get; set; } // vw_AcumaticaInventory
        System.Data.Entity.DbSet<VwAcumaticaSalesOrderAndCustomer> VwAcumaticaSalesOrderAndCustomers { get; set; } // vw_AcumaticaSalesOrderAndCustomer
        System.Data.Entity.DbSet<VwAcumaticaSalesOrderAndShipment> VwAcumaticaSalesOrderAndShipments { get; set; } // vw_AcumaticaSalesOrderAndShipments
        System.Data.Entity.DbSet<VwAcumaticaSalesOrderAndShipmentInvoice> VwAcumaticaSalesOrderAndShipmentInvoices { get; set; } // vw_AcumaticaSalesOrderAndShipmentInvoices
        System.Data.Entity.DbSet<VwShopifyInventory> VwShopifyInventories { get; set; } // vw_ShopifyInventory
        System.Data.Entity.DbSet<VwShopifyOrderCustomer> VwShopifyOrderCustomers { get; set; } // vw_ShopifyOrderCustomer
        System.Data.Entity.DbSet<VwShopifyOrderFulfillment> VwShopifyOrderFulfillments { get; set; } // vw_ShopifyOrderFulfillments
        System.Data.Entity.DbSet<VwShopifyOrderRefund> VwShopifyOrderRefunds { get; set; } // vw_ShopifyOrderRefunds
        System.Data.Entity.DbSet<VwShopifyOrderTransaction> VwShopifyOrderTransactions { get; set; } // vw_ShopifyOrderTransactions
        System.Data.Entity.DbSet<VwSyncShopifyInventory> VwSyncShopifyInventories { get; set; } // vw_SyncShopifyInventory
        System.Data.Entity.DbSet<VwSyncVariantsAndStockItemsAlt> VwSyncVariantsAndStockItemsAlts { get; set; } // vw_SyncVariantsAndStockItems_Alt

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();

        // Stored Procedures
        int DeleteAllAcumaticaInventoryRecords();
        // DeleteAllAcumaticaInventoryRecordsAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int DeleteAllAcumaticaOrderRecords();
        // DeleteAllAcumaticaOrderRecordsAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int DeleteAllShopifyInventoryRecords();
        // DeleteAllShopifyInventoryRecordsAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int DeleteAllShopifyOrderRecords();
        // DeleteAllShopifyOrderRecordsAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int DeleteAllSyncRecords();
        // DeleteAllSyncRecordsAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int DeleteAllSystemRecords();
        // DeleteAllSystemRecordsAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int ResetStartingShopifyOrder();
        // ResetStartingShopifyOrderAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MonsterDataContext : System.Data.Entity.DbContext, IMonsterDataContext
    {
        public System.Data.Entity.DbSet<AcumaticaBatchState> AcumaticaBatchStates { get; set; } // AcumaticaBatchState
        public System.Data.Entity.DbSet<AcumaticaCustomer> AcumaticaCustomers { get; set; } // AcumaticaCustomer
        public System.Data.Entity.DbSet<AcumaticaInventory> AcumaticaInventories { get; set; } // AcumaticaInventory
        public System.Data.Entity.DbSet<AcumaticaInventoryReceipt> AcumaticaInventoryReceipts { get; set; } // AcumaticaInventoryReceipt
        public System.Data.Entity.DbSet<AcumaticaPayment> AcumaticaPayments { get; set; } // AcumaticaPayment
        public System.Data.Entity.DbSet<AcumaticaRefData> AcumaticaRefDatas { get; set; } // AcumaticaRefData
        public System.Data.Entity.DbSet<AcumaticaSalesOrder> AcumaticaSalesOrders { get; set; } // AcumaticaSalesOrder
        public System.Data.Entity.DbSet<AcumaticaSoShipment> AcumaticaSoShipments { get; set; } // AcumaticaSoShipment
        public System.Data.Entity.DbSet<AcumaticaStockItem> AcumaticaStockItems { get; set; } // AcumaticaStockItem
        public System.Data.Entity.DbSet<AcumaticaWarehouse> AcumaticaWarehouses { get; set; } // AcumaticaWarehouse
        public System.Data.Entity.DbSet<Connection> Connections { get; set; } // Connections
        public System.Data.Entity.DbSet<ExclusiveJobMonitor> ExclusiveJobMonitors { get; set; } // ExclusiveJobMonitor
        public System.Data.Entity.DbSet<ExecutionLog> ExecutionLogs { get; set; } // ExecutionLog
        public System.Data.Entity.DbSet<InventoryReceiptSync> InventoryReceiptSyncs { get; set; } // InventoryReceiptSync
        public System.Data.Entity.DbSet<MonsterSetting> MonsterSettings { get; set; } // MonsterSettings
        public System.Data.Entity.DbSet<PaymentGateway> PaymentGateways { get; set; } // PaymentGateways
        public System.Data.Entity.DbSet<PayoutPreference> PayoutPreferences { get; set; } // PayoutPreferences
        public System.Data.Entity.DbSet<ShopAcuWarehouseSync> ShopAcuWarehouseSyncs { get; set; } // ShopAcuWarehouseSync
        public System.Data.Entity.DbSet<ShopifyBatchState> ShopifyBatchStates { get; set; } // ShopifyBatchState
        public System.Data.Entity.DbSet<ShopifyCustomer> ShopifyCustomers { get; set; } // ShopifyCustomer
        public System.Data.Entity.DbSet<ShopifyFulfillment> ShopifyFulfillments { get; set; } // ShopifyFulfillment
        public System.Data.Entity.DbSet<ShopifyInventoryLevel> ShopifyInventoryLevels { get; set; } // ShopifyInventoryLevel
        public System.Data.Entity.DbSet<ShopifyLocation> ShopifyLocations { get; set; } // ShopifyLocation
        public System.Data.Entity.DbSet<ShopifyOrder> ShopifyOrders { get; set; } // ShopifyOrder
        public System.Data.Entity.DbSet<ShopifyPayout> ShopifyPayouts { get; set; } // ShopifyPayout
        public System.Data.Entity.DbSet<ShopifyPayoutTransaction> ShopifyPayoutTransactions { get; set; } // ShopifyPayoutTransaction
        public System.Data.Entity.DbSet<ShopifyProduct> ShopifyProducts { get; set; } // ShopifyProduct
        public System.Data.Entity.DbSet<ShopifyRefund> ShopifyRefunds { get; set; } // ShopifyRefund
        public System.Data.Entity.DbSet<ShopifyTransaction> ShopifyTransactions { get; set; } // ShopifyTransaction
        public System.Data.Entity.DbSet<ShopifyVariant> ShopifyVariants { get; set; } // ShopifyVariant
        public System.Data.Entity.DbSet<SystemState> SystemStates { get; set; } // SystemState
        public System.Data.Entity.DbSet<VwAcumaticaInventory> VwAcumaticaInventories { get; set; } // vw_AcumaticaInventory
        public System.Data.Entity.DbSet<VwAcumaticaSalesOrderAndCustomer> VwAcumaticaSalesOrderAndCustomers { get; set; } // vw_AcumaticaSalesOrderAndCustomer
        public System.Data.Entity.DbSet<VwAcumaticaSalesOrderAndShipment> VwAcumaticaSalesOrderAndShipments { get; set; } // vw_AcumaticaSalesOrderAndShipments
        public System.Data.Entity.DbSet<VwAcumaticaSalesOrderAndShipmentInvoice> VwAcumaticaSalesOrderAndShipmentInvoices { get; set; } // vw_AcumaticaSalesOrderAndShipmentInvoices
        public System.Data.Entity.DbSet<VwShopifyInventory> VwShopifyInventories { get; set; } // vw_ShopifyInventory
        public System.Data.Entity.DbSet<VwShopifyOrderCustomer> VwShopifyOrderCustomers { get; set; } // vw_ShopifyOrderCustomer
        public System.Data.Entity.DbSet<VwShopifyOrderFulfillment> VwShopifyOrderFulfillments { get; set; } // vw_ShopifyOrderFulfillments
        public System.Data.Entity.DbSet<VwShopifyOrderRefund> VwShopifyOrderRefunds { get; set; } // vw_ShopifyOrderRefunds
        public System.Data.Entity.DbSet<VwShopifyOrderTransaction> VwShopifyOrderTransactions { get; set; } // vw_ShopifyOrderTransactions
        public System.Data.Entity.DbSet<VwSyncShopifyInventory> VwSyncShopifyInventories { get; set; } // vw_SyncShopifyInventory
        public System.Data.Entity.DbSet<VwSyncVariantsAndStockItemsAlt> VwSyncVariantsAndStockItemsAlts { get; set; } // vw_SyncVariantsAndStockItems_Alt

        static MonsterDataContext()
        {
            System.Data.Entity.Database.SetInitializer<MonsterDataContext>(null);
        }

        public MonsterDataContext()
            : base("Name=MonsterSystemConnection")
        {
        }

        public MonsterDataContext(string connectionString)
            : base(connectionString)
        {
        }

        public MonsterDataContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public MonsterDataContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public MonsterDataContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AcumaticaBatchStateConfiguration());
            modelBuilder.Configurations.Add(new AcumaticaCustomerConfiguration());
            modelBuilder.Configurations.Add(new AcumaticaInventoryConfiguration());
            modelBuilder.Configurations.Add(new AcumaticaInventoryReceiptConfiguration());
            modelBuilder.Configurations.Add(new AcumaticaPaymentConfiguration());
            modelBuilder.Configurations.Add(new AcumaticaRefDataConfiguration());
            modelBuilder.Configurations.Add(new AcumaticaSalesOrderConfiguration());
            modelBuilder.Configurations.Add(new AcumaticaSoShipmentConfiguration());
            modelBuilder.Configurations.Add(new AcumaticaStockItemConfiguration());
            modelBuilder.Configurations.Add(new AcumaticaWarehouseConfiguration());
            modelBuilder.Configurations.Add(new ConnectionConfiguration());
            modelBuilder.Configurations.Add(new ExclusiveJobMonitorConfiguration());
            modelBuilder.Configurations.Add(new ExecutionLogConfiguration());
            modelBuilder.Configurations.Add(new InventoryReceiptSyncConfiguration());
            modelBuilder.Configurations.Add(new MonsterSettingConfiguration());
            modelBuilder.Configurations.Add(new PaymentGatewayConfiguration());
            modelBuilder.Configurations.Add(new PayoutPreferenceConfiguration());
            modelBuilder.Configurations.Add(new ShopAcuWarehouseSyncConfiguration());
            modelBuilder.Configurations.Add(new ShopifyBatchStateConfiguration());
            modelBuilder.Configurations.Add(new ShopifyCustomerConfiguration());
            modelBuilder.Configurations.Add(new ShopifyFulfillmentConfiguration());
            modelBuilder.Configurations.Add(new ShopifyInventoryLevelConfiguration());
            modelBuilder.Configurations.Add(new ShopifyLocationConfiguration());
            modelBuilder.Configurations.Add(new ShopifyOrderConfiguration());
            modelBuilder.Configurations.Add(new ShopifyPayoutConfiguration());
            modelBuilder.Configurations.Add(new ShopifyPayoutTransactionConfiguration());
            modelBuilder.Configurations.Add(new ShopifyProductConfiguration());
            modelBuilder.Configurations.Add(new ShopifyRefundConfiguration());
            modelBuilder.Configurations.Add(new ShopifyTransactionConfiguration());
            modelBuilder.Configurations.Add(new ShopifyVariantConfiguration());
            modelBuilder.Configurations.Add(new SystemStateConfiguration());
            modelBuilder.Configurations.Add(new VwAcumaticaInventoryConfiguration());
            modelBuilder.Configurations.Add(new VwAcumaticaSalesOrderAndCustomerConfiguration());
            modelBuilder.Configurations.Add(new VwAcumaticaSalesOrderAndShipmentConfiguration());
            modelBuilder.Configurations.Add(new VwAcumaticaSalesOrderAndShipmentInvoiceConfiguration());
            modelBuilder.Configurations.Add(new VwShopifyInventoryConfiguration());
            modelBuilder.Configurations.Add(new VwShopifyOrderCustomerConfiguration());
            modelBuilder.Configurations.Add(new VwShopifyOrderFulfillmentConfiguration());
            modelBuilder.Configurations.Add(new VwShopifyOrderRefundConfiguration());
            modelBuilder.Configurations.Add(new VwShopifyOrderTransactionConfiguration());
            modelBuilder.Configurations.Add(new VwSyncShopifyInventoryConfiguration());
            modelBuilder.Configurations.Add(new VwSyncVariantsAndStockItemsAltConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AcumaticaBatchStateConfiguration(schema));
            modelBuilder.Configurations.Add(new AcumaticaCustomerConfiguration(schema));
            modelBuilder.Configurations.Add(new AcumaticaInventoryConfiguration(schema));
            modelBuilder.Configurations.Add(new AcumaticaInventoryReceiptConfiguration(schema));
            modelBuilder.Configurations.Add(new AcumaticaPaymentConfiguration(schema));
            modelBuilder.Configurations.Add(new AcumaticaRefDataConfiguration(schema));
            modelBuilder.Configurations.Add(new AcumaticaSalesOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new AcumaticaSoShipmentConfiguration(schema));
            modelBuilder.Configurations.Add(new AcumaticaStockItemConfiguration(schema));
            modelBuilder.Configurations.Add(new AcumaticaWarehouseConfiguration(schema));
            modelBuilder.Configurations.Add(new ConnectionConfiguration(schema));
            modelBuilder.Configurations.Add(new ExclusiveJobMonitorConfiguration(schema));
            modelBuilder.Configurations.Add(new ExecutionLogConfiguration(schema));
            modelBuilder.Configurations.Add(new InventoryReceiptSyncConfiguration(schema));
            modelBuilder.Configurations.Add(new MonsterSettingConfiguration(schema));
            modelBuilder.Configurations.Add(new PaymentGatewayConfiguration(schema));
            modelBuilder.Configurations.Add(new PayoutPreferenceConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopAcuWarehouseSyncConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopifyBatchStateConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopifyCustomerConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopifyFulfillmentConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopifyInventoryLevelConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopifyLocationConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopifyOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopifyPayoutConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopifyPayoutTransactionConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopifyProductConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopifyRefundConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopifyTransactionConfiguration(schema));
            modelBuilder.Configurations.Add(new ShopifyVariantConfiguration(schema));
            modelBuilder.Configurations.Add(new SystemStateConfiguration(schema));
            modelBuilder.Configurations.Add(new VwAcumaticaInventoryConfiguration(schema));
            modelBuilder.Configurations.Add(new VwAcumaticaSalesOrderAndCustomerConfiguration(schema));
            modelBuilder.Configurations.Add(new VwAcumaticaSalesOrderAndShipmentConfiguration(schema));
            modelBuilder.Configurations.Add(new VwAcumaticaSalesOrderAndShipmentInvoiceConfiguration(schema));
            modelBuilder.Configurations.Add(new VwShopifyInventoryConfiguration(schema));
            modelBuilder.Configurations.Add(new VwShopifyOrderCustomerConfiguration(schema));
            modelBuilder.Configurations.Add(new VwShopifyOrderFulfillmentConfiguration(schema));
            modelBuilder.Configurations.Add(new VwShopifyOrderRefundConfiguration(schema));
            modelBuilder.Configurations.Add(new VwShopifyOrderTransactionConfiguration(schema));
            modelBuilder.Configurations.Add(new VwSyncShopifyInventoryConfiguration(schema));
            modelBuilder.Configurations.Add(new VwSyncVariantsAndStockItemsAltConfiguration(schema));
            return modelBuilder;
        }

        // Stored Procedures
        public int DeleteAllAcumaticaInventoryRecords()
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[DeleteAllAcumaticaInventoryRecords] ", procResultParam);

            return (int) procResultParam.Value;
        }

        public int DeleteAllAcumaticaOrderRecords()
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[DeleteAllAcumaticaOrderRecords] ", procResultParam);

            return (int) procResultParam.Value;
        }

        public int DeleteAllShopifyInventoryRecords()
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[DeleteAllShopifyInventoryRecords] ", procResultParam);

            return (int) procResultParam.Value;
        }

        public int DeleteAllShopifyOrderRecords()
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[DeleteAllShopifyOrderRecords] ", procResultParam);

            return (int) procResultParam.Value;
        }

        public int DeleteAllSyncRecords()
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[DeleteAllSyncRecords] ", procResultParam);

            return (int) procResultParam.Value;
        }

        public int DeleteAllSystemRecords()
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[DeleteAllSystemRecords] ", procResultParam);

            return (int) procResultParam.Value;
        }

        public int ResetStartingShopifyOrder()
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [dbo].[ResetStartingShopifyOrder] ", procResultParam);

            return (int) procResultParam.Value;
        }

    }
    #endregion

    #region Database context factory

    public class MonsterDataContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<MonsterDataContext>
    {
        public MonsterDataContext Create()
        {
            return new MonsterDataContext();
        }
    }

    #endregion

    #region Fake Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeMonsterDataContext : IMonsterDataContext
    {
        public System.Data.Entity.DbSet<AcumaticaBatchState> AcumaticaBatchStates { get; set; }
        public System.Data.Entity.DbSet<AcumaticaCustomer> AcumaticaCustomers { get; set; }
        public System.Data.Entity.DbSet<AcumaticaInventory> AcumaticaInventories { get; set; }
        public System.Data.Entity.DbSet<AcumaticaInventoryReceipt> AcumaticaInventoryReceipts { get; set; }
        public System.Data.Entity.DbSet<AcumaticaPayment> AcumaticaPayments { get; set; }
        public System.Data.Entity.DbSet<AcumaticaRefData> AcumaticaRefDatas { get; set; }
        public System.Data.Entity.DbSet<AcumaticaSalesOrder> AcumaticaSalesOrders { get; set; }
        public System.Data.Entity.DbSet<AcumaticaSoShipment> AcumaticaSoShipments { get; set; }
        public System.Data.Entity.DbSet<AcumaticaStockItem> AcumaticaStockItems { get; set; }
        public System.Data.Entity.DbSet<AcumaticaWarehouse> AcumaticaWarehouses { get; set; }
        public System.Data.Entity.DbSet<Connection> Connections { get; set; }
        public System.Data.Entity.DbSet<ExclusiveJobMonitor> ExclusiveJobMonitors { get; set; }
        public System.Data.Entity.DbSet<ExecutionLog> ExecutionLogs { get; set; }
        public System.Data.Entity.DbSet<InventoryReceiptSync> InventoryReceiptSyncs { get; set; }
        public System.Data.Entity.DbSet<MonsterSetting> MonsterSettings { get; set; }
        public System.Data.Entity.DbSet<PaymentGateway> PaymentGateways { get; set; }
        public System.Data.Entity.DbSet<PayoutPreference> PayoutPreferences { get; set; }
        public System.Data.Entity.DbSet<ShopAcuWarehouseSync> ShopAcuWarehouseSyncs { get; set; }
        public System.Data.Entity.DbSet<ShopifyBatchState> ShopifyBatchStates { get; set; }
        public System.Data.Entity.DbSet<ShopifyCustomer> ShopifyCustomers { get; set; }
        public System.Data.Entity.DbSet<ShopifyFulfillment> ShopifyFulfillments { get; set; }
        public System.Data.Entity.DbSet<ShopifyInventoryLevel> ShopifyInventoryLevels { get; set; }
        public System.Data.Entity.DbSet<ShopifyLocation> ShopifyLocations { get; set; }
        public System.Data.Entity.DbSet<ShopifyOrder> ShopifyOrders { get; set; }
        public System.Data.Entity.DbSet<ShopifyPayout> ShopifyPayouts { get; set; }
        public System.Data.Entity.DbSet<ShopifyPayoutTransaction> ShopifyPayoutTransactions { get; set; }
        public System.Data.Entity.DbSet<ShopifyProduct> ShopifyProducts { get; set; }
        public System.Data.Entity.DbSet<ShopifyRefund> ShopifyRefunds { get; set; }
        public System.Data.Entity.DbSet<ShopifyTransaction> ShopifyTransactions { get; set; }
        public System.Data.Entity.DbSet<ShopifyVariant> ShopifyVariants { get; set; }
        public System.Data.Entity.DbSet<SystemState> SystemStates { get; set; }
        public System.Data.Entity.DbSet<VwAcumaticaInventory> VwAcumaticaInventories { get; set; }
        public System.Data.Entity.DbSet<VwAcumaticaSalesOrderAndCustomer> VwAcumaticaSalesOrderAndCustomers { get; set; }
        public System.Data.Entity.DbSet<VwAcumaticaSalesOrderAndShipment> VwAcumaticaSalesOrderAndShipments { get; set; }
        public System.Data.Entity.DbSet<VwAcumaticaSalesOrderAndShipmentInvoice> VwAcumaticaSalesOrderAndShipmentInvoices { get; set; }
        public System.Data.Entity.DbSet<VwShopifyInventory> VwShopifyInventories { get; set; }
        public System.Data.Entity.DbSet<VwShopifyOrderCustomer> VwShopifyOrderCustomers { get; set; }
        public System.Data.Entity.DbSet<VwShopifyOrderFulfillment> VwShopifyOrderFulfillments { get; set; }
        public System.Data.Entity.DbSet<VwShopifyOrderRefund> VwShopifyOrderRefunds { get; set; }
        public System.Data.Entity.DbSet<VwShopifyOrderTransaction> VwShopifyOrderTransactions { get; set; }
        public System.Data.Entity.DbSet<VwSyncShopifyInventory> VwSyncShopifyInventories { get; set; }
        public System.Data.Entity.DbSet<VwSyncVariantsAndStockItemsAlt> VwSyncVariantsAndStockItemsAlts { get; set; }

        public FakeMonsterDataContext()
        {
            _changeTracker = null;
            _configuration = null;
            _database = null;

            AcumaticaBatchStates = new FakeDbSet<AcumaticaBatchState>("Id");
            AcumaticaCustomers = new FakeDbSet<AcumaticaCustomer>("ShopifyCustomerMonsterId");
            AcumaticaInventories = new FakeDbSet<AcumaticaInventory>("MonsterId");
            AcumaticaInventoryReceipts = new FakeDbSet<AcumaticaInventoryReceipt>("MonsterId");
            AcumaticaPayments = new FakeDbSet<AcumaticaPayment>("ShopifyTransactionMonsterId");
            AcumaticaRefDatas = new FakeDbSet<AcumaticaRefData>("Id");
            AcumaticaSalesOrders = new FakeDbSet<AcumaticaSalesOrder>("ShopifyOrderMonsterId");
            AcumaticaSoShipments = new FakeDbSet<AcumaticaSoShipment>("Id");
            AcumaticaStockItems = new FakeDbSet<AcumaticaStockItem>("MonsterId");
            AcumaticaWarehouses = new FakeDbSet<AcumaticaWarehouse>("Id");
            Connections = new FakeDbSet<Connection>("Id");
            ExclusiveJobMonitors = new FakeDbSet<ExclusiveJobMonitor>("Id");
            ExecutionLogs = new FakeDbSet<ExecutionLog>("Id");
            InventoryReceiptSyncs = new FakeDbSet<InventoryReceiptSync>("Id");
            MonsterSettings = new FakeDbSet<MonsterSetting>("Id");
            PaymentGateways = new FakeDbSet<PaymentGateway>("Id");
            PayoutPreferences = new FakeDbSet<PayoutPreference>("Id");
            ShopAcuWarehouseSyncs = new FakeDbSet<ShopAcuWarehouseSync>("Id");
            ShopifyBatchStates = new FakeDbSet<ShopifyBatchState>("Id");
            ShopifyCustomers = new FakeDbSet<ShopifyCustomer>("Id");
            ShopifyFulfillments = new FakeDbSet<ShopifyFulfillment>("Id");
            ShopifyInventoryLevels = new FakeDbSet<ShopifyInventoryLevel>("MonsterId");
            ShopifyLocations = new FakeDbSet<ShopifyLocation>("MonsterId");
            ShopifyOrders = new FakeDbSet<ShopifyOrder>("Id");
            ShopifyPayouts = new FakeDbSet<ShopifyPayout>("Id");
            ShopifyPayoutTransactions = new FakeDbSet<ShopifyPayoutTransaction>("Id");
            ShopifyProducts = new FakeDbSet<ShopifyProduct>("MonsterId");
            ShopifyRefunds = new FakeDbSet<ShopifyRefund>("Id");
            ShopifyTransactions = new FakeDbSet<ShopifyTransaction>("Id");
            ShopifyVariants = new FakeDbSet<ShopifyVariant>("MonsterId");
            SystemStates = new FakeDbSet<SystemState>("Id");
            VwAcumaticaInventories = new FakeDbSet<VwAcumaticaInventory>("MonsterId", "ItemId", "IsPriceSynced", "StockItemLastUpdated");
            VwAcumaticaSalesOrderAndCustomers = new FakeDbSet<VwAcumaticaSalesOrderAndCustomer>("ShopifyOrderMonsterId", "AcumaticaOrderNbr", "AcumaticaStatus", "SalesOrderLastUpdated");
            VwAcumaticaSalesOrderAndShipments = new FakeDbSet<VwAcumaticaSalesOrderAndShipment>("Id", "AcumaticaShipmentNbr", "ShipmentLastUpdated");
            VwAcumaticaSalesOrderAndShipmentInvoices = new FakeDbSet<VwAcumaticaSalesOrderAndShipmentInvoice>("ShopifyOrderMonsterId", "AcumaticaOrderNbr", "AcumaticaStatus", "SalesOrderLastUpdated");
            VwShopifyInventories = new FakeDbSet<VwShopifyInventory>("MonsterId", "ShopifyProductId", "ProductTitle", "ShopifyVendor", "ShopifyProductType", "ProductIsDeleted", "ProductLastUpdated");
            VwShopifyOrderCustomers = new FakeDbSet<VwShopifyOrderCustomer>("Id", "ShopifyOrderId", "ShopifyOrderNumber", "ShopifyFinancialStatus", "NeedsTransactionGet", "NeedsOrderPut", "OrderLastUpdated");
            VwShopifyOrderFulfillments = new FakeDbSet<VwShopifyOrderFulfillment>("Id", "ShopifyOrderId", "ShopifyOrderNumber", "ShopifyFinancialStatus", "NeedsTransactionGet", "NeedsOrderPut", "OrderLastUpdated");
            VwShopifyOrderRefunds = new FakeDbSet<VwShopifyOrderRefund>("Id", "ShopifyOrderId", "ShopifyOrderNumber", "ShopifyFinancialStatus", "NeedsTransactionGet", "NeedsOrderPut", "OrderLastUpdated");
            VwShopifyOrderTransactions = new FakeDbSet<VwShopifyOrderTransaction>("Id", "ShopifyOrderId", "ShopifyOrderNumber", "ShopifyFinancialStatus", "NeedsTransactionGet", "NeedsOrderPut", "OrderLastUpdated");
            VwSyncShopifyInventories = new FakeDbSet<VwSyncShopifyInventory>("ShopifyLocationName");
            VwSyncVariantsAndStockItemsAlts = new FakeDbSet<VwSyncVariantsAndStockItemsAlt>("MonsterVariantId", "ShopifyProductId", "ShopifyProductTitle", "ShopifyVendor", "ShopifyProductType", "ShopifyVariantId", "ShopifySku", "ShopifyVariantTitle", "AcumaticaItemId", "IsSyncEnabled");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }


        // Stored Procedures
        public int DeleteAllAcumaticaInventoryRecords()
        {

            return 0;
        }

        public int DeleteAllAcumaticaOrderRecords()
        {

            return 0;
        }

        public int DeleteAllShopifyInventoryRecords()
        {

            return 0;
        }

        public int DeleteAllShopifyOrderRecords()
        {

            return 0;
        }

        public int DeleteAllSyncRecords()
        {

            return 0;
        }

        public int DeleteAllSystemRecords()
        {

            return 0;
        }

        public int ResetStartingShopifyOrder()
        {

            return 0;
        }

    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity> where TEntity : class
    {
        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;

        public FakeDbSet()
        {
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public FakeDbSet(params string[] primaryKeys)
        {
            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public override TEntity Find(params object[] keyValues)
        {
            if (_primaryKeys == null)
                throw new System.ArgumentException("No primary keys defined");
            if (keyValues.Length != _primaryKeys.Length)
                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

            var keyQuery = this.AsQueryable();
            keyQuery = keyValues
                .Select((t, i) => i)
                .Aggregate(keyQuery,
                    (current, x) =>
                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

            return keyQuery.SingleOrDefault();
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(System.Threading.CancellationToken cancellationToken, params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues), cancellationToken);
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues));
        }

        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }

        public override TEntity Add(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override System.Collections.Generic.IEnumerable<TEntity> RemoveRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Remove(entity);
            }
            return items;
        }

        public override TEntity Remove(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Remove(item);
            return item;
        }

        public override TEntity Attach(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Create()
        {
            return System.Activator.CreateInstance<TEntity>();
        }

        public override TDerivedEntity Create<TDerivedEntity>()
        {
            return System.Activator.CreateInstance<TDerivedEntity>();
        }

        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local
        {
            get { return _data; }
        }

        System.Type IQueryable.ElementType
        {
            get { return _query.ElementType; }
        }

        System.Linq.Expressions.Expression IQueryable.Expression
        {
            get { return _query.Expression; }
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); }
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator<TEntity> System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbAsyncQueryProvider<TEntity> : System.Data.Entity.Infrastructure.IDbAsyncQueryProvider
    {
        private readonly IQueryProvider _inner;

        public FakeDbAsyncQueryProvider(IQueryProvider inner)
        {
            _inner = inner;
        }

        public IQueryable CreateQuery(System.Linq.Expressions.Expression expression)
        {
            var m = expression as System.Linq.Expressions.MethodCallExpression;
            if (m != null)
            {
                var resultType = m.Method.ReturnType; // it shoud be IQueryable<T>
                var tElement = resultType.GetGenericArguments()[0];
                var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(tElement);
                return (IQueryable) System.Activator.CreateInstance(queryType, expression);
            }
            return new FakeDbAsyncEnumerable<TEntity>(expression);
        }

        public IQueryable<TElement> CreateQuery<TElement>(System.Linq.Expressions.Expression expression)
        {
            var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(typeof(TElement));
            return (IQueryable<TElement>)System.Activator.CreateInstance(queryType, expression);
        }

        public object Execute(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute(expression);
        }

        public TResult Execute<TResult>(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute<TResult>(expression);
        }

        public System.Threading.Tasks.Task<object> ExecuteAsync(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute(expression));
        }

        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<T>, IQueryable<T>
    {
        public FakeDbAsyncEnumerable(System.Collections.Generic.IEnumerable<T> enumerable)
            : base(enumerable)
        { }

        public FakeDbAsyncEnumerable(System.Linq.Expressions.Expression expression)
            : base(expression)
        { }

        public System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator());
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator()
        {
            return GetAsyncEnumerator();
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<T>(this); }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbAsyncEnumerator<T> : System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T>
    {
        private readonly System.Collections.Generic.IEnumerator<T> _inner;

        public FakeDbAsyncEnumerator(System.Collections.Generic.IEnumerator<T> inner)
        {
            _inner = inner;
        }

        public void Dispose()
        {
            _inner.Dispose();
        }

        public System.Threading.Tasks.Task<bool> MoveNextAsync(System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext());
        }

        public T Current
        {
            get { return _inner.Current; }
        }

        object System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current
        {
            get { return Current; }
        }
    }

    #endregion

    #region POCO classes

    // AcumaticaBatchState
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaBatchState
    {
        public long Id { get; set; } // Id (Primary key)
        public System.DateTime? AcumaticaStockItemGetEnd { get; set; } // AcumaticaStockItemGetEnd
        public System.DateTime? AcumaticaInventoryStatusGetEnd { get; set; } // AcumaticaInventoryStatusGetEnd
        public System.DateTime? AcumaticaCustomersGetEnd { get; set; } // AcumaticaCustomersGetEnd
        public System.DateTime? AcumaticaOrdersGetEnd { get; set; } // AcumaticaOrdersGetEnd
        public System.DateTime? AcumaticaShipmentsGetEnd { get; set; } // AcumaticaShipmentsGetEnd
    }

    // AcumaticaCustomer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaCustomer
    {
        public long ShopifyCustomerMonsterId { get; set; } // ShopifyCustomerMonsterId (Primary key)
        public string AcumaticaCustomerId { get; set; } // AcumaticaCustomerId (length: 50)
        public string AcumaticaMainContactEmail { get; set; } // AcumaticaMainContactEmail (length: 100)
        public string AcumaticaJson { get; set; } // AcumaticaJson
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child AcumaticaSalesOrders where [AcumaticaSalesOrder].[ShopifyCustomerMonsterId] point to this entity (FK_AcumaticaSalesOrder_AcumaticaCustomer)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AcumaticaSalesOrder> AcumaticaSalesOrders { get; set; } // AcumaticaSalesOrder.FK_AcumaticaSalesOrder_AcumaticaCustomer

        // Foreign keys

        /// <summary>
        /// Parent ShopifyCustomer pointed by [AcumaticaCustomer].([ShopifyCustomerMonsterId]) (FK_AcumaticaCustomer_ShopifyCustomer)
        /// </summary>
        public virtual ShopifyCustomer ShopifyCustomer { get; set; } // FK_AcumaticaCustomer_ShopifyCustomer

        public AcumaticaCustomer()
        {
            AcumaticaSalesOrders = new System.Collections.Generic.List<AcumaticaSalesOrder>();
        }
    }

    // AcumaticaInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaInventory
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public long? ParentMonsterId { get; set; } // ParentMonsterId
        public string AcumaticaWarehouseId { get; set; } // AcumaticaWarehouseId (length: 50)
        public double AcumaticaAvailQty { get; set; } // AcumaticaAvailQty
        public long WarehouseMonsterId { get; set; } // WarehouseMonsterId
        public bool IsInventorySynced { get; set; } // IsInventorySynced
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Foreign keys

        /// <summary>
        /// Parent AcumaticaStockItem pointed by [AcumaticaInventory].([ParentMonsterId]) (FK_usrAcumaticaWarehouseDetails_usrAcumaticaStockItem)
        /// </summary>
        public virtual AcumaticaStockItem AcumaticaStockItem { get; set; } // FK_usrAcumaticaWarehouseDetails_usrAcumaticaStockItem

        /// <summary>
        /// Parent AcumaticaWarehouse pointed by [AcumaticaInventory].([WarehouseMonsterId]) (FK_usrAcumaticaWarehouseDetails_usrAcumaticaWarehouse)
        /// </summary>
        public virtual AcumaticaWarehouse AcumaticaWarehouse { get; set; } // FK_usrAcumaticaWarehouseDetails_usrAcumaticaWarehouse
    }

    // AcumaticaInventoryReceipt
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaInventoryReceipt
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public string AcumaticaRefNumber { get; set; } // AcumaticaRefNumber (length: 50)
        public string AcumaticaJson { get; set; } // AcumaticaJson
        public bool IsReleased { get; set; } // IsReleased
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdate { get; set; } // LastUpdate

        // Reverse navigation

        /// <summary>
        /// Child InventoryReceiptSyncs where [InventoryReceiptSync].[AcumaticaInvReceiptMonsterId] point to this entity (FK_usrInventoryReceiptSync_usrAcumaticaInventoryReceipt)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<InventoryReceiptSync> InventoryReceiptSyncs { get; set; } // InventoryReceiptSync.FK_usrInventoryReceiptSync_usrAcumaticaInventoryReceipt

        public AcumaticaInventoryReceipt()
        {
            InventoryReceiptSyncs = new System.Collections.Generic.List<InventoryReceiptSync>();
        }
    }

    // AcumaticaPayment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaPayment
    {
        public long ShopifyTransactionMonsterId { get; set; } // ShopifyTransactionMonsterId (Primary key)
        public string AcumaticaRefNbr { get; set; } // AcumaticaRefNbr (length: 50)
        public string AcumaticaDocType { get; set; } // AcumaticaDocType (length: 25)
        public decimal AcumaticaAmount { get; set; } // AcumaticaAmount
        public decimal AcumaticaAppliedToOrder { get; set; } // AcumaticaAppliedToOrder
        public bool IsReleased { get; set; } // IsReleased
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Foreign keys

        /// <summary>
        /// Parent ShopifyTransaction pointed by [AcumaticaPayment].([ShopifyTransactionMonsterId]) (FK_usrShopifyAcuPayment_usrShopifyTransaction)
        /// </summary>
        public virtual ShopifyTransaction ShopifyTransaction { get; set; } // FK_usrShopifyAcuPayment_usrShopifyTransaction
    }

    // AcumaticaRefData
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaRefData
    {
        public long Id { get; set; } // Id (Primary key)
        public string ItemClass { get; set; } // ItemClass
        public string PaymentMethod { get; set; } // PaymentMethod
        public string TaxZone { get; set; } // TaxZone
        public string TaxCategory { get; set; } // TaxCategory
        public string TaxId { get; set; } // TaxId
    }

    // AcumaticaSalesOrder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaSalesOrder
    {
        public long ShopifyOrderMonsterId { get; set; } // ShopifyOrderMonsterId (Primary key)
        public string AcumaticaShipmentDetailsJson { get; set; } // AcumaticaShipmentDetailsJson
        public string AcumaticaOrderNbr { get; set; } // AcumaticaOrderNbr (length: 50)
        public string AcumaticaStatus { get; set; } // AcumaticaStatus (length: 25)
        public long ShopifyCustomerMonsterId { get; set; } // ShopifyCustomerMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child AcumaticaSoShipments where [AcumaticaSoShipment].[ShopifyOrderMonsterId] point to this entity (FK_AcumaticaSoShipment_AcumaticaSalesOrder)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AcumaticaSoShipment> AcumaticaSoShipments { get; set; } // AcumaticaSoShipment.FK_AcumaticaSoShipment_AcumaticaSalesOrder

        // Foreign keys

        /// <summary>
        /// Parent AcumaticaCustomer pointed by [AcumaticaSalesOrder].([ShopifyCustomerMonsterId]) (FK_AcumaticaSalesOrder_AcumaticaCustomer)
        /// </summary>
        public virtual AcumaticaCustomer AcumaticaCustomer { get; set; } // FK_AcumaticaSalesOrder_AcumaticaCustomer

        /// <summary>
        /// Parent ShopifyOrder pointed by [AcumaticaSalesOrder].([ShopifyOrderMonsterId]) (FK_AcumaticaSalesOrder_ShopifyOrder)
        /// </summary>
        public virtual ShopifyOrder ShopifyOrder { get; set; } // FK_AcumaticaSalesOrder_ShopifyOrder

        public AcumaticaSalesOrder()
        {
            AcumaticaSoShipments = new System.Collections.Generic.List<AcumaticaSoShipment>();
        }
    }

    // AcumaticaSoShipment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaSoShipment
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyOrderMonsterId { get; set; } // ShopifyOrderMonsterId
        public string AcumaticaShipmentNbr { get; set; } // AcumaticaShipmentNbr (length: 50)
        public string AcumaticaInvoiceType { get; set; } // AcumaticaInvoiceType (length: 10)
        public string AcumaticaInvoiceNbr { get; set; } // AcumaticaInvoiceNbr (length: 50)
        public string AcumaticaStatus { get; set; } // AcumaticaStatus (length: 50)
        public string AcumaticaShipmentJson { get; set; } // AcumaticaShipmentJson
        public string AcumaticaTrackingNbr { get; set; } // AcumaticaTrackingNbr (length: 200)
        public decimal? AcumaticaInvoiceAmount { get; set; } // AcumaticaInvoiceAmount
        public decimal? AcumaticaInvoiceTax { get; set; } // AcumaticaInvoiceTax
        public bool NeedShipmentGet { get; set; } // NeedShipmentGet
        public long? ShopifyFulfillmentMonsterId { get; set; } // ShopifyFulfillmentMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Foreign keys

        /// <summary>
        /// Parent AcumaticaSalesOrder pointed by [AcumaticaSoShipment].([ShopifyOrderMonsterId]) (FK_AcumaticaSoShipment_AcumaticaSalesOrder)
        /// </summary>
        public virtual AcumaticaSalesOrder AcumaticaSalesOrder { get; set; } // FK_AcumaticaSoShipment_AcumaticaSalesOrder

        /// <summary>
        /// Parent ShopifyFulfillment pointed by [AcumaticaSoShipment].([ShopifyFulfillmentMonsterId]) (FK_AcumaticaSoShipment_ShopifyFulfillment)
        /// </summary>
        public virtual ShopifyFulfillment ShopifyFulfillment { get; set; } // FK_AcumaticaSoShipment_ShopifyFulfillment
    }

    // AcumaticaStockItem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaStockItem
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public string ItemId { get; set; } // ItemId (length: 100)
        public string AcumaticaJson { get; set; } // AcumaticaJson
        public string AcumaticaTaxCategory { get; set; } // AcumaticaTaxCategory (length: 50)
        public string AcumaticaDescription { get; set; } // AcumaticaDescription (length: 200)
        public decimal AcumaticaDefaultPrice { get; set; } // AcumaticaDefaultPrice
        public decimal AcumaticaLastCost { get; set; } // AcumaticaLastCost
        public bool IsPriceSynced { get; set; } // IsPriceSynced
        public long? ShopifyVariantMonsterId { get; set; } // ShopifyVariantMonsterId
        public bool IsSyncEnabled { get; set; } // IsSyncEnabled
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child AcumaticaInventories where [AcumaticaInventory].[ParentMonsterId] point to this entity (FK_usrAcumaticaWarehouseDetails_usrAcumaticaStockItem)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AcumaticaInventory> AcumaticaInventories { get; set; } // AcumaticaInventory.FK_usrAcumaticaWarehouseDetails_usrAcumaticaStockItem

        // Foreign keys

        /// <summary>
        /// Parent ShopifyVariant pointed by [AcumaticaStockItem].([ShopifyVariantMonsterId]) (FK_AcumaticaStockItem_ShopifyVariant)
        /// </summary>
        public virtual ShopifyVariant ShopifyVariant { get; set; } // FK_AcumaticaStockItem_ShopifyVariant

        public AcumaticaStockItem()
        {
            AcumaticaInventories = new System.Collections.Generic.List<AcumaticaInventory>();
        }
    }

    // AcumaticaWarehouse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaWarehouse
    {
        public long Id { get; set; } // Id (Primary key)
        public string AcumaticaWarehouseId { get; set; } // AcumaticaWarehouseId (length: 50)
        public string AcumaticaJson { get; set; } // AcumaticaJson
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child AcumaticaInventories where [AcumaticaInventory].[WarehouseMonsterId] point to this entity (FK_usrAcumaticaWarehouseDetails_usrAcumaticaWarehouse)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AcumaticaInventory> AcumaticaInventories { get; set; } // AcumaticaInventory.FK_usrAcumaticaWarehouseDetails_usrAcumaticaWarehouse
        /// <summary>
        /// Child ShopAcuWarehouseSyncs where [ShopAcuWarehouseSync].[AcumaticaWarehouseMonsterId] point to this entity (FK_usrShopAcuWarehouseSync_usrAcumaticaWarehouse)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShopAcuWarehouseSync> ShopAcuWarehouseSyncs { get; set; } // ShopAcuWarehouseSync.FK_usrShopAcuWarehouseSync_usrAcumaticaWarehouse

        public AcumaticaWarehouse()
        {
            AcumaticaInventories = new System.Collections.Generic.List<AcumaticaInventory>();
            ShopAcuWarehouseSyncs = new System.Collections.Generic.List<ShopAcuWarehouseSync>();
        }
    }

    // Connections
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Connection
    {
        public long Id { get; set; } // Id (Primary key)
        public string ShopifyDomain { get; set; } // ShopifyDomain (length: 500)
        public string ShopifyAuthCodeHash { get; set; } // ShopifyAuthCodeHash (length: 500)
        public string ShopifyAccessToken { get; set; } // ShopifyAccessToken (length: 500)
        public string ShopifyApiKey { get; set; } // ShopifyApiKey (length: 500)
        public string ShopifyApiPassword { get; set; } // ShopifyApiPassword (length: 500)
        public string ShopifyApiSecret { get; set; } // ShopifyApiSecret (length: 500)
        public string AcumaticaInstanceUrl { get; set; } // AcumaticaInstanceUrl (length: 500)
        public string AcumaticaBranch { get; set; } // AcumaticaBranch (length: 500)
        public string AcumaticaCompanyName { get; set; } // AcumaticaCompanyName (length: 500)
        public string AcumaticaUsername { get; set; } // AcumaticaUsername (length: 500)
        public string AcumaticaPassword { get; set; } // AcumaticaPassword (length: 500)
    }

    // ExclusiveJobMonitor
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ExclusiveJobMonitor
    {
        public long Id { get; set; } // Id (Primary key)
        public int BackgroundJobType { get; set; } // BackgroundJobType
        public bool IsRecurring { get; set; } // IsRecurring
        public string HangFireJobId { get; set; } // HangFireJobId (length: 100)
        public bool ReceivedKillSignal { get; set; } // ReceivedKillSignal
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated
    }

    // ExecutionLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ExecutionLog
    {
        public long Id { get; set; } // Id (Primary key)
        public int LogLevel { get; set; } // LogLevel
        public string LogContent { get; set; } // LogContent (length: 250)
        public System.DateTime DateCreated { get; set; } // DateCreated
    }

    // InventoryReceiptSync
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InventoryReceiptSync
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyInventoryMonsterId { get; set; } // ShopifyInventoryMonsterId
        public long AcumaticaInvReceiptMonsterId { get; set; } // AcumaticaInvReceiptMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Foreign keys

        /// <summary>
        /// Parent AcumaticaInventoryReceipt pointed by [InventoryReceiptSync].([AcumaticaInvReceiptMonsterId]) (FK_usrInventoryReceiptSync_usrAcumaticaInventoryReceipt)
        /// </summary>
        public virtual AcumaticaInventoryReceipt AcumaticaInventoryReceipt { get; set; } // FK_usrInventoryReceiptSync_usrAcumaticaInventoryReceipt

        /// <summary>
        /// Parent ShopifyInventoryLevel pointed by [InventoryReceiptSync].([ShopifyInventoryMonsterId]) (FK_usrInventoryReceiptSync_usrShopifyInventoryLevels)
        /// </summary>
        public virtual ShopifyInventoryLevel ShopifyInventoryLevel { get; set; } // FK_usrInventoryReceiptSync_usrShopifyInventoryLevels
    }

    // MonsterSettings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MonsterSetting
    {
        public long Id { get; set; } // Id (Primary key)
        public string AcumaticaTimeZone { get; set; } // AcumaticaTimeZone (length: 50)
        public string AcumaticaDefaultItemClass { get; set; } // AcumaticaDefaultItemClass (length: 50)
        public string AcumaticaDefaultPostingClass { get; set; } // AcumaticaDefaultPostingClass (length: 50)
        public string AcumaticaTaxZone { get; set; } // AcumaticaTaxZone (length: 50)
        public string AcumaticaTaxExemptCategory { get; set; } // AcumaticaTaxExemptCategory (length: 50)
        public string AcumaticaTaxableCategory { get; set; } // AcumaticaTaxableCategory (length: 50)
        public string AcumaticaLineItemTaxId { get; set; } // AcumaticaLineItemTaxId (length: 50)
        public string AcumaticaFreightTaxId { get; set; } // AcumaticaFreightTaxId (length: 50)
        public bool SyncOrdersEnabled { get; set; } // SyncOrdersEnabled
        public bool SyncInventoryEnabled { get; set; } // SyncInventoryEnabled
        public bool SyncFulfillmentsEnabled { get; set; } // SyncFulfillmentsEnabled
        public bool SyncRefundsEnabled { get; set; } // SyncRefundsEnabled
        public long? ShopifyOrderId { get; set; } // ShopifyOrderId
        public string ShopifyOrderName { get; set; } // ShopifyOrderName (length: 50)
        public System.DateTime? ShopifyOrderCreatedAtUtc { get; set; } // ShopifyOrderCreatedAtUtc
        public int MaxParallelAcumaticaSyncs { get; set; } // MaxParallelAcumaticaSyncs
    }

    // PaymentGateways
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PaymentGateway
    {
        public int Id { get; set; } // Id (Primary key)
        public string ShopifyGatewayId { get; set; } // ShopifyGatewayId (length: 50)
        public string AcumaticaPaymentMethod { get; set; } // AcumaticaPaymentMethod (length: 25)
        public string AcumaticaCashAccount { get; set; } // AcumaticaCashAccount (length: 25)
    }

    // PayoutPreferences
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PayoutPreference
    {
        public int Id { get; set; } // Id (Primary key)
        public string AcumaticaCashAccount { get; set; } // AcumaticaCashAccount (length: 50)
    }

    // ShopAcuWarehouseSync
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopAcuWarehouseSync
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyLocationMonsterId { get; set; } // ShopifyLocationMonsterId
        public long AcumaticaWarehouseMonsterId { get; set; } // AcumaticaWarehouseMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Foreign keys

        /// <summary>
        /// Parent AcumaticaWarehouse pointed by [ShopAcuWarehouseSync].([AcumaticaWarehouseMonsterId]) (FK_usrShopAcuWarehouseSync_usrAcumaticaWarehouse)
        /// </summary>
        public virtual AcumaticaWarehouse AcumaticaWarehouse { get; set; } // FK_usrShopAcuWarehouseSync_usrAcumaticaWarehouse

        /// <summary>
        /// Parent ShopifyLocation pointed by [ShopAcuWarehouseSync].([ShopifyLocationMonsterId]) (FK_usrShopAcuWarehouseSync_usrShopifyLocation)
        /// </summary>
        public virtual ShopifyLocation ShopifyLocation { get; set; } // FK_usrShopAcuWarehouseSync_usrShopifyLocation
    }

    // ShopifyBatchState
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyBatchState
    {
        public long Id { get; set; } // Id (Primary key)
        public System.DateTime? ShopifyProductsGetEnd { get; set; } // ShopifyProductsGetEnd
        public System.DateTime? ShopifyOrdersGetEnd { get; set; } // ShopifyOrdersGetEnd
        public System.DateTime? ShopifyCustomersGetEnd { get; set; } // ShopifyCustomersGetEnd
        public System.DateTime? ShopifyPayoutGetEnd { get; set; } // ShopifyPayoutGetEnd
    }

    // ShopifyCustomer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyCustomer
    {
        public long Id { get; set; } // Id (Primary key)
        public string ShopifyJson { get; set; } // ShopifyJson
        public long ShopifyCustomerId { get; set; } // ShopifyCustomerId
        public string ShopifyPrimaryEmail { get; set; } // ShopifyPrimaryEmail (length: 100)
        public bool NeedsCustomerPut { get; set; } // NeedsCustomerPut
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) ShopifyCustomer pointed by [AcumaticaCustomer].[ShopifyCustomerMonsterId] (FK_AcumaticaCustomer_ShopifyCustomer)
        /// </summary>
        public virtual AcumaticaCustomer AcumaticaCustomer { get; set; } // AcumaticaCustomer.FK_AcumaticaCustomer_ShopifyCustomer
        /// <summary>
        /// Child ShopifyOrders where [ShopifyOrder].[CustomerMonsterId] point to this entity (FK_usrShopifyOrder_usrShopifyCustomer)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShopifyOrder> ShopifyOrders { get; set; } // ShopifyOrder.FK_usrShopifyOrder_usrShopifyCustomer

        public ShopifyCustomer()
        {
            ShopifyOrders = new System.Collections.Generic.List<ShopifyOrder>();
        }
    }

    // ShopifyFulfillment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyFulfillment
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyFulfillmentId { get; set; } // ShopifyFulfillmentId
        public long ShopifyOrderId { get; set; } // ShopifyOrderId
        public string ShopifyStatus { get; set; } // ShopifyStatus (length: 50)
        public string ShopifyTrackingNumber { get; set; } // ShopifyTrackingNumber (length: 200)
        public long OrderMonsterId { get; set; } // OrderMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child AcumaticaSoShipments where [AcumaticaSoShipment].[ShopifyFulfillmentMonsterId] point to this entity (FK_AcumaticaSoShipment_ShopifyFulfillment)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AcumaticaSoShipment> AcumaticaSoShipments { get; set; } // AcumaticaSoShipment.FK_AcumaticaSoShipment_ShopifyFulfillment

        // Foreign keys

        /// <summary>
        /// Parent ShopifyOrder pointed by [ShopifyFulfillment].([OrderMonsterId]) (FK_usrShopifyFulfillment_usrShopifyOrder)
        /// </summary>
        public virtual ShopifyOrder ShopifyOrder { get; set; } // FK_usrShopifyFulfillment_usrShopifyOrder

        public ShopifyFulfillment()
        {
            AcumaticaSoShipments = new System.Collections.Generic.List<AcumaticaSoShipment>();
        }
    }

    // ShopifyInventoryLevel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyInventoryLevel
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public long ParentMonsterId { get; set; } // ParentMonsterId
        public long ShopifyInventoryItemId { get; set; } // ShopifyInventoryItemId
        public long ShopifyLocationId { get; set; } // ShopifyLocationId
        public int ShopifyAvailableQuantity { get; set; } // ShopifyAvailableQuantity
        public long? LocationMonsterId { get; set; } // LocationMonsterId
        public long? InventoryReceiptMonsterId { get; set; } // InventoryReceiptMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child InventoryReceiptSyncs where [InventoryReceiptSync].[ShopifyInventoryMonsterId] point to this entity (FK_usrInventoryReceiptSync_usrShopifyInventoryLevels)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<InventoryReceiptSync> InventoryReceiptSyncs { get; set; } // InventoryReceiptSync.FK_usrInventoryReceiptSync_usrShopifyInventoryLevels

        // Foreign keys

        /// <summary>
        /// Parent ShopifyLocation pointed by [ShopifyInventoryLevel].([LocationMonsterId]) (FK_usrShopifyInventoryLevels_usrShopifyLocation)
        /// </summary>
        public virtual ShopifyLocation ShopifyLocation { get; set; } // FK_usrShopifyInventoryLevels_usrShopifyLocation

        /// <summary>
        /// Parent ShopifyVariant pointed by [ShopifyInventoryLevel].([ParentMonsterId]) (FK_usrShopifyInventoryLevels_usrShopifyVariant)
        /// </summary>
        public virtual ShopifyVariant ShopifyVariant { get; set; } // FK_usrShopifyInventoryLevels_usrShopifyVariant

        public ShopifyInventoryLevel()
        {
            InventoryReceiptSyncs = new System.Collections.Generic.List<InventoryReceiptSync>();
        }
    }

    // ShopifyLocation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyLocation
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public long ShopifyLocationId { get; set; } // ShopifyLocationId
        public string ShopifyJson { get; set; } // ShopifyJson
        public string ShopifyLocationName { get; set; } // ShopifyLocationName (length: 50)
        public bool ShopifyActive { get; set; } // ShopifyActive
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child ShopAcuWarehouseSyncs where [ShopAcuWarehouseSync].[ShopifyLocationMonsterId] point to this entity (FK_usrShopAcuWarehouseSync_usrShopifyLocation)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShopAcuWarehouseSync> ShopAcuWarehouseSyncs { get; set; } // ShopAcuWarehouseSync.FK_usrShopAcuWarehouseSync_usrShopifyLocation
        /// <summary>
        /// Child ShopifyInventoryLevels where [ShopifyInventoryLevel].[LocationMonsterId] point to this entity (FK_usrShopifyInventoryLevels_usrShopifyLocation)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShopifyInventoryLevel> ShopifyInventoryLevels { get; set; } // ShopifyInventoryLevel.FK_usrShopifyInventoryLevels_usrShopifyLocation

        public ShopifyLocation()
        {
            ShopAcuWarehouseSyncs = new System.Collections.Generic.List<ShopAcuWarehouseSync>();
            ShopifyInventoryLevels = new System.Collections.Generic.List<ShopifyInventoryLevel>();
        }
    }

    // ShopifyOrder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyOrder
    {
        public long Id { get; set; } // Id (Primary key)
        public string ShopifyJson { get; set; } // ShopifyJson
        public long ShopifyOrderId { get; set; } // ShopifyOrderId
        public string ShopifyOrderNumber { get; set; } // ShopifyOrderNumber (length: 25)
        public bool ShopifyIsCancelled { get; set; } // ShopifyIsCancelled
        public string ShopifyFinancialStatus { get; set; } // ShopifyFinancialStatus (length: 25)
        public bool NeedsTransactionGet { get; set; } // NeedsTransactionGet
        public bool NeedsOrderPut { get; set; } // NeedsOrderPut
        public bool IsBlocked { get; set; } // IsBlocked
        public long CustomerMonsterId { get; set; } // CustomerMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) ShopifyOrder pointed by [AcumaticaSalesOrder].[ShopifyOrderMonsterId] (FK_AcumaticaSalesOrder_ShopifyOrder)
        /// </summary>
        public virtual AcumaticaSalesOrder AcumaticaSalesOrder { get; set; } // AcumaticaSalesOrder.FK_AcumaticaSalesOrder_ShopifyOrder
        /// <summary>
        /// Child ShopifyFulfillments where [ShopifyFulfillment].[OrderMonsterId] point to this entity (FK_usrShopifyFulfillment_usrShopifyOrder)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShopifyFulfillment> ShopifyFulfillments { get; set; } // ShopifyFulfillment.FK_usrShopifyFulfillment_usrShopifyOrder
        /// <summary>
        /// Child ShopifyRefunds where [ShopifyRefund].[OrderMonsterId] point to this entity (FK_usrShopifyRefund_usrShopifyOrder)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShopifyRefund> ShopifyRefunds { get; set; } // ShopifyRefund.FK_usrShopifyRefund_usrShopifyOrder
        /// <summary>
        /// Child ShopifyTransactions where [ShopifyTransaction].[OrderMonsterId] point to this entity (FK_usrShopifyTransaction_usrShopifyOrder)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShopifyTransaction> ShopifyTransactions { get; set; } // ShopifyTransaction.FK_usrShopifyTransaction_usrShopifyOrder

        // Foreign keys

        /// <summary>
        /// Parent ShopifyCustomer pointed by [ShopifyOrder].([CustomerMonsterId]) (FK_usrShopifyOrder_usrShopifyCustomer)
        /// </summary>
        public virtual ShopifyCustomer ShopifyCustomer { get; set; } // FK_usrShopifyOrder_usrShopifyCustomer

        public ShopifyOrder()
        {
            ShopifyFulfillments = new System.Collections.Generic.List<ShopifyFulfillment>();
            ShopifyRefunds = new System.Collections.Generic.List<ShopifyRefund>();
            ShopifyTransactions = new System.Collections.Generic.List<ShopifyTransaction>();
        }
    }

    // ShopifyPayout
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyPayout
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyPayoutId { get; set; } // ShopifyPayoutId
        public string ShopifyLastStatus { get; set; } // ShopifyLastStatus (length: 50)
        public string Json { get; set; } // Json (length: 2147483647)
        public bool AllTransDownloaded { get; set; } // AllTransDownloaded
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child ShopifyPayoutTransactions where [ShopifyPayoutTransaction].[MonsterParentId] point to this entity (FK_usrShopifyPayoutTransaction_usrShopifyPayout)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShopifyPayoutTransaction> ShopifyPayoutTransactions { get; set; } // ShopifyPayoutTransaction.FK_usrShopifyPayoutTransaction_usrShopifyPayout

        public ShopifyPayout()
        {
            ShopifyPayoutTransactions = new System.Collections.Generic.List<ShopifyPayoutTransaction>();
        }
    }

    // ShopifyPayoutTransaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyPayoutTransaction
    {
        public long Id { get; set; } // Id (Primary key)
        public long MonsterParentId { get; set; } // MonsterParentId
        public long ShopifyPayoutId { get; set; } // ShopifyPayoutId
        public long ShopifyPayoutTransId { get; set; } // ShopifyPayoutTransId
        public long? ShopifyOrderId { get; set; } // ShopifyOrderId
        public long? ShopifyCustomerId { get; set; } // ShopifyCustomerId
        public string Type { get; set; } // Type (length: 50)
        public string Json { get; set; } // Json (length: 2147483647)
        public System.DateTime LastUpdated { get; set; } // LastUpdated
        public System.DateTime CreatedDate { get; set; } // CreatedDate

        // Foreign keys

        /// <summary>
        /// Parent ShopifyPayout pointed by [ShopifyPayoutTransaction].([MonsterParentId]) (FK_usrShopifyPayoutTransaction_usrShopifyPayout)
        /// </summary>
        public virtual ShopifyPayout ShopifyPayout { get; set; } // FK_usrShopifyPayoutTransaction_usrShopifyPayout
    }

    // ShopifyProduct
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyProduct
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public long ShopifyProductId { get; set; } // ShopifyProductId
        public string ShopifyTitle { get; set; } // ShopifyTitle (length: 100)
        public string ShopifyVendor { get; set; } // ShopifyVendor (length: 100)
        public string ShopifyProductType { get; set; } // ShopifyProductType (length: 100)
        public string ShopifyJson { get; set; } // ShopifyJson
        public bool IsDeleted { get; set; } // IsDeleted
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child ShopifyVariants where [ShopifyVariant].[ParentMonsterId] point to this entity (FK_usrShopifyVariant_usrShopifyProduct)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShopifyVariant> ShopifyVariants { get; set; } // ShopifyVariant.FK_usrShopifyVariant_usrShopifyProduct

        public ShopifyProduct()
        {
            ShopifyVariants = new System.Collections.Generic.List<ShopifyVariant>();
        }
    }

    // ShopifyRefund
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyRefund
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyRefundId { get; set; } // ShopifyRefundId
        public long ShopifyOrderId { get; set; } // ShopifyOrderId
        public long OrderMonsterId { get; set; } // OrderMonsterId
        public decimal CreditAdjustment { get; set; } // CreditAdjustment
        public decimal DebitAdjustment { get; set; } // DebitAdjustment
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Foreign keys

        /// <summary>
        /// Parent ShopifyOrder pointed by [ShopifyRefund].([OrderMonsterId]) (FK_usrShopifyRefund_usrShopifyOrder)
        /// </summary>
        public virtual ShopifyOrder ShopifyOrder { get; set; } // FK_usrShopifyRefund_usrShopifyOrder
    }

    // ShopifyTransaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyTransaction
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyTransactionId { get; set; } // ShopifyTransactionId
        public long ShopifyOrderId { get; set; } // ShopifyOrderId
        public string ShopifyStatus { get; set; } // ShopifyStatus (length: 25)
        public string ShopifyKind { get; set; } // ShopifyKind (length: 25)
        public string ShopifyJson { get; set; } // ShopifyJson
        public string ShopifyGateway { get; set; } // ShopifyGateway (length: 50)
        public decimal ShopifyAmount { get; set; } // ShopifyAmount
        public long? ShopifyRefundId { get; set; } // ShopifyRefundId
        public bool Ignore { get; set; } // Ignore
        public bool NeedsPaymentPut { get; set; } // NeedsPaymentPut
        public long OrderMonsterId { get; set; } // OrderMonsterId
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) ShopifyTransaction pointed by [AcumaticaPayment].[ShopifyTransactionMonsterId] (FK_usrShopifyAcuPayment_usrShopifyTransaction)
        /// </summary>
        public virtual AcumaticaPayment AcumaticaPayment { get; set; } // AcumaticaPayment.FK_usrShopifyAcuPayment_usrShopifyTransaction

        // Foreign keys

        /// <summary>
        /// Parent ShopifyOrder pointed by [ShopifyTransaction].([OrderMonsterId]) (FK_usrShopifyTransaction_usrShopifyOrder)
        /// </summary>
        public virtual ShopifyOrder ShopifyOrder { get; set; } // FK_usrShopifyTransaction_usrShopifyOrder
    }

    // ShopifyVariant
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyVariant
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public long ParentMonsterId { get; set; } // ParentMonsterId
        public long ShopifyVariantId { get; set; } // ShopifyVariantId
        public long ShopifyInventoryItemId { get; set; } // ShopifyInventoryItemId
        public string ShopifyVariantJson { get; set; } // ShopifyVariantJson
        public string ShopifySku { get; set; } // ShopifySku (length: 100)
        public string ShopifyTitle { get; set; } // ShopifyTitle (length: 200)
        public bool ShopifyIsTracked { get; set; } // ShopifyIsTracked
        public decimal ShopifyPrice { get; set; } // ShopifyPrice
        public decimal ShopifyCost { get; set; } // ShopifyCost
        public bool ShopifyIsTaxable { get; set; } // ShopifyIsTaxable
        public bool IsMissing { get; set; } // IsMissing
        public System.DateTime DateCreated { get; set; } // DateCreated
        public System.DateTime LastUpdated { get; set; } // LastUpdated

        // Reverse navigation

        /// <summary>
        /// Child AcumaticaStockItems where [AcumaticaStockItem].[ShopifyVariantMonsterId] point to this entity (FK_AcumaticaStockItem_ShopifyVariant)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AcumaticaStockItem> AcumaticaStockItems { get; set; } // AcumaticaStockItem.FK_AcumaticaStockItem_ShopifyVariant
        /// <summary>
        /// Child ShopifyInventoryLevels where [ShopifyInventoryLevel].[ParentMonsterId] point to this entity (FK_usrShopifyInventoryLevels_usrShopifyVariant)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ShopifyInventoryLevel> ShopifyInventoryLevels { get; set; } // ShopifyInventoryLevel.FK_usrShopifyInventoryLevels_usrShopifyVariant

        // Foreign keys

        /// <summary>
        /// Parent ShopifyProduct pointed by [ShopifyVariant].([ParentMonsterId]) (FK_usrShopifyVariant_usrShopifyProduct)
        /// </summary>
        public virtual ShopifyProduct ShopifyProduct { get; set; } // FK_usrShopifyVariant_usrShopifyProduct

        public ShopifyVariant()
        {
            AcumaticaStockItems = new System.Collections.Generic.List<AcumaticaStockItem>();
            ShopifyInventoryLevels = new System.Collections.Generic.List<ShopifyInventoryLevel>();
        }
    }

    // SystemState
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SystemState
    {
        public long Id { get; set; } // Id (Primary key)
        public bool IsRandomAccessMode { get; set; } // IsRandomAccessMode
        public int ShopifyConnState { get; set; } // ShopifyConnState
        public bool IsShopifyUrlFinalized { get; set; } // IsShopifyUrlFinalized
        public int AcumaticaConnState { get; set; } // AcumaticaConnState
        public int AcumaticaRefDataState { get; set; } // AcumaticaRefDataState
        public int SettingsState { get; set; } // SettingsState
        public int SettingsTaxesState { get; set; } // SettingsTaxesState
        public int WarehouseSyncState { get; set; } // WarehouseSyncState
        public int InventoryRefreshState { get; set; } // InventoryRefreshState
        public int StartingShopifyOrderState { get; set; } // StartingShopifyOrderState
        public int ShopifyOrderEtcGetState { get; set; } // ShopifyOrderEtcGetState
        public int AcumaticaOrderEtcGetState { get; set; } // AcumaticaOrderEtcGetState
        public int AcumaticaOrderEtcPutState { get; set; } // AcumaticaOrderEtcPutState
        public int AcumaticaRefundPutState { get; set; } // AcumaticaRefundPutState
        public int ShopifyFulfillmentPutState { get; set; } // ShopifyFulfillmentPutState
        public int ShopifyInventoryPutState { get; set; } // ShopifyInventoryPutState
    }

    // vw_AcumaticaInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwAcumaticaInventory
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public string ItemId { get; set; } // ItemId (Primary key) (length: 100)
        public bool IsPriceSynced { get; set; } // IsPriceSynced (Primary key)
        public string AcumaticaWarehouseId { get; set; } // AcumaticaWarehouseId (length: 50)
        public double? AcumaticaQtyOnHand { get; set; } // AcumaticaQtyOnHand
        public bool? IsInventorySynced { get; set; } // IsInventorySynced
        public System.DateTime StockItemLastUpdated { get; set; } // StockItemLastUpdated (Primary key)
        public System.DateTime? WarehouseDetailsLastUpdated { get; set; } // WarehouseDetailsLastUpdated
    }

    // vw_AcumaticaSalesOrderAndCustomer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwAcumaticaSalesOrderAndCustomer
    {
        public long ShopifyOrderMonsterId { get; set; } // ShopifyOrderMonsterId (Primary key)
        public string AcumaticaOrderNbr { get; set; } // AcumaticaOrderNbr (Primary key) (length: 50)
        public string AcumaticaStatus { get; set; } // AcumaticaStatus (Primary key) (length: 25)
        public string AcumaticaCustomerId { get; set; } // AcumaticaCustomerId (length: 50)
        public System.DateTime SalesOrderLastUpdated { get; set; } // SalesOrderLastUpdated (Primary key)
        public System.DateTime? CustomerLastUpdated { get; set; } // CustomerLastUpdated
    }

    // vw_AcumaticaSalesOrderAndShipments
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwAcumaticaSalesOrderAndShipment
    {
        public long Id { get; set; } // Id (Primary key)
        public string AcumaticaShipmentNbr { get; set; } // AcumaticaShipmentNbr (Primary key) (length: 50)
        public string AcumaticaStatus { get; set; } // AcumaticaStatus (length: 25)
        public string AcumaticaOrderNbr { get; set; } // AcumaticaOrderNbr (length: 50)
        public System.DateTime ShipmentLastUpdated { get; set; } // ShipmentLastUpdated (Primary key)
        public System.DateTime? SalesOrderRefLastUpdated { get; set; } // SalesOrderRefLastUpdated
    }

    // vw_AcumaticaSalesOrderAndShipmentInvoices
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwAcumaticaSalesOrderAndShipmentInvoice
    {
        public long ShopifyOrderMonsterId { get; set; } // ShopifyOrderMonsterId (Primary key)
        public string AcumaticaOrderNbr { get; set; } // AcumaticaOrderNbr (Primary key) (length: 50)
        public string AcumaticaStatus { get; set; } // AcumaticaStatus (Primary key) (length: 25)
        public string AcumaticaShipmentNbr { get; set; } // AcumaticaShipmentNbr (length: 50)
        public string AcumaticaInvoiceNbr { get; set; } // AcumaticaInvoiceNbr (length: 50)
        public string AcumaticaTrackingNbr { get; set; } // AcumaticaTrackingNbr (length: 200)
        public System.DateTime SalesOrderLastUpdated { get; set; } // SalesOrderLastUpdated (Primary key)
        public System.DateTime? ShipmentLastUpdated { get; set; } // ShipmentLastUpdated
    }

    // vw_ShopifyInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwShopifyInventory
    {
        public long MonsterId { get; set; } // MonsterId (Primary key)
        public long ShopifyProductId { get; set; } // ShopifyProductId (Primary key)
        public string ProductTitle { get; set; } // ProductTitle (Primary key) (length: 100)
        public string ShopifyVendor { get; set; } // ShopifyVendor (Primary key) (length: 100)
        public string ShopifyProductType { get; set; } // ShopifyProductType (Primary key) (length: 100)
        public bool ProductIsDeleted { get; set; } // ProductIsDeleted (Primary key)
        public long? ShopifyVariantId { get; set; } // ShopifyVariantId
        public long? ShopifyInventoryItemId { get; set; } // ShopifyInventoryItemId
        public string ShopifySku { get; set; } // ShopifySku (length: 100)
        public string VariantTitle { get; set; } // VariantTitle (length: 200)
        public decimal? ShopifyCost { get; set; } // ShopifyCost
        public bool? VariantIsMissing { get; set; } // VariantIsMissing
        public long? ShopifyLocationId { get; set; } // ShopifyLocationId
        public int? ShopifyAvailableQuantity { get; set; } // ShopifyAvailableQuantity
        public System.DateTime ProductLastUpdated { get; set; } // ProductLastUpdated (Primary key)
        public System.DateTime? VariantLastUpdated { get; set; } // VariantLastUpdated
        public System.DateTime? InventoryLevelLastUpdate { get; set; } // InventoryLevelLastUpdate
    }

    // vw_ShopifyOrderCustomer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwShopifyOrderCustomer
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyOrderId { get; set; } // ShopifyOrderId (Primary key)
        public string ShopifyOrderNumber { get; set; } // ShopifyOrderNumber (Primary key) (length: 25)
        public string ShopifyFinancialStatus { get; set; } // ShopifyFinancialStatus (Primary key) (length: 25)
        public bool NeedsTransactionGet { get; set; } // NeedsTransactionGet (Primary key)
        public bool NeedsOrderPut { get; set; } // NeedsOrderPut (Primary key)
        public long? ShopifyCustomerId { get; set; } // ShopifyCustomerId
        public string ShopifyPrimaryEmail { get; set; } // ShopifyPrimaryEmail (length: 100)
        public bool? NeedsCustomerPut { get; set; } // NeedsCustomerPut
        public System.DateTime OrderLastUpdated { get; set; } // OrderLastUpdated (Primary key)
        public System.DateTime? CustomerLastUpdated { get; set; } // CustomerLastUpdated
    }

    // vw_ShopifyOrderFulfillments
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwShopifyOrderFulfillment
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyOrderId { get; set; } // ShopifyOrderId (Primary key)
        public string ShopifyOrderNumber { get; set; } // ShopifyOrderNumber (Primary key) (length: 25)
        public string ShopifyFinancialStatus { get; set; } // ShopifyFinancialStatus (Primary key) (length: 25)
        public bool NeedsTransactionGet { get; set; } // NeedsTransactionGet (Primary key)
        public bool NeedsOrderPut { get; set; } // NeedsOrderPut (Primary key)
        public long? ShopifyFulfillmentId { get; set; } // ShopifyFulfillmentId
        public string ShopifyStatus { get; set; } // ShopifyStatus (length: 50)
        public System.DateTime OrderLastUpdated { get; set; } // OrderLastUpdated (Primary key)
        public System.DateTime? FulfillmentLastUpdated { get; set; } // FulfillmentLastUpdated
    }

    // vw_ShopifyOrderRefunds
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwShopifyOrderRefund
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyOrderId { get; set; } // ShopifyOrderId (Primary key)
        public string ShopifyOrderNumber { get; set; } // ShopifyOrderNumber (Primary key) (length: 25)
        public string ShopifyFinancialStatus { get; set; } // ShopifyFinancialStatus (Primary key) (length: 25)
        public bool NeedsTransactionGet { get; set; } // NeedsTransactionGet (Primary key)
        public bool NeedsOrderPut { get; set; } // NeedsOrderPut (Primary key)
        public long? ShopifyRefundId { get; set; } // ShopifyRefundId
        public System.DateTime OrderLastUpdated { get; set; } // OrderLastUpdated (Primary key)
        public System.DateTime? RefundLastUpdated { get; set; } // RefundLastUpdated
    }

    // vw_ShopifyOrderTransactions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwShopifyOrderTransaction
    {
        public long Id { get; set; } // Id (Primary key)
        public long ShopifyOrderId { get; set; } // ShopifyOrderId (Primary key)
        public string ShopifyOrderNumber { get; set; } // ShopifyOrderNumber (Primary key) (length: 25)
        public string ShopifyFinancialStatus { get; set; } // ShopifyFinancialStatus (Primary key) (length: 25)
        public bool NeedsTransactionGet { get; set; } // NeedsTransactionGet (Primary key)
        public bool NeedsOrderPut { get; set; } // NeedsOrderPut (Primary key)
        public long? ShopifyTransactionId { get; set; } // ShopifyTransactionId
        public string ShopifyKind { get; set; } // ShopifyKind (length: 25)
        public string ShopifyStatus { get; set; } // ShopifyStatus (length: 25)
        public System.DateTime OrderLastUpdated { get; set; } // OrderLastUpdated (Primary key)
        public System.DateTime? TransactionLastUpdated { get; set; } // TransactionLastUpdated
    }

    // The table 'vw_SyncAcumaticaInventory' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vw_SyncAcumaticaInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncAcumaticaInventory
    {
        public long? MonsterId { get; set; } // MonsterId
        public string AcumaticaItemId { get; set; } // AcumaticaItemId (length: 100)
        public string AcumaticaWarehouseId { get; set; } // AcumaticaWarehouseId (length: 50)
        public double? AcumaticaQtyOnHand { get; set; } // AcumaticaQtyOnHand
        public long? WarehouseSyncId { get; set; } // WarehouseSyncId
        public long? ItemSyncId { get; set; } // ItemSyncId
    }

    // The table 'vw_SyncCustomerWithCustomers' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vw_SyncCustomerWithCustomers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncCustomerWithCustomer
    {
        public long? ShopifyCustomerId { get; set; } // ShopifyCustomerId
        public string ShopifyPrimaryEmail { get; set; } // ShopifyPrimaryEmail (length: 100)
        public bool? NeedsCustomerPut { get; set; } // NeedsCustomerPut
        public System.DateTime? ShopifyLastUpdated { get; set; } // ShopifyLastUpdated
        public string AcumaticaMainContactEmail { get; set; } // AcumaticaMainContactEmail (length: 100)
        public System.DateTime? AcumaticaLastUpdated { get; set; } // AcumaticaLastUpdated
    }

    // The table 'vw_SyncFulfillmentsAndShipments' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vw_SyncFulfillmentsAndShipments
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncFulfillmentsAndShipment
    {
        public long? ShopifyOrderId { get; set; } // ShopifyOrderId
        public string ShopifyOrderNumber { get; set; } // ShopifyOrderNumber (length: 25)
        public long? ShopifyFulfillmentId { get; set; } // ShopifyFulfillmentId
        public string ShopifyStatus { get; set; } // ShopifyStatus (length: 50)
        public string AcumaticaShipmentNbr { get; set; } // AcumaticaShipmentNbr (length: 50)
        public string AcumaticaInvoiceNbr { get; set; } // AcumaticaInvoiceNbr (length: 50)
        public System.DateTime? FulfillmentLastUpdated { get; set; } // FulfillmentLastUpdated
    }

    // The table 'vw_SyncInventoryAllInclusive' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vw_SyncInventoryAllInclusive
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncInventoryAllInclusive
    {
        public string ShopifySku { get; set; } // ShopifySku (length: 100)
        public string AcumaticaItemId { get; set; } // AcumaticaItemId (length: 100)
        public long? ShopifyVariantId { get; set; } // ShopifyVariantId
        public bool? IsMissing { get; set; } // IsMissing
        public long? ShopifyLocationId { get; set; } // ShopifyLocationId
        public string ShopifyLocationName { get; set; } // ShopifyLocationName (length: 50)
        public string AcumaticaWarehouseId { get; set; } // AcumaticaWarehouseId (length: 50)
        public int? ShopifyAvailableQuantity { get; set; } // ShopifyAvailableQuantity
        public double? AcumaticaQtyOnHand { get; set; } // AcumaticaQtyOnHand
        public long? SyncRecordId { get; set; } // SyncRecordId
    }

    // The table 'vw_SyncInventoryLevelAndReceipts' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vw_SyncInventoryLevelAndReceipts
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncInventoryLevelAndReceipt
    {
        public string ShopifySku { get; set; } // ShopifySku (length: 100)
        public long? MonsterId { get; set; } // MonsterId
        public long? ShopifyInventoryItemId { get; set; } // ShopifyInventoryItemId
        public long? ShopifyLocationId { get; set; } // ShopifyLocationId
        public int? ShopifyAvailableQuantity { get; set; } // ShopifyAvailableQuantity
        public string AcumaticaRefNumber { get; set; } // AcumaticaRefNumber (length: 50)
        public bool? IsReleased { get; set; } // IsReleased
        public System.DateTime? InventoryLevelLastUpdated { get; set; } // InventoryLevelLastUpdated
        public System.DateTime? InventoryReceiptLastUpdated { get; set; } // InventoryReceiptLastUpdated
    }

    // The table 'vw_SyncOrdersAndSalesOrders' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vw_SyncOrdersAndSalesOrders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncOrdersAndSalesOrder
    {
        public long? ShopifyOrderId { get; set; } // ShopifyOrderId
        public string ShopifyOrderNumber { get; set; } // ShopifyOrderNumber (length: 25)
        public bool? ShopifyIsCancelled { get; set; } // ShopifyIsCancelled
        public string ShopifyFinancialStatus { get; set; } // ShopifyFinancialStatus (length: 25)
        public bool? NeedsOrderPut { get; set; } // NeedsOrderPut
        public bool? NeedsTransactionGet { get; set; } // NeedsTransactionGet
        public string AcumaticaOrderNbr { get; set; } // AcumaticaOrderNbr (length: 50)
        public string AcumaticaStatus { get; set; } // AcumaticaStatus (length: 25)
        public string AcumaticaInvoiceNbr { get; set; } // AcumaticaInvoiceNbr (length: 50)
        public string AcumaticaShipmentNbr { get; set; } // AcumaticaShipmentNbr (length: 50)
        public System.DateTime? ShopifyLastUpdated { get; set; } // ShopifyLastUpdated
        public System.DateTime? AcumaticaLastUpdated { get; set; } // AcumaticaLastUpdated
    }

    // The table 'vw_SyncRefundAndCreditMemo' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vw_SyncRefundAndCreditMemo
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncRefundAndCreditMemo
    {
        public long? ShopifyOrderId { get; set; } // ShopifyOrderId
        public int? ShopifyOrderNumber { get; set; } // ShopifyOrderNumber
        public long? ShopifyRefundId { get; set; } // ShopifyRefundId
        public string AcumaticaCreditMemoOrderNbr { get; set; } // AcumaticaCreditMemoOrderNbr (length: 50)
        public string AcumaticaCreditMemoInvoiceNbr { get; set; } // AcumaticaCreditMemoInvoiceNbr (length: 50)
        public System.DateTime? ShopifyRefundLastUpdated { get; set; } // ShopifyRefundLastUpdated
        public System.DateTime? CreditMemoSyncLastUpdated { get; set; } // CreditMemoSyncLastUpdated
    }

    // vw_SyncShopifyInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncShopifyInventory
    {
        public long? MonsterVariantId { get; set; } // MonsterVariantId
        public string ShopifySku { get; set; } // ShopifySku (length: 100)
        public long? ShopifyVariantId { get; set; } // ShopifyVariantId
        public bool? IsMissing { get; set; } // IsMissing
        public int? ShopifyAvailableQuantity { get; set; } // ShopifyAvailableQuantity
        public long? ShopifyLocationId { get; set; } // ShopifyLocationId
        public string ShopifyLocationName { get; set; } // ShopifyLocationName (Primary key) (length: 50)
        public long? LocationSyncId { get; set; } // LocationSyncId
        public long? VariantSyncId { get; set; } // VariantSyncId
    }

    // The table 'vw_SyncTransactionAndPayment' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vw_SyncTransactionAndPayment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncTransactionAndPayment
    {
        public long? ShopifyOrderId { get; set; } // ShopifyOrderId
        public string ShopifyOrderNumber { get; set; } // ShopifyOrderNumber (length: 25)
        public bool? NeedsTransactionGet { get; set; } // NeedsTransactionGet
        public long? ShopifyTransactionId { get; set; } // ShopifyTransactionId
        public string ShopifyStatus { get; set; } // ShopifyStatus (length: 25)
        public string ShopifyKind { get; set; } // ShopifyKind (length: 25)
        public bool? Ignore { get; set; } // Ignore
        public bool? NeedsPaymentPut { get; set; } // NeedsPaymentPut
        public string AcumaticaRefNbr { get; set; } // AcumaticaRefNbr (length: 50)
        public string AcumaticaDocType { get; set; } // AcumaticaDocType (length: 25)
        public bool? IsReleased { get; set; } // IsReleased
        public System.DateTime? ShopifyRefundLastUpdated { get; set; } // ShopifyRefundLastUpdated
        public System.DateTime? PaymentSyncLastUpdated { get; set; } // PaymentSyncLastUpdated
    }

    // The table 'vw_SyncVariantsAndStockItems' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vw_SyncVariantsAndStockItems
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncVariantsAndStockItem
    {
        public long? ShopifyVariantId { get; set; } // ShopifyVariantId
        public long? ShopifyInventoryItemId { get; set; } // ShopifyInventoryItemId
        public string ShopifySku { get; set; } // ShopifySku (length: 100)
        public decimal? ShopifyCost { get; set; } // ShopifyCost
        public bool? ShopifyIsTracked { get; set; } // ShopifyIsTracked
        public bool? IsMissing { get; set; } // IsMissing
        public string ItemId { get; set; } // ItemId (length: 100)
        public System.DateTime? VariantLastUpdated { get; set; } // VariantLastUpdated
        public System.DateTime? StockItemLastUpdated { get; set; } // StockItemLastUpdated
    }

    // vw_SyncVariantsAndStockItems_Alt
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncVariantsAndStockItemsAlt
    {
        public long MonsterVariantId { get; set; } // MonsterVariantId (Primary key)
        public long ShopifyProductId { get; set; } // ShopifyProductId (Primary key)
        public string ShopifyProductTitle { get; set; } // ShopifyProductTitle (Primary key) (length: 100)
        public string ShopifyVendor { get; set; } // ShopifyVendor (Primary key) (length: 100)
        public string ShopifyProductType { get; set; } // ShopifyProductType (Primary key) (length: 100)
        public long ShopifyVariantId { get; set; } // ShopifyVariantId (Primary key)
        public string ShopifySku { get; set; } // ShopifySku (Primary key) (length: 100)
        public string ShopifyVariantTitle { get; set; } // ShopifyVariantTitle (Primary key) (length: 200)
        public string AcumaticaItemId { get; set; } // AcumaticaItemId (Primary key) (length: 100)
        public string AcumaticaDescription { get; set; } // AcumaticaDescription (length: 200)
        public bool IsSyncEnabled { get; set; } // IsSyncEnabled (Primary key)
    }

    // The table 'vw_SyncWarehousesAndLocations' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // vw_SyncWarehousesAndLocations
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncWarehousesAndLocation
    {
        public long? ShopifyLocationMonsterId { get; set; } // ShopifyLocationMonsterId
        public string ShopifyLocationName { get; set; } // ShopifyLocationName (length: 50)
        public long? ShopifyLocationId { get; set; } // ShopifyLocationId
        public long? AcumaticaWarehouseMonsterId { get; set; } // AcumaticaWarehouseMonsterId
        public string AcumaticaWarehouseId { get; set; } // AcumaticaWarehouseId (length: 50)
    }

    #endregion

    #region POCO Configuration

    // AcumaticaBatchState
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaBatchStateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AcumaticaBatchState>
    {
        public AcumaticaBatchStateConfiguration()
            : this("dbo")
        {
        }

        public AcumaticaBatchStateConfiguration(string schema)
        {
            ToTable("AcumaticaBatchState", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcumaticaStockItemGetEnd).HasColumnName(@"AcumaticaStockItemGetEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.AcumaticaInventoryStatusGetEnd).HasColumnName(@"AcumaticaInventoryStatusGetEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.AcumaticaCustomersGetEnd).HasColumnName(@"AcumaticaCustomersGetEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.AcumaticaOrdersGetEnd).HasColumnName(@"AcumaticaOrdersGetEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.AcumaticaShipmentsGetEnd).HasColumnName(@"AcumaticaShipmentsGetEnd").HasColumnType("datetime").IsOptional();
        }
    }

    // AcumaticaCustomer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaCustomerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AcumaticaCustomer>
    {
        public AcumaticaCustomerConfiguration()
            : this("dbo")
        {
        }

        public AcumaticaCustomerConfiguration(string schema)
        {
            ToTable("AcumaticaCustomer", schema);
            HasKey(x => x.ShopifyCustomerMonsterId);

            Property(x => x.ShopifyCustomerMonsterId).HasColumnName(@"ShopifyCustomerMonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaCustomerId).HasColumnName(@"AcumaticaCustomerId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaMainContactEmail).HasColumnName(@"AcumaticaMainContactEmail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AcumaticaJson).HasColumnName(@"AcumaticaJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.ShopifyCustomer).WithOptional(b => b.AcumaticaCustomer).WillCascadeOnDelete(false); // FK_AcumaticaCustomer_ShopifyCustomer
        }
    }

    // AcumaticaInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaInventoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AcumaticaInventory>
    {
        public AcumaticaInventoryConfiguration()
            : this("dbo")
        {
        }

        public AcumaticaInventoryConfiguration(string schema)
        {
            ToTable("AcumaticaInventory", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ParentMonsterId).HasColumnName(@"ParentMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.AcumaticaWarehouseId).HasColumnName(@"AcumaticaWarehouseId").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.AcumaticaAvailQty).HasColumnName(@"AcumaticaAvailQty").HasColumnType("float").IsRequired();
            Property(x => x.WarehouseMonsterId).HasColumnName(@"WarehouseMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.IsInventorySynced).HasColumnName(@"IsInventorySynced").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.AcumaticaStockItem).WithMany(b => b.AcumaticaInventories).HasForeignKey(c => c.ParentMonsterId).WillCascadeOnDelete(false); // FK_usrAcumaticaWarehouseDetails_usrAcumaticaStockItem
            HasRequired(a => a.AcumaticaWarehouse).WithMany(b => b.AcumaticaInventories).HasForeignKey(c => c.WarehouseMonsterId).WillCascadeOnDelete(false); // FK_usrAcumaticaWarehouseDetails_usrAcumaticaWarehouse
        }
    }

    // AcumaticaInventoryReceipt
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaInventoryReceiptConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AcumaticaInventoryReceipt>
    {
        public AcumaticaInventoryReceiptConfiguration()
            : this("dbo")
        {
        }

        public AcumaticaInventoryReceiptConfiguration(string schema)
        {
            ToTable("AcumaticaInventoryReceipt", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcumaticaRefNumber).HasColumnName(@"AcumaticaRefNumber").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.AcumaticaJson).HasColumnName(@"AcumaticaJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.IsReleased).HasColumnName(@"IsReleased").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdate).HasColumnName(@"LastUpdate").HasColumnType("datetime").IsRequired();
        }
    }

    // AcumaticaPayment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaPaymentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AcumaticaPayment>
    {
        public AcumaticaPaymentConfiguration()
            : this("dbo")
        {
        }

        public AcumaticaPaymentConfiguration(string schema)
        {
            ToTable("AcumaticaPayment", schema);
            HasKey(x => x.ShopifyTransactionMonsterId);

            Property(x => x.ShopifyTransactionMonsterId).HasColumnName(@"ShopifyTransactionMonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaRefNbr).HasColumnName(@"AcumaticaRefNbr").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaDocType).HasColumnName(@"AcumaticaDocType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.AcumaticaAmount).HasColumnName(@"AcumaticaAmount").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.AcumaticaAppliedToOrder).HasColumnName(@"AcumaticaAppliedToOrder").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.IsReleased).HasColumnName(@"IsReleased").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.ShopifyTransaction).WithOptional(b => b.AcumaticaPayment).WillCascadeOnDelete(false); // FK_usrShopifyAcuPayment_usrShopifyTransaction
        }
    }

    // AcumaticaRefData
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaRefDataConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AcumaticaRefData>
    {
        public AcumaticaRefDataConfiguration()
            : this("dbo")
        {
        }

        public AcumaticaRefDataConfiguration(string schema)
        {
            ToTable("AcumaticaRefData", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ItemClass).HasColumnName(@"ItemClass").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.PaymentMethod).HasColumnName(@"PaymentMethod").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.TaxZone).HasColumnName(@"TaxZone").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.TaxCategory).HasColumnName(@"TaxCategory").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.TaxId).HasColumnName(@"TaxId").HasColumnType("nvarchar(max)").IsOptional();
        }
    }

    // AcumaticaSalesOrder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaSalesOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AcumaticaSalesOrder>
    {
        public AcumaticaSalesOrderConfiguration()
            : this("dbo")
        {
        }

        public AcumaticaSalesOrderConfiguration(string schema)
        {
            ToTable("AcumaticaSalesOrder", schema);
            HasKey(x => x.ShopifyOrderMonsterId);

            Property(x => x.ShopifyOrderMonsterId).HasColumnName(@"ShopifyOrderMonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaShipmentDetailsJson).HasColumnName(@"AcumaticaShipmentDetailsJson").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.AcumaticaOrderNbr).HasColumnName(@"AcumaticaOrderNbr").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaStatus).HasColumnName(@"AcumaticaStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.ShopifyCustomerMonsterId).HasColumnName(@"ShopifyCustomerMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.AcumaticaCustomer).WithMany(b => b.AcumaticaSalesOrders).HasForeignKey(c => c.ShopifyCustomerMonsterId).WillCascadeOnDelete(false); // FK_AcumaticaSalesOrder_AcumaticaCustomer
            HasRequired(a => a.ShopifyOrder).WithOptional(b => b.AcumaticaSalesOrder).WillCascadeOnDelete(false); // FK_AcumaticaSalesOrder_ShopifyOrder
        }
    }

    // AcumaticaSoShipment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaSoShipmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AcumaticaSoShipment>
    {
        public AcumaticaSoShipmentConfiguration()
            : this("dbo")
        {
        }

        public AcumaticaSoShipmentConfiguration(string schema)
        {
            ToTable("AcumaticaSoShipment", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyOrderMonsterId).HasColumnName(@"ShopifyOrderMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.AcumaticaShipmentNbr).HasColumnName(@"AcumaticaShipmentNbr").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaInvoiceType).HasColumnName(@"AcumaticaInvoiceType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.AcumaticaInvoiceNbr).HasColumnName(@"AcumaticaInvoiceNbr").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaStatus).HasColumnName(@"AcumaticaStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaShipmentJson).HasColumnName(@"AcumaticaShipmentJson").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.AcumaticaTrackingNbr).HasColumnName(@"AcumaticaTrackingNbr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.AcumaticaInvoiceAmount).HasColumnName(@"AcumaticaInvoiceAmount").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.AcumaticaInvoiceTax).HasColumnName(@"AcumaticaInvoiceTax").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.NeedShipmentGet).HasColumnName(@"NeedShipmentGet").HasColumnType("bit").IsRequired();
            Property(x => x.ShopifyFulfillmentMonsterId).HasColumnName(@"ShopifyFulfillmentMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.ShopifyFulfillment).WithMany(b => b.AcumaticaSoShipments).HasForeignKey(c => c.ShopifyFulfillmentMonsterId).WillCascadeOnDelete(false); // FK_AcumaticaSoShipment_ShopifyFulfillment
            HasRequired(a => a.AcumaticaSalesOrder).WithMany(b => b.AcumaticaSoShipments).HasForeignKey(c => c.ShopifyOrderMonsterId).WillCascadeOnDelete(false); // FK_AcumaticaSoShipment_AcumaticaSalesOrder
        }
    }

    // AcumaticaStockItem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaStockItemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AcumaticaStockItem>
    {
        public AcumaticaStockItemConfiguration()
            : this("dbo")
        {
        }

        public AcumaticaStockItemConfiguration(string schema)
        {
            ToTable("AcumaticaStockItem", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ItemId).HasColumnName(@"ItemId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AcumaticaJson).HasColumnName(@"AcumaticaJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.AcumaticaTaxCategory).HasColumnName(@"AcumaticaTaxCategory").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaDescription).HasColumnName(@"AcumaticaDescription").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.AcumaticaDefaultPrice).HasColumnName(@"AcumaticaDefaultPrice").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.AcumaticaLastCost).HasColumnName(@"AcumaticaLastCost").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.IsPriceSynced).HasColumnName(@"IsPriceSynced").HasColumnType("bit").IsRequired();
            Property(x => x.ShopifyVariantMonsterId).HasColumnName(@"ShopifyVariantMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.IsSyncEnabled).HasColumnName(@"IsSyncEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.ShopifyVariant).WithMany(b => b.AcumaticaStockItems).HasForeignKey(c => c.ShopifyVariantMonsterId).WillCascadeOnDelete(false); // FK_AcumaticaStockItem_ShopifyVariant
        }
    }

    // AcumaticaWarehouse
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AcumaticaWarehouseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AcumaticaWarehouse>
    {
        public AcumaticaWarehouseConfiguration()
            : this("dbo")
        {
        }

        public AcumaticaWarehouseConfiguration(string schema)
        {
            ToTable("AcumaticaWarehouse", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcumaticaWarehouseId).HasColumnName(@"AcumaticaWarehouseId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaJson).HasColumnName(@"AcumaticaJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();
        }
    }

    // Connections
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ConnectionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Connection>
    {
        public ConnectionConfiguration()
            : this("dbo")
        {
        }

        public ConnectionConfiguration(string schema)
        {
            ToTable("Connections", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyDomain).HasColumnName(@"ShopifyDomain").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.ShopifyAuthCodeHash).HasColumnName(@"ShopifyAuthCodeHash").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.ShopifyAccessToken).HasColumnName(@"ShopifyAccessToken").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.ShopifyApiKey).HasColumnName(@"ShopifyApiKey").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.ShopifyApiPassword).HasColumnName(@"ShopifyApiPassword").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.ShopifyApiSecret).HasColumnName(@"ShopifyApiSecret").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.AcumaticaInstanceUrl).HasColumnName(@"AcumaticaInstanceUrl").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.AcumaticaBranch).HasColumnName(@"AcumaticaBranch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.AcumaticaCompanyName).HasColumnName(@"AcumaticaCompanyName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.AcumaticaUsername).HasColumnName(@"AcumaticaUsername").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.AcumaticaPassword).HasColumnName(@"AcumaticaPassword").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
        }
    }

    // ExclusiveJobMonitor
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ExclusiveJobMonitorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ExclusiveJobMonitor>
    {
        public ExclusiveJobMonitorConfiguration()
            : this("dbo")
        {
        }

        public ExclusiveJobMonitorConfiguration(string schema)
        {
            ToTable("ExclusiveJobMonitor", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.BackgroundJobType).HasColumnName(@"BackgroundJobType").HasColumnType("int").IsRequired();
            Property(x => x.IsRecurring).HasColumnName(@"IsRecurring").HasColumnType("bit").IsRequired();
            Property(x => x.HangFireJobId).HasColumnName(@"HangFireJobId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ReceivedKillSignal).HasColumnName(@"ReceivedKillSignal").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();
        }
    }

    // ExecutionLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ExecutionLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ExecutionLog>
    {
        public ExecutionLogConfiguration()
            : this("dbo")
        {
        }

        public ExecutionLogConfiguration(string schema)
        {
            ToTable("ExecutionLog", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LogLevel).HasColumnName(@"LogLevel").HasColumnType("int").IsRequired();
            Property(x => x.LogContent).HasColumnName(@"LogContent").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
        }
    }

    // InventoryReceiptSync
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InventoryReceiptSyncConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InventoryReceiptSync>
    {
        public InventoryReceiptSyncConfiguration()
            : this("dbo")
        {
        }

        public InventoryReceiptSyncConfiguration(string schema)
        {
            ToTable("InventoryReceiptSync", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyInventoryMonsterId).HasColumnName(@"ShopifyInventoryMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.AcumaticaInvReceiptMonsterId).HasColumnName(@"AcumaticaInvReceiptMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.AcumaticaInventoryReceipt).WithMany(b => b.InventoryReceiptSyncs).HasForeignKey(c => c.AcumaticaInvReceiptMonsterId).WillCascadeOnDelete(false); // FK_usrInventoryReceiptSync_usrAcumaticaInventoryReceipt
            HasRequired(a => a.ShopifyInventoryLevel).WithMany(b => b.InventoryReceiptSyncs).HasForeignKey(c => c.ShopifyInventoryMonsterId).WillCascadeOnDelete(false); // FK_usrInventoryReceiptSync_usrShopifyInventoryLevels
        }
    }

    // MonsterSettings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MonsterSettingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MonsterSetting>
    {
        public MonsterSettingConfiguration()
            : this("dbo")
        {
        }

        public MonsterSettingConfiguration(string schema)
        {
            ToTable("MonsterSettings", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcumaticaTimeZone).HasColumnName(@"AcumaticaTimeZone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaDefaultItemClass).HasColumnName(@"AcumaticaDefaultItemClass").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaDefaultPostingClass).HasColumnName(@"AcumaticaDefaultPostingClass").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaTaxZone).HasColumnName(@"AcumaticaTaxZone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaTaxExemptCategory).HasColumnName(@"AcumaticaTaxExemptCategory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaTaxableCategory).HasColumnName(@"AcumaticaTaxableCategory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaLineItemTaxId).HasColumnName(@"AcumaticaLineItemTaxId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaFreightTaxId).HasColumnName(@"AcumaticaFreightTaxId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SyncOrdersEnabled).HasColumnName(@"SyncOrdersEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.SyncInventoryEnabled).HasColumnName(@"SyncInventoryEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.SyncFulfillmentsEnabled).HasColumnName(@"SyncFulfillmentsEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.SyncRefundsEnabled).HasColumnName(@"SyncRefundsEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsOptional();
            Property(x => x.ShopifyOrderName).HasColumnName(@"ShopifyOrderName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ShopifyOrderCreatedAtUtc).HasColumnName(@"ShopifyOrderCreatedAtUtc").HasColumnType("datetime").IsOptional();
            Property(x => x.MaxParallelAcumaticaSyncs).HasColumnName(@"MaxParallelAcumaticaSyncs").HasColumnType("int").IsRequired();
        }
    }

    // PaymentGateways
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PaymentGatewayConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PaymentGateway>
    {
        public PaymentGatewayConfiguration()
            : this("dbo")
        {
        }

        public PaymentGatewayConfiguration(string schema)
        {
            ToTable("PaymentGateways", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyGatewayId).HasColumnName(@"ShopifyGatewayId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaPaymentMethod).HasColumnName(@"AcumaticaPaymentMethod").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.AcumaticaCashAccount).HasColumnName(@"AcumaticaCashAccount").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
        }
    }

    // PayoutPreferences
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PayoutPreferenceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PayoutPreference>
    {
        public PayoutPreferenceConfiguration()
            : this("dbo")
        {
        }

        public PayoutPreferenceConfiguration(string schema)
        {
            ToTable("PayoutPreferences", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AcumaticaCashAccount).HasColumnName(@"AcumaticaCashAccount").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
        }
    }

    // ShopAcuWarehouseSync
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopAcuWarehouseSyncConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopAcuWarehouseSync>
    {
        public ShopAcuWarehouseSyncConfiguration()
            : this("dbo")
        {
        }

        public ShopAcuWarehouseSyncConfiguration(string schema)
        {
            ToTable("ShopAcuWarehouseSync", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyLocationMonsterId).HasColumnName(@"ShopifyLocationMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.AcumaticaWarehouseMonsterId).HasColumnName(@"AcumaticaWarehouseMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.AcumaticaWarehouse).WithMany(b => b.ShopAcuWarehouseSyncs).HasForeignKey(c => c.AcumaticaWarehouseMonsterId).WillCascadeOnDelete(false); // FK_usrShopAcuWarehouseSync_usrAcumaticaWarehouse
            HasRequired(a => a.ShopifyLocation).WithMany(b => b.ShopAcuWarehouseSyncs).HasForeignKey(c => c.ShopifyLocationMonsterId).WillCascadeOnDelete(false); // FK_usrShopAcuWarehouseSync_usrShopifyLocation
        }
    }

    // ShopifyBatchState
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyBatchStateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopifyBatchState>
    {
        public ShopifyBatchStateConfiguration()
            : this("dbo")
        {
        }

        public ShopifyBatchStateConfiguration(string schema)
        {
            ToTable("ShopifyBatchState", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyProductsGetEnd).HasColumnName(@"ShopifyProductsGetEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.ShopifyOrdersGetEnd).HasColumnName(@"ShopifyOrdersGetEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.ShopifyCustomersGetEnd).HasColumnName(@"ShopifyCustomersGetEnd").HasColumnType("datetime").IsOptional();
            Property(x => x.ShopifyPayoutGetEnd).HasColumnName(@"ShopifyPayoutGetEnd").HasColumnType("date").IsOptional();
        }
    }

    // ShopifyCustomer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyCustomerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopifyCustomer>
    {
        public ShopifyCustomerConfiguration()
            : this("dbo")
        {
        }

        public ShopifyCustomerConfiguration(string schema)
        {
            ToTable("ShopifyCustomer", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyJson).HasColumnName(@"ShopifyJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.ShopifyCustomerId).HasColumnName(@"ShopifyCustomerId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyPrimaryEmail).HasColumnName(@"ShopifyPrimaryEmail").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.NeedsCustomerPut).HasColumnName(@"NeedsCustomerPut").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();
        }
    }

    // ShopifyFulfillment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyFulfillmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopifyFulfillment>
    {
        public ShopifyFulfillmentConfiguration()
            : this("dbo")
        {
        }

        public ShopifyFulfillmentConfiguration(string schema)
        {
            ToTable("ShopifyFulfillment", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyFulfillmentId).HasColumnName(@"ShopifyFulfillmentId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyStatus).HasColumnName(@"ShopifyStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ShopifyTrackingNumber).HasColumnName(@"ShopifyTrackingNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.OrderMonsterId).HasColumnName(@"OrderMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.ShopifyOrder).WithMany(b => b.ShopifyFulfillments).HasForeignKey(c => c.OrderMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyFulfillment_usrShopifyOrder
        }
    }

    // ShopifyInventoryLevel
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyInventoryLevelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopifyInventoryLevel>
    {
        public ShopifyInventoryLevelConfiguration()
            : this("dbo")
        {
        }

        public ShopifyInventoryLevelConfiguration(string schema)
        {
            ToTable("ShopifyInventoryLevel", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ParentMonsterId).HasColumnName(@"ParentMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyInventoryItemId).HasColumnName(@"ShopifyInventoryItemId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyLocationId).HasColumnName(@"ShopifyLocationId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyAvailableQuantity).HasColumnName(@"ShopifyAvailableQuantity").HasColumnType("int").IsRequired();
            Property(x => x.LocationMonsterId).HasColumnName(@"LocationMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.InventoryReceiptMonsterId).HasColumnName(@"InventoryReceiptMonsterId").HasColumnType("bigint").IsOptional();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.ShopifyLocation).WithMany(b => b.ShopifyInventoryLevels).HasForeignKey(c => c.LocationMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyInventoryLevels_usrShopifyLocation
            HasRequired(a => a.ShopifyVariant).WithMany(b => b.ShopifyInventoryLevels).HasForeignKey(c => c.ParentMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyInventoryLevels_usrShopifyVariant
        }
    }

    // ShopifyLocation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyLocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopifyLocation>
    {
        public ShopifyLocationConfiguration()
            : this("dbo")
        {
        }

        public ShopifyLocationConfiguration(string schema)
        {
            ToTable("ShopifyLocation", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyLocationId).HasColumnName(@"ShopifyLocationId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyJson).HasColumnName(@"ShopifyJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.ShopifyLocationName).HasColumnName(@"ShopifyLocationName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ShopifyActive).HasColumnName(@"ShopifyActive").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();
        }
    }

    // ShopifyOrder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopifyOrder>
    {
        public ShopifyOrderConfiguration()
            : this("dbo")
        {
        }

        public ShopifyOrderConfiguration(string schema)
        {
            ToTable("ShopifyOrder", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyJson).HasColumnName(@"ShopifyJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyOrderNumber).HasColumnName(@"ShopifyOrderNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.ShopifyIsCancelled).HasColumnName(@"ShopifyIsCancelled").HasColumnType("bit").IsRequired();
            Property(x => x.ShopifyFinancialStatus).HasColumnName(@"ShopifyFinancialStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.NeedsTransactionGet).HasColumnName(@"NeedsTransactionGet").HasColumnType("bit").IsRequired();
            Property(x => x.NeedsOrderPut).HasColumnName(@"NeedsOrderPut").HasColumnType("bit").IsRequired();
            Property(x => x.IsBlocked).HasColumnName(@"IsBlocked").HasColumnType("bit").IsRequired();
            Property(x => x.CustomerMonsterId).HasColumnName(@"CustomerMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.ShopifyCustomer).WithMany(b => b.ShopifyOrders).HasForeignKey(c => c.CustomerMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyOrder_usrShopifyCustomer
        }
    }

    // ShopifyPayout
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyPayoutConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopifyPayout>
    {
        public ShopifyPayoutConfiguration()
            : this("dbo")
        {
        }

        public ShopifyPayoutConfiguration(string schema)
        {
            ToTable("ShopifyPayout", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyPayoutId).HasColumnName(@"ShopifyPayoutId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyLastStatus).HasColumnName(@"ShopifyLastStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Json).HasColumnName(@"Json").HasColumnType("text").IsRequired().IsUnicode(false).HasMaxLength(2147483647);
            Property(x => x.AllTransDownloaded).HasColumnName(@"AllTransDownloaded").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();
        }
    }

    // ShopifyPayoutTransaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyPayoutTransactionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopifyPayoutTransaction>
    {
        public ShopifyPayoutTransactionConfiguration()
            : this("dbo")
        {
        }

        public ShopifyPayoutTransactionConfiguration(string schema)
        {
            ToTable("ShopifyPayoutTransaction", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MonsterParentId).HasColumnName(@"MonsterParentId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyPayoutId).HasColumnName(@"ShopifyPayoutId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyPayoutTransId).HasColumnName(@"ShopifyPayoutTransId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsOptional();
            Property(x => x.ShopifyCustomerId).HasColumnName(@"ShopifyCustomerId").HasColumnType("bigint").IsOptional();
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Json).HasColumnName(@"Json").HasColumnType("text").IsRequired().IsUnicode(false).HasMaxLength(2147483647);
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.ShopifyPayout).WithMany(b => b.ShopifyPayoutTransactions).HasForeignKey(c => c.MonsterParentId).WillCascadeOnDelete(false); // FK_usrShopifyPayoutTransaction_usrShopifyPayout
        }
    }

    // ShopifyProduct
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyProductConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopifyProduct>
    {
        public ShopifyProductConfiguration()
            : this("dbo")
        {
        }

        public ShopifyProductConfiguration(string schema)
        {
            ToTable("ShopifyProduct", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyProductId).HasColumnName(@"ShopifyProductId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyTitle).HasColumnName(@"ShopifyTitle").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ShopifyVendor).HasColumnName(@"ShopifyVendor").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ShopifyProductType).HasColumnName(@"ShopifyProductType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ShopifyJson).HasColumnName(@"ShopifyJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();
        }
    }

    // ShopifyRefund
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyRefundConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopifyRefund>
    {
        public ShopifyRefundConfiguration()
            : this("dbo")
        {
        }

        public ShopifyRefundConfiguration(string schema)
        {
            ToTable("ShopifyRefund", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyRefundId).HasColumnName(@"ShopifyRefundId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsRequired();
            Property(x => x.OrderMonsterId).HasColumnName(@"OrderMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.CreditAdjustment).HasColumnName(@"CreditAdjustment").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.DebitAdjustment).HasColumnName(@"DebitAdjustment").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.ShopifyOrder).WithMany(b => b.ShopifyRefunds).HasForeignKey(c => c.OrderMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyRefund_usrShopifyOrder
        }
    }

    // ShopifyTransaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyTransactionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopifyTransaction>
    {
        public ShopifyTransactionConfiguration()
            : this("dbo")
        {
        }

        public ShopifyTransactionConfiguration(string schema)
        {
            ToTable("ShopifyTransaction", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShopifyTransactionId).HasColumnName(@"ShopifyTransactionId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyStatus).HasColumnName(@"ShopifyStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.ShopifyKind).HasColumnName(@"ShopifyKind").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25);
            Property(x => x.ShopifyJson).HasColumnName(@"ShopifyJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.ShopifyGateway).HasColumnName(@"ShopifyGateway").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ShopifyAmount).HasColumnName(@"ShopifyAmount").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.ShopifyRefundId).HasColumnName(@"ShopifyRefundId").HasColumnType("bigint").IsOptional();
            Property(x => x.Ignore).HasColumnName(@"Ignore").HasColumnType("bit").IsRequired();
            Property(x => x.NeedsPaymentPut).HasColumnName(@"NeedsPaymentPut").HasColumnType("bit").IsRequired();
            Property(x => x.OrderMonsterId).HasColumnName(@"OrderMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.ShopifyOrder).WithMany(b => b.ShopifyTransactions).HasForeignKey(c => c.OrderMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyTransaction_usrShopifyOrder
        }
    }

    // ShopifyVariant
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ShopifyVariantConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopifyVariant>
    {
        public ShopifyVariantConfiguration()
            : this("dbo")
        {
        }

        public ShopifyVariantConfiguration(string schema)
        {
            ToTable("ShopifyVariant", schema);
            HasKey(x => x.MonsterId);

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ParentMonsterId).HasColumnName(@"ParentMonsterId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyVariantId).HasColumnName(@"ShopifyVariantId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyInventoryItemId).HasColumnName(@"ShopifyInventoryItemId").HasColumnType("bigint").IsRequired();
            Property(x => x.ShopifyVariantJson).HasColumnName(@"ShopifyVariantJson").HasColumnType("nvarchar(max)").IsRequired();
            Property(x => x.ShopifySku).HasColumnName(@"ShopifySku").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ShopifyTitle).HasColumnName(@"ShopifyTitle").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200);
            Property(x => x.ShopifyIsTracked).HasColumnName(@"ShopifyIsTracked").HasColumnType("bit").IsRequired();
            Property(x => x.ShopifyPrice).HasColumnName(@"ShopifyPrice").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.ShopifyCost).HasColumnName(@"ShopifyCost").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.ShopifyIsTaxable).HasColumnName(@"ShopifyIsTaxable").HasColumnType("bit").IsRequired();
            Property(x => x.IsMissing).HasColumnName(@"IsMissing").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.ShopifyProduct).WithMany(b => b.ShopifyVariants).HasForeignKey(c => c.ParentMonsterId).WillCascadeOnDelete(false); // FK_usrShopifyVariant_usrShopifyProduct
        }
    }

    // SystemState
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SystemStateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SystemState>
    {
        public SystemStateConfiguration()
            : this("dbo")
        {
        }

        public SystemStateConfiguration(string schema)
        {
            ToTable("SystemState", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IsRandomAccessMode).HasColumnName(@"IsRandomAccessMode").HasColumnType("bit").IsRequired();
            Property(x => x.ShopifyConnState).HasColumnName(@"ShopifyConnState").HasColumnType("int").IsRequired();
            Property(x => x.IsShopifyUrlFinalized).HasColumnName(@"IsShopifyUrlFinalized").HasColumnType("bit").IsRequired();
            Property(x => x.AcumaticaConnState).HasColumnName(@"AcumaticaConnState").HasColumnType("int").IsRequired();
            Property(x => x.AcumaticaRefDataState).HasColumnName(@"AcumaticaRefDataState").HasColumnType("int").IsRequired();
            Property(x => x.SettingsState).HasColumnName(@"SettingsState").HasColumnType("int").IsRequired();
            Property(x => x.SettingsTaxesState).HasColumnName(@"SettingsTaxesState").HasColumnType("int").IsRequired();
            Property(x => x.WarehouseSyncState).HasColumnName(@"WarehouseSyncState").HasColumnType("int").IsRequired();
            Property(x => x.InventoryRefreshState).HasColumnName(@"InventoryRefreshState").HasColumnType("int").IsRequired();
            Property(x => x.StartingShopifyOrderState).HasColumnName(@"StartingShopifyOrderState").HasColumnType("int").IsRequired();
            Property(x => x.ShopifyOrderEtcGetState).HasColumnName(@"ShopifyOrderEtcGetState").HasColumnType("int").IsRequired();
            Property(x => x.AcumaticaOrderEtcGetState).HasColumnName(@"AcumaticaOrderEtcGetState").HasColumnType("int").IsRequired();
            Property(x => x.AcumaticaOrderEtcPutState).HasColumnName(@"AcumaticaOrderEtcPutState").HasColumnType("int").IsRequired();
            Property(x => x.AcumaticaRefundPutState).HasColumnName(@"AcumaticaRefundPutState").HasColumnType("int").IsRequired();
            Property(x => x.ShopifyFulfillmentPutState).HasColumnName(@"ShopifyFulfillmentPutState").HasColumnType("int").IsRequired();
            Property(x => x.ShopifyInventoryPutState).HasColumnName(@"ShopifyInventoryPutState").HasColumnType("int").IsRequired();
        }
    }

    // vw_AcumaticaInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwAcumaticaInventoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwAcumaticaInventory>
    {
        public VwAcumaticaInventoryConfiguration()
            : this("dbo")
        {
        }

        public VwAcumaticaInventoryConfiguration(string schema)
        {
            ToTable("vw_AcumaticaInventory", schema);
            HasKey(x => new { x.MonsterId, x.ItemId, x.IsPriceSynced, x.StockItemLastUpdated });

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ItemId).HasColumnName(@"ItemId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsPriceSynced).HasColumnName(@"IsPriceSynced").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaWarehouseId).HasColumnName(@"AcumaticaWarehouseId").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.AcumaticaQtyOnHand).HasColumnName(@"AcumaticaQtyOnHand").HasColumnType("float").IsOptional();
            Property(x => x.IsInventorySynced).HasColumnName(@"IsInventorySynced").HasColumnType("bit").IsOptional();
            Property(x => x.StockItemLastUpdated).HasColumnName(@"StockItemLastUpdated").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.WarehouseDetailsLastUpdated).HasColumnName(@"WarehouseDetailsLastUpdated").HasColumnType("datetime").IsOptional();
        }
    }

    // vw_AcumaticaSalesOrderAndCustomer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwAcumaticaSalesOrderAndCustomerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwAcumaticaSalesOrderAndCustomer>
    {
        public VwAcumaticaSalesOrderAndCustomerConfiguration()
            : this("dbo")
        {
        }

        public VwAcumaticaSalesOrderAndCustomerConfiguration(string schema)
        {
            ToTable("vw_AcumaticaSalesOrderAndCustomer", schema);
            HasKey(x => new { x.ShopifyOrderMonsterId, x.AcumaticaOrderNbr, x.AcumaticaStatus, x.SalesOrderLastUpdated });

            Property(x => x.ShopifyOrderMonsterId).HasColumnName(@"ShopifyOrderMonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaOrderNbr).HasColumnName(@"AcumaticaOrderNbr").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaStatus).HasColumnName(@"AcumaticaStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaCustomerId).HasColumnName(@"AcumaticaCustomerId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SalesOrderLastUpdated).HasColumnName(@"SalesOrderLastUpdated").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CustomerLastUpdated).HasColumnName(@"CustomerLastUpdated").HasColumnType("datetime").IsOptional();
        }
    }

    // vw_AcumaticaSalesOrderAndShipments
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwAcumaticaSalesOrderAndShipmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwAcumaticaSalesOrderAndShipment>
    {
        public VwAcumaticaSalesOrderAndShipmentConfiguration()
            : this("dbo")
        {
        }

        public VwAcumaticaSalesOrderAndShipmentConfiguration(string schema)
        {
            ToTable("vw_AcumaticaSalesOrderAndShipments", schema);
            HasKey(x => new { x.Id, x.AcumaticaShipmentNbr, x.ShipmentLastUpdated });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaShipmentNbr).HasColumnName(@"AcumaticaShipmentNbr").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaStatus).HasColumnName(@"AcumaticaStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.AcumaticaOrderNbr).HasColumnName(@"AcumaticaOrderNbr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ShipmentLastUpdated).HasColumnName(@"ShipmentLastUpdated").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SalesOrderRefLastUpdated).HasColumnName(@"SalesOrderRefLastUpdated").HasColumnType("datetime").IsOptional();
        }
    }

    // vw_AcumaticaSalesOrderAndShipmentInvoices
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwAcumaticaSalesOrderAndShipmentInvoiceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwAcumaticaSalesOrderAndShipmentInvoice>
    {
        public VwAcumaticaSalesOrderAndShipmentInvoiceConfiguration()
            : this("dbo")
        {
        }

        public VwAcumaticaSalesOrderAndShipmentInvoiceConfiguration(string schema)
        {
            ToTable("vw_AcumaticaSalesOrderAndShipmentInvoices", schema);
            HasKey(x => new { x.ShopifyOrderMonsterId, x.AcumaticaOrderNbr, x.AcumaticaStatus, x.SalesOrderLastUpdated });

            Property(x => x.ShopifyOrderMonsterId).HasColumnName(@"ShopifyOrderMonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaOrderNbr).HasColumnName(@"AcumaticaOrderNbr").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaStatus).HasColumnName(@"AcumaticaStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaShipmentNbr).HasColumnName(@"AcumaticaShipmentNbr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaInvoiceNbr).HasColumnName(@"AcumaticaInvoiceNbr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcumaticaTrackingNbr).HasColumnName(@"AcumaticaTrackingNbr").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.SalesOrderLastUpdated).HasColumnName(@"SalesOrderLastUpdated").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShipmentLastUpdated).HasColumnName(@"ShipmentLastUpdated").HasColumnType("datetime").IsOptional();
        }
    }

    // vw_ShopifyInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwShopifyInventoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwShopifyInventory>
    {
        public VwShopifyInventoryConfiguration()
            : this("dbo")
        {
        }

        public VwShopifyInventoryConfiguration(string schema)
        {
            ToTable("vw_ShopifyInventory", schema);
            HasKey(x => new { x.MonsterId, x.ShopifyProductId, x.ProductTitle, x.ShopifyVendor, x.ShopifyProductType, x.ProductIsDeleted, x.ProductLastUpdated });

            Property(x => x.MonsterId).HasColumnName(@"MonsterId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyProductId).HasColumnName(@"ShopifyProductId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ProductTitle).HasColumnName(@"ProductTitle").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyVendor).HasColumnName(@"ShopifyVendor").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyProductType).HasColumnName(@"ShopifyProductType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ProductIsDeleted).HasColumnName(@"ProductIsDeleted").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyVariantId).HasColumnName(@"ShopifyVariantId").HasColumnType("bigint").IsOptional();
            Property(x => x.ShopifyInventoryItemId).HasColumnName(@"ShopifyInventoryItemId").HasColumnType("bigint").IsOptional();
            Property(x => x.ShopifySku).HasColumnName(@"ShopifySku").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.VariantTitle).HasColumnName(@"VariantTitle").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.ShopifyCost).HasColumnName(@"ShopifyCost").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.VariantIsMissing).HasColumnName(@"VariantIsMissing").HasColumnType("bit").IsOptional();
            Property(x => x.ShopifyLocationId).HasColumnName(@"ShopifyLocationId").HasColumnType("bigint").IsOptional();
            Property(x => x.ShopifyAvailableQuantity).HasColumnName(@"ShopifyAvailableQuantity").HasColumnType("int").IsOptional();
            Property(x => x.ProductLastUpdated).HasColumnName(@"ProductLastUpdated").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.VariantLastUpdated).HasColumnName(@"VariantLastUpdated").HasColumnType("datetime").IsOptional();
            Property(x => x.InventoryLevelLastUpdate).HasColumnName(@"InventoryLevelLastUpdate").HasColumnType("datetime").IsOptional();
        }
    }

    // vw_ShopifyOrderCustomer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwShopifyOrderCustomerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwShopifyOrderCustomer>
    {
        public VwShopifyOrderCustomerConfiguration()
            : this("dbo")
        {
        }

        public VwShopifyOrderCustomerConfiguration(string schema)
        {
            ToTable("vw_ShopifyOrderCustomer", schema);
            HasKey(x => new { x.Id, x.ShopifyOrderId, x.ShopifyOrderNumber, x.ShopifyFinancialStatus, x.NeedsTransactionGet, x.NeedsOrderPut, x.OrderLastUpdated });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyOrderNumber).HasColumnName(@"ShopifyOrderNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyFinancialStatus).HasColumnName(@"ShopifyFinancialStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NeedsTransactionGet).HasColumnName(@"NeedsTransactionGet").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NeedsOrderPut).HasColumnName(@"NeedsOrderPut").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyCustomerId).HasColumnName(@"ShopifyCustomerId").HasColumnType("bigint").IsOptional();
            Property(x => x.ShopifyPrimaryEmail).HasColumnName(@"ShopifyPrimaryEmail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.NeedsCustomerPut).HasColumnName(@"NeedsCustomerPut").HasColumnType("bit").IsOptional();
            Property(x => x.OrderLastUpdated).HasColumnName(@"OrderLastUpdated").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CustomerLastUpdated).HasColumnName(@"CustomerLastUpdated").HasColumnType("datetime").IsOptional();
        }
    }

    // vw_ShopifyOrderFulfillments
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwShopifyOrderFulfillmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwShopifyOrderFulfillment>
    {
        public VwShopifyOrderFulfillmentConfiguration()
            : this("dbo")
        {
        }

        public VwShopifyOrderFulfillmentConfiguration(string schema)
        {
            ToTable("vw_ShopifyOrderFulfillments", schema);
            HasKey(x => new { x.Id, x.ShopifyOrderId, x.ShopifyOrderNumber, x.ShopifyFinancialStatus, x.NeedsTransactionGet, x.NeedsOrderPut, x.OrderLastUpdated });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyOrderNumber).HasColumnName(@"ShopifyOrderNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyFinancialStatus).HasColumnName(@"ShopifyFinancialStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NeedsTransactionGet).HasColumnName(@"NeedsTransactionGet").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NeedsOrderPut).HasColumnName(@"NeedsOrderPut").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyFulfillmentId).HasColumnName(@"ShopifyFulfillmentId").HasColumnType("bigint").IsOptional();
            Property(x => x.ShopifyStatus).HasColumnName(@"ShopifyStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.OrderLastUpdated).HasColumnName(@"OrderLastUpdated").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FulfillmentLastUpdated).HasColumnName(@"FulfillmentLastUpdated").HasColumnType("datetime").IsOptional();
        }
    }

    // vw_ShopifyOrderRefunds
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwShopifyOrderRefundConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwShopifyOrderRefund>
    {
        public VwShopifyOrderRefundConfiguration()
            : this("dbo")
        {
        }

        public VwShopifyOrderRefundConfiguration(string schema)
        {
            ToTable("vw_ShopifyOrderRefunds", schema);
            HasKey(x => new { x.Id, x.ShopifyOrderId, x.ShopifyOrderNumber, x.ShopifyFinancialStatus, x.NeedsTransactionGet, x.NeedsOrderPut, x.OrderLastUpdated });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyOrderNumber).HasColumnName(@"ShopifyOrderNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyFinancialStatus).HasColumnName(@"ShopifyFinancialStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NeedsTransactionGet).HasColumnName(@"NeedsTransactionGet").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NeedsOrderPut).HasColumnName(@"NeedsOrderPut").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyRefundId).HasColumnName(@"ShopifyRefundId").HasColumnType("bigint").IsOptional();
            Property(x => x.OrderLastUpdated).HasColumnName(@"OrderLastUpdated").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RefundLastUpdated).HasColumnName(@"RefundLastUpdated").HasColumnType("datetime").IsOptional();
        }
    }

    // vw_ShopifyOrderTransactions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwShopifyOrderTransactionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwShopifyOrderTransaction>
    {
        public VwShopifyOrderTransactionConfiguration()
            : this("dbo")
        {
        }

        public VwShopifyOrderTransactionConfiguration(string schema)
        {
            ToTable("vw_ShopifyOrderTransactions", schema);
            HasKey(x => new { x.Id, x.ShopifyOrderId, x.ShopifyOrderNumber, x.ShopifyFinancialStatus, x.NeedsTransactionGet, x.NeedsOrderPut, x.OrderLastUpdated });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyOrderId).HasColumnName(@"ShopifyOrderId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyOrderNumber).HasColumnName(@"ShopifyOrderNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyFinancialStatus).HasColumnName(@"ShopifyFinancialStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NeedsTransactionGet).HasColumnName(@"NeedsTransactionGet").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NeedsOrderPut).HasColumnName(@"NeedsOrderPut").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyTransactionId).HasColumnName(@"ShopifyTransactionId").HasColumnType("bigint").IsOptional();
            Property(x => x.ShopifyKind).HasColumnName(@"ShopifyKind").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.ShopifyStatus).HasColumnName(@"ShopifyStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.OrderLastUpdated).HasColumnName(@"OrderLastUpdated").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TransactionLastUpdated).HasColumnName(@"TransactionLastUpdated").HasColumnType("datetime").IsOptional();
        }
    }

    // vw_SyncShopifyInventory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncShopifyInventoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwSyncShopifyInventory>
    {
        public VwSyncShopifyInventoryConfiguration()
            : this("dbo")
        {
        }

        public VwSyncShopifyInventoryConfiguration(string schema)
        {
            ToTable("vw_SyncShopifyInventory", schema);
            HasKey(x => x.ShopifyLocationName);

            Property(x => x.MonsterVariantId).HasColumnName(@"MonsterVariantId").HasColumnType("bigint").IsOptional();
            Property(x => x.ShopifySku).HasColumnName(@"ShopifySku").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ShopifyVariantId).HasColumnName(@"ShopifyVariantId").HasColumnType("bigint").IsOptional();
            Property(x => x.IsMissing).HasColumnName(@"IsMissing").HasColumnType("bit").IsOptional();
            Property(x => x.ShopifyAvailableQuantity).HasColumnName(@"ShopifyAvailableQuantity").HasColumnType("int").IsOptional();
            Property(x => x.ShopifyLocationId).HasColumnName(@"ShopifyLocationId").HasColumnType("bigint").IsOptional();
            Property(x => x.ShopifyLocationName).HasColumnName(@"ShopifyLocationName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LocationSyncId).HasColumnName(@"LocationSyncId").HasColumnType("bigint").IsOptional();
            Property(x => x.VariantSyncId).HasColumnName(@"VariantSyncId").HasColumnType("bigint").IsOptional();
        }
    }

    // vw_SyncVariantsAndStockItems_Alt
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VwSyncVariantsAndStockItemsAltConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwSyncVariantsAndStockItemsAlt>
    {
        public VwSyncVariantsAndStockItemsAltConfiguration()
            : this("dbo")
        {
        }

        public VwSyncVariantsAndStockItemsAltConfiguration(string schema)
        {
            ToTable("vw_SyncVariantsAndStockItems_Alt", schema);
            HasKey(x => new { x.MonsterVariantId, x.ShopifyProductId, x.ShopifyProductTitle, x.ShopifyVendor, x.ShopifyProductType, x.ShopifyVariantId, x.ShopifySku, x.ShopifyVariantTitle, x.AcumaticaItemId, x.IsSyncEnabled });

            Property(x => x.MonsterVariantId).HasColumnName(@"MonsterVariantId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyProductId).HasColumnName(@"ShopifyProductId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyProductTitle).HasColumnName(@"ShopifyProductTitle").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyVendor).HasColumnName(@"ShopifyVendor").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyProductType).HasColumnName(@"ShopifyProductType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyVariantId).HasColumnName(@"ShopifyVariantId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifySku).HasColumnName(@"ShopifySku").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShopifyVariantTitle).HasColumnName(@"ShopifyVariantTitle").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(200).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaItemId).HasColumnName(@"AcumaticaItemId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AcumaticaDescription).HasColumnName(@"AcumaticaDescription").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.IsSyncEnabled).HasColumnName(@"IsSyncEnabled").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    #endregion

    #region Stored procedure return models

    #endregion

}
// </auto-generated>

